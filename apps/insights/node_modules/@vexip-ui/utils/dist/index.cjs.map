{"version":3,"file":"index.cjs","sources":["../src/common.ts","../src/color.ts","../src/data.ts","../src/number.ts","../src/date.ts","../src/deep-clone.ts","../src/destroy-object.ts","../src/dom-event.ts","../src/dom.ts","../src/escape-html.ts","../src/event-emitter.ts","../src/log.ts","../src/performance.ts","../src/support.ts","../src/transform.ts","../src/vnode.ts","../src/word-case.ts"],"sourcesContent":["export const isClient = typeof window !== 'undefined'\nexport const isIOS =\n  /* #__PURE__ */ isClient &&\n  window?.navigator?.userAgent &&\n  /iP(ad|hone|od)/.test(window.navigator.userAgent)\n\nconst toString = Object.prototype.toString\nconst hasOwnProperty = Object.prototype.hasOwnProperty\n\nexport function is(value: unknown, type: string) {\n  return toString.call(value) === `[object ${type}]`\n}\n\nexport function has(value: Record<string, any>, key: string | symbol): key is keyof typeof value {\n  return hasOwnProperty.call(value, key)\n}\n\nexport function isDefined<T = unknown>(value: T | undefined | null): value is T {\n  return value !== undefined && value !== null\n}\n\nexport function isNull(value: unknown): value is null | undefined {\n  return value === undefined || value === null\n}\n\nexport function isNumber(value: unknown): value is number {\n  return typeof value === 'number'\n}\n\nexport function isNaN(value: unknown): value is number {\n  return Number.isNaN(value)\n}\n\nexport function isString(value: unknown): value is string {\n  return typeof value === 'string'\n}\n\nexport function isBoolean(value: unknown): value is boolean {\n  return typeof value === 'boolean'\n}\n\nexport function isTrue(value: unknown): value is true {\n  return value === true\n}\n\nexport function isFalse(value: unknown): value is false {\n  return value === false\n}\n\nexport function isSymbol(value: unknown): value is symbol {\n  return typeof value === 'symbol'\n}\n\nexport function isBigInt(value: unknown): value is bigint {\n  return typeof value === 'bigint'\n}\n\nexport function isArray(value: unknown): value is any[] {\n  return Array.isArray(value)\n}\n\nexport function isObject<T extends Record<string, any> = Record<string, any>>(\n  value: unknown\n): value is T {\n  return is(value, 'Object')\n}\n\nexport function isPromise(value: unknown): value is Promise<any> {\n  return (\n    !!value &&\n    typeof (value as any).then === 'function' &&\n    typeof (value as any).catch === 'function'\n  )\n}\n\nexport function isFunction(value: unknown): value is (...any: any[]) => any {\n  return typeof value === 'function'\n}\n\nexport function isSet(value: unknown): value is Set<any> {\n  return is(value, 'Set')\n}\n\nexport function isMap(value: unknown): value is Map<any, any> {\n  return is(value, 'Map')\n}\n\nexport function isDate(value: unknown): value is Date {\n  return is(value, 'Date')\n}\n\nexport function isRegExp(value: unknown): value is RegExp {\n  return is(value, 'RegExp')\n}\n\nexport function isEmpty(value: unknown) {\n  if (Array.isArray(value) || typeof value === 'string') {\n    return value.length === 0\n  }\n\n  if (value instanceof Map || value instanceof Set) {\n    return value.size === 0\n  }\n\n  if (isObject(value)) {\n    return Object.keys(value).length === 0\n  }\n\n  return false\n}\n\nexport function isElement(value: unknown): value is Element {\n  if (!isClient) return false\n\n  return !!(value && 'nodeType' in (value as any))\n}\n\nexport function noop(...args: any[]): any\n/* eslint-disable-next-line @typescript-eslint/no-empty-function */\nexport function noop() {}\n\nexport function toTrue(...args: any[]): true\nexport function toTrue() {\n  return true\n}\n\nexport function toFalse(...args: any[]): false\nexport function toFalse() {\n  return false\n}\n\n/**\n * 生成一个 range 数组\n *\n * @param size 大小\n * @param start 开始的数值，默认为 1\n * @param step 跨度，默认为 1\n */\nexport function range(size: number, start = 1, step = 1) {\n  const array: number[] = []\n\n  for (let i = 0; i < size; ++i) {\n    array.push(start + i * step)\n  }\n\n  return array\n}\n\n/**\n * 获取变量类型\n *\n * @param value 任意变量\n */\nexport function getType(value: unknown) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\n/**\n * 根据长度生成一串随机的字符串\n *\n * @param length 字符串的长度\n */\nexport function randomString(length = 16) {\n  const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'\n  const maxPos = chars.length\n\n  let string = ''\n\n  while (length--) {\n    string += chars.charAt(Math.floor(Math.random() * maxPos))\n  }\n\n  return string\n}\n","import { isDefined } from './common'\n\ninterface RGB {\n  r: number,\n  g: number,\n  b: number,\n  a?: number\n}\n\nexport interface RGBColor extends RGB {\n  a?: 1,\n  format?: 'name' | 'rgb'\n}\n\nexport interface RGBAColor extends RGB {\n  a: number,\n  format?: 'name' | 'rgba'\n}\n\nexport interface HEX3Color extends RGB {\n  a?: 1,\n  format?: 'name' | 'hex3'\n}\nexport interface HEX4Color extends RGB {\n  a: number,\n  format?: 'name' | 'hex4'\n}\nexport interface HEX6Color extends RGB {\n  a?: 1,\n  format?: 'name' | 'hex6'\n}\nexport interface HEX8Color extends RGB {\n  a: number,\n  format?: 'name' | 'hex8'\n}\n\ninterface HSL {\n  h: number,\n  s: number,\n  l: number,\n  a?: number\n}\n\nexport interface HSLColor extends HSL {\n  a?: 1,\n  format?: 'name' | 'hsl'\n}\n\nexport interface HSLAColor extends HSL {\n  a: number,\n  format?: 'name' | 'hsla'\n}\n\ninterface HSV {\n  h: number,\n  s: number,\n  v: number,\n  a?: number\n}\n\nexport interface HSVColor extends HSV {\n  a?: 1,\n  format?: 'name' | 'hsv'\n}\n\nexport interface HSVAColor extends HSV {\n  a: number,\n  format?: 'name' | 'hsva'\n}\n\nexport type Color =\n  | string\n  | RGBColor\n  | RGBAColor\n  | HSLColor\n  | HSLAColor\n  | HSVColor\n  | HSVAColor\n  | HEX3Color\n  | HEX4Color\n  | HEX6Color\n  | HEX8Color\n\nexport type ObjectColor = Exclude<Color, string>\nexport interface ColorMeta {\n  rgb: RGBColor,\n  hsl: HSLColor,\n  hsv: HSVColor,\n  hex: string,\n  alpha: number,\n  rgba: RGBAColor,\n  hsla: HSLAColor,\n  hsva: HSVAColor,\n  hex8: string,\n  origin: Color\n}\n\nconst INTEGER_REG = '[-\\\\+]?\\\\d+%?'\nconst NUMBER_REG = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?'\n\nconst NUMBER_UNIT = `(?:${NUMBER_REG})|(?:${INTEGER_REG})`\n\nconst COLOR_REG_3 = `[\\\\s|\\\\(]+(${NUMBER_UNIT})[,|\\\\s]+(${NUMBER_UNIT})[,|\\\\s]+(${NUMBER_UNIT})\\\\s*\\\\)?`\nconst COLOR_REG_4 = `[\\\\s|\\\\(]+(${NUMBER_UNIT})[,|\\\\s]+(${NUMBER_UNIT})[,|\\\\s]+(${NUMBER_UNIT})[,|\\\\s]+(${NUMBER_UNIT})\\\\s*\\\\)?`\n\n// const UNIT_REG = new RegExp(NUMBER_UNIT)\n\n// const FORMAT_REG = /^((((?:rgb)|(?:hsl)|(?:hsv))a?)|hex[3468]?|name)$/\n\nexport const RGB_REG = new RegExp(`rgb${COLOR_REG_3}`)\nexport const RGBA_REG = new RegExp(`rgba${COLOR_REG_4}`)\nexport const HSL_REG = new RegExp(`hsl${COLOR_REG_4}`)\nexport const HSLA_REG = new RegExp(`hsla${COLOR_REG_4}`)\nexport const HSV_REG = new RegExp(`hsv${COLOR_REG_4}`)\nexport const HSVA_REG = new RegExp(`hsva${COLOR_REG_4}`)\n\nexport const HEX_REG_3 = /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/\nexport const HEX_REG_4 = /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/\nexport const HEX_REG_6 = /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\nexport const HEX_REG_8 = /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n\nexport const NAMED_COLORS = Object.freeze({\n  aliceblue: 'f0f8ff',\n  antiquewhite: 'faebd7',\n  aqua: '0ff',\n  aquamarine: '7fffd4',\n  azure: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '000',\n  blanchedalmond: 'ffebcd',\n  blue: '00f',\n  blueviolet: '8a2be2',\n  brown: 'a52a2a',\n  burlywood: 'deb887',\n  burntsienna: 'ea7e5d',\n  cadetblue: '5f9ea0',\n  chartreuse: '7fff00',\n  chocolate: 'd2691e',\n  coral: 'ff7f50',\n  cornflowerblue: '6495ed',\n  cornsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: '0ff',\n  darkblue: '00008b',\n  darkcyan: '008b8b',\n  darkgoldenrod: 'b8860b',\n  darkgray: 'a9a9a9',\n  darkgreen: '006400',\n  darkgrey: 'a9a9a9',\n  darkkhaki: 'bdb76b',\n  darkmagenta: '8b008b',\n  darkolivegreen: '556b2f',\n  darkorange: 'ff8c00',\n  darkorchid: '9932cc',\n  darkred: '8b0000',\n  darksalmon: 'e9967a',\n  darkseagreen: '8fbc8f',\n  darkslateblue: '483d8b',\n  darkslategray: '2f4f4f',\n  darkslategrey: '2f4f4f',\n  darkturquoise: '00ced1',\n  darkviolet: '9400d3',\n  deeppink: 'ff1493',\n  deepskyblue: '00bfff',\n  dimgray: '696969',\n  dimgrey: '696969',\n  dodgerblue: '1e90ff',\n  firebrick: 'b22222',\n  floralwhite: 'fffaf0',\n  forestgreen: '228b22',\n  fuchsia: 'f0f',\n  gainsboro: 'dcdcdc',\n  ghostwhite: 'f8f8ff',\n  gold: 'ffd700',\n  goldenrod: 'daa520',\n  gray: '808080',\n  green: '008000',\n  greenyellow: 'adff2f',\n  grey: '808080',\n  honeydew: 'f0fff0',\n  hotpink: 'ff69b4',\n  indianred: 'cd5c5c',\n  indigo: '4b0082',\n  ivory: 'fffff0',\n  khaki: 'f0e68c',\n  lavender: 'e6e6fa',\n  lavenderblush: 'fff0f5',\n  lawngreen: '7cfc00',\n  lemonchiffon: 'fffacd',\n  lightblue: 'add8e6',\n  lightcoral: 'f08080',\n  lightcyan: 'e0ffff',\n  lightgoldenrodyellow: 'fafad2',\n  lightgray: 'd3d3d3',\n  lightgreen: '90ee90',\n  lightgrey: 'd3d3d3',\n  lightpink: 'ffb6c1',\n  lightsalmon: 'ffa07a',\n  lightseagreen: '20b2aa',\n  lightskyblue: '87cefa',\n  lightslategray: '789',\n  lightslategrey: '789',\n  lightsteelblue: 'b0c4de',\n  lightyellow: 'ffffe0',\n  lime: '0f0',\n  limegreen: '32cd32',\n  linen: 'faf0e6',\n  magenta: 'f0f',\n  maroon: '800000',\n  mediumaquamarine: '66cdaa',\n  mediumblue: '0000cd',\n  mediumorchid: 'ba55d3',\n  mediumpurple: '9370db',\n  mediumseagreen: '3cb371',\n  mediumslateblue: '7b68ee',\n  mediumspringgreen: '00fa9a',\n  mediumturquoise: '48d1cc',\n  mediumvioletred: 'c71585',\n  midnightblue: '191970',\n  mintcream: 'f5fffa',\n  mistyrose: 'ffe4e1',\n  moccasin: 'ffe4b5',\n  navajowhite: 'ffdead',\n  navy: '000080',\n  oldlace: 'fdf5e6',\n  olive: '808000',\n  olivedrab: '6b8e23',\n  orange: 'ffa500',\n  orangered: 'ff4500',\n  orchid: 'da70d6',\n  palegoldenrod: 'eee8aa',\n  palegreen: '98fb98',\n  paleturquoise: 'afeeee',\n  palevioletred: 'db7093',\n  papayawhip: 'ffefd5',\n  peachpuff: 'ffdab9',\n  peru: 'cd853f',\n  pink: 'ffc0cb',\n  plum: 'dda0dd',\n  powderblue: 'b0e0e6',\n  purple: '800080',\n  rebeccapurple: '663399',\n  red: 'f00',\n  rosybrown: 'bc8f8f',\n  royalblue: '4169e1',\n  saddlebrown: '8b4513',\n  salmon: 'fa8072',\n  sandybrown: 'f4a460',\n  seagreen: '2e8b57',\n  seashell: 'fff5ee',\n  sienna: 'a0522d',\n  silver: 'c0c0c0',\n  skyblue: '87ceeb',\n  slateblue: '6a5acd',\n  slategray: '708090',\n  slategrey: '708090',\n  snow: 'fffafa',\n  springgreen: '00ff7f',\n  steelblue: '4682b4',\n  tan: 'd2b48c',\n  teal: '008080',\n  thistle: 'd8bfd8',\n  tomato: 'ff6347',\n  turquoise: '40e0d0',\n  violet: 'ee82ee',\n  wheat: 'f5deb3',\n  white: 'fff',\n  whitesmoke: 'f5f5f5',\n  yellow: 'ff0',\n  yellowgreen: '9acd32'\n})\n\nexport type ColorName = keyof typeof NAMED_COLORS\n\nexport const COLOR_NAMES = Object.freeze(new Set(Object.keys(NAMED_COLORS))) as Readonly<\n  Set<ColorName>\n>\n\n/**\n * 判断给定的字符串是否为一个合法颜色值\n *\n * @param value 原始字符串\n */\nexport function isColor(value: string): boolean {\n  value = String(value).trim().toLowerCase()\n\n  if (!value) {\n    return false\n  }\n\n  if (value === 'transparent' || NAMED_COLORS[value as ColorName]) {\n    return true\n  }\n\n  return (\n    value === 'transparent' ||\n    COLOR_NAMES.has(value as ColorName) ||\n    RGB_REG.test(value) ||\n    RGBA_REG.test(value) ||\n    HSL_REG.test(value) ||\n    HSLA_REG.test(value) ||\n    HSV_REG.test(value) ||\n    HSVA_REG.test(value) ||\n    HEX_REG_3.test(value) ||\n    HEX_REG_4.test(value) ||\n    HEX_REG_6.test(value) ||\n    HEX_REG_8.test(value)\n  )\n}\n\n/**\n * 将给定的字符串转化为 {@link ObjectColor}，无法转换时返回 null\n *\n * @param color 原始颜色字符串\n */\nexport function parseStringColor(color: string) {\n  color = color.toString().trim().toLowerCase()\n\n  if (color === 'transparent') {\n    return { r: 0, g: 0, b: 0, a: 0, format: 'name', toString: toRgbString } as ObjectColor\n  }\n\n  let named = false\n\n  if (NAMED_COLORS[color as ColorName]) {\n    color = NAMED_COLORS[color as ColorName]\n    named = true\n  }\n\n  let match\n\n  if ((match = RGB_REG.exec(color))) {\n    const { r, g, b } = normalizeRgb(match[1], match[2], match[3])\n\n    return {\n      r: r * 255,\n      g: g * 255,\n      b: b * 255,\n      format: 'rgb',\n      toString: toRgbString\n    } as ObjectColor\n  }\n\n  if ((match = RGBA_REG.exec(color))) {\n    const { r, g, b } = normalizeRgb(match[1], match[2], match[3])\n\n    return {\n      r: r * 255,\n      g: g * 255,\n      b: b * 255,\n      a: normalizeAlpha(match[4]),\n      format: 'rgba',\n      toString: toRgbString\n    } as ObjectColor\n  }\n\n  if ((match = HSL_REG.exec(color))) {\n    const { h, s, l } = normalizeHsl(match[0], match[1], match[3])\n\n    return { h: h * 360, s, l, format: 'hsl', toString: toHslString } as ObjectColor\n  }\n\n  if ((match = HSLA_REG.exec(color))) {\n    const { h, s, l } = normalizeHsl(match[0], match[1], match[3])\n\n    return {\n      h: h * 360,\n      s,\n      l,\n      a: normalizeAlpha(match[4]),\n      format: 'hsla',\n      toString: toHslString\n    } as ObjectColor\n  }\n\n  if ((match = HSV_REG.exec(color))) {\n    const { h, s, v } = normalizeHsv(match[0], match[1], match[3])\n\n    return { h: h * 360, s, v, format: 'hsv', toString: toHsvString } as ObjectColor\n  }\n\n  if ((match = HSVA_REG.exec(color))) {\n    const { h, s, v } = normalizeHsv(match[0], match[1], match[3])\n\n    return {\n      h: h * 360,\n      s,\n      v,\n      a: normalizeAlpha(match[4]),\n      format: 'hsva',\n      toString: toHsvString\n    } as ObjectColor\n  }\n\n  if ((match = HEX_REG_3.exec(color))) {\n    return {\n      r: parseInt(`${match[1]}${match[1]}`, 16),\n      g: parseInt(`${match[2]}${match[2]}`, 16),\n      b: parseInt(`${match[3]}${match[3]}`, 16),\n      format: named ? 'name' : 'hex3',\n      toString: toRgbString\n    } as ObjectColor\n  }\n\n  if ((match = HEX_REG_4.exec(color))) {\n    return {\n      r: parseInt(`${match[1]}${match[1]}`, 16),\n      g: parseInt(`${match[2]}${match[2]}`, 16),\n      b: parseInt(`${match[3]}${match[3]}`, 16),\n      a: convertHexToDecimal(`${match[4]}${match[4]}`),\n      format: named ? 'name' : 'hex4',\n      toString: toRgbString\n    } as ObjectColor\n  }\n\n  if ((match = HEX_REG_6.exec(color))) {\n    return {\n      r: parseInt(match[1], 16),\n      g: parseInt(match[2], 16),\n      b: parseInt(match[3], 16),\n      format: named ? 'name' : 'hex6',\n      toString: toRgbString\n    } as ObjectColor\n  }\n\n  if ((match = HEX_REG_8.exec(color))) {\n    return {\n      r: parseInt(match[1], 16),\n      g: parseInt(match[2], 16),\n      b: parseInt(match[3], 16),\n      a: convertHexToDecimal(match[4]),\n      format: named ? 'name' : 'hex8',\n      toString: toRgbString\n    } as ObjectColor\n  }\n\n  return null\n}\n\n/**\n * 将给定的 {@link Color} 解析为 {@link ColorMeta}\n *\n * @param color 原始颜色值\n */\nexport function parseColor(color: Color): ColorMeta {\n  const { a, ...rgb } = parseColorToRgba(color)\n\n  delete rgb.format\n\n  const hsl = rgbToHsl(rgb.r, rgb.g, rgb.b)\n  const hsv = rgbToHsv(rgb.r, rgb.g, rgb.b)\n  const hex = rgbToHex(rgb.r, rgb.g, rgb.b)\n\n  const hex8 = rgbaToHex(rgb.r, rgb.g, rgb.b, a)\n\n  return {\n    rgb: rgb as RGBColor,\n    hsl,\n    hsv,\n    hex,\n    alpha: a,\n    rgba: { ...rgb, a, format: 'rgba' },\n    hsla: { ...hsl, a, format: 'hsla' },\n    hsva: { ...hsv, a, format: 'hsva' },\n    hex8,\n    origin: color\n  }\n}\n\n/**\n * 将给定的 {@link Color} 解析为 {@link RGBAColor}\n *\n * @param originColor 原始颜色值\n */\nexport function parseColorToRgba(originColor: Color) {\n  let rgb: RGBColor = { r: 0, g: 0, b: 0 }\n  let a = 1\n  let color: Color | null\n\n  if (typeof originColor === 'string') {\n    color = parseStringColor(originColor)\n  } else {\n    color = originColor\n  }\n\n  if (color !== null && typeof color === 'object') {\n    if ('l' in color) {\n      rgb = hslToRgb(color.h, color.s, color.l)\n    } else if ('v' in color) {\n      rgb = hsvToRgb(color.h, color.s, color.v)\n    }\n\n    if ('a' in color) {\n      a = normalizeAlpha(color.a ?? 1)\n\n      if (Number.isNaN(a)) {\n        a = 1\n      }\n    }\n\n    rgb = color as RGBColor\n  }\n\n  return { ...rgb, a, format: 'rgba', toString: toRgbString } as RGBAColor\n}\n\n/**\n * 将原始的 h、s、l 值标准化为 0 ~ 1 的值\n *\n * @param h 0 ~ 360\n * @param s 0 ~ 1，0% ~ 100%\n * @param l 0 ~ 1，0% ~ 100%\n */\nexport function normalizeHsl(h: number | string, s: number | string, l: number | string) {\n  return {\n    h: boundRange(h, 0, 360) / 360,\n    s: boundRange(isPercentage(s) ? parsePercentage(s) : s, 0, 1),\n    l: boundRange(isPercentage(l) ? parsePercentage(l) : l, 0, 1)\n  }\n}\n\n/**\n * 将原始的 r、g、b 值标准化为 0 ~ 1 的值\n *\n * @param r 0 ~ 255\n * @param g 0 ~ 255\n * @param b 0 ~ 255\n */\nexport function normalizeRgb(r: number | string, g: number | string, b: number | string) {\n  return {\n    r: boundRange(r, 0, 255) / 255,\n    g: boundRange(g, 0, 255) / 255,\n    b: boundRange(b, 0, 255) / 255\n  }\n}\n\n/**\n * 将原始的 h、s、v 值标准化为 0 ~ 1 的值\n *\n * @param h 0 ~ 360\n * @param s 0 ~ 1，0% ~ 100%\n * @param v 0 ~ 1，0% ~ 100%\n */\nexport function normalizeHsv(h: number | string, s: number | string, v: number | string) {\n  return {\n    h: boundRange(h, 0, 360) / 360,\n    s: boundRange(isPercentage(s) ? parsePercentage(s) : s, 0, 1),\n    v: boundRange(isPercentage(v) ? parsePercentage(v) : v, 0, 1)\n  }\n}\n\n/**\n * 将原始透明度值标准化为 0 ~ 1 的值\n *\n * @param a 0 ~ 1，0% ~ 100%\n */\nexport function normalizeAlpha(a: number | string) {\n  return boundRange(isPercentage(a) ? parsePercentage(a) : a, 0, 1)\n}\n\nexport function hslToRgb(h: number | string, s: number | string, l: number | string) {\n  let r, g, b\n  ;({ h, s, l } = normalizeHsl(h, s, l))\n\n  if (s === 0) {\n    r = g = b = l\n  } else {\n    const q = l < 0.5 ? 1 * (1 + s) : l + s - l * s\n    const p = 2 * l - q\n\n    r = hueToRgb(p, q, h + 1 / 3)\n    g = hueToRgb(p, q, h)\n    b = hueToRgb(p, q, h - 1 / 3)\n  }\n\n  r *= 255\n  g *= 255\n  b *= 255\n\n  return { r, g, b, toString: toRgbString } as RGBColor\n}\n\nexport function rgbToHsl(r: number | string, g: number | string, b: number | string) {\n  ({ r, g, b } = normalizeRgb(r, g, b))\n\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n  let h, s\n\n  const l = (max + min) / 2\n\n  if (max === min) {\n    h = s = 0\n  } else {\n    const d = max - min\n\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\n\n    switch (max) {\n      case r: {\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      }\n      case g: {\n        h = (b - r) / d + 2\n        break\n      }\n      case b: {\n        h = (r - g) / d + 4\n        break\n      }\n      default: {\n        h = 0\n      }\n    }\n\n    h *= 60\n  }\n\n  return { h, s, l, toString: toHslString } as HSLColor\n}\n\nexport function hslToHsv(h: number | string, s: number | string, l: number | string) {\n  ({ h, s, l } = normalizeHsl(h, s, l))\n\n  const v = 0.5 * (2 * l + s * (1 - Math.abs(2 * l - 1)))\n\n  s = (2 * (v - l)) / v\n\n  return { h: h * 360, s, v, toString: toHsvString } as HSVColor\n}\n\nexport function hsvToHsl(h: number | string, s: number | string, v: number | string) {\n  ({ h, s, v } = normalizeHsv(h, s, v))\n\n  const l = 0.5 * v * (2 - s)\n\n  s = (v * s) / (1 - Math.abs(2 * l - 1))\n\n  return { h: h * 360, s, l, toString: toHslString } as HSLColor\n}\n\nexport function hsvToRgb(h: number | string, s: number | string, v: number | string) {\n  ({ h, s, v } = normalizeHsv(h, s, v))\n\n  h *= 6\n\n  const i = Math.floor(h)\n  const f = h - i\n  const p = v * (1 - s)\n  const q = v * (1 - f * s)\n  const t = v * (1 - (1 - f) * s)\n  const mod = i % 6\n\n  let r = [v, q, p, p, t, v][mod]\n  let g = [t, v, v, q, p, p][mod]\n  let b = [p, p, t, v, v, q][mod]\n\n  r *= 255\n  g *= 255\n  b *= 255\n\n  return { r, g, b, toString: toRgbString } as RGBColor\n}\n\nexport function rgbToHsv(r: number | string, g: number | string, b: number | string) {\n  ({ r, g, b } = normalizeRgb(r, g, b))\n\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n\n  let h\n\n  const v = max\n  const d = max - min\n  const s = max === 0 ? 0 : d / max\n\n  if (max === min) {\n    h = 0\n  } else {\n    switch (max) {\n      case r: {\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      }\n      case g: {\n        h = (b - r) / d + 2\n        break\n      }\n      case b: {\n        h = (r - g) / d + 4\n        break\n      }\n      default: {\n        h = 0\n      }\n    }\n\n    h *= 60\n  }\n\n  return { h, s, v, toString: toHsvString } as HSVColor\n}\n\nexport function rgbToHex(\n  r: number | string,\n  g: number | string,\n  b: number | string,\n  allow3Char = false\n) {\n  ({ r, g, b } = normalizeRgb(r, g, b))\n\n  const hex = [\n    repairDigits(Math.round(r * 255).toString(16)),\n    repairDigits(Math.round(g * 255).toString(16)),\n    repairDigits(Math.round(b * 255).toString(16))\n  ]\n\n  if (allow3Char && isRepetitive(hex[0]) && isRepetitive(hex[1]) && isRepetitive(hex[2])) {\n    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0)\n  }\n\n  return '#' + hex.join('')\n}\n\nexport function rgbaToHex(\n  r: number | string,\n  g: number | string,\n  b: number | string,\n  a: number | string,\n  allow4Char = false\n) {\n  ({ r, g, b } = normalizeRgb(r, g, b))\n\n  const hex = [\n    repairDigits(Math.round(r * 255).toString(16)),\n    repairDigits(Math.round(g * 255).toString(16)),\n    repairDigits(Math.round(b * 255).toString(16)),\n    repairDigits(convertDecimalToHex(normalizeAlpha(a)))\n  ]\n\n  if (\n    allow4Char &&\n    isRepetitive(hex[0]) &&\n    isRepetitive(hex[1]) &&\n    isRepetitive(hex[2]) &&\n    isRepetitive(hex[3])\n  ) {\n    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0)\n  }\n\n  return '#' + hex.join('')\n}\n\nexport function mixColor(color1: Color, color2: Color, weight = 0.5) {\n  if (!color1 && !color2) return { r: 0, g: 0, b: 0, a: 1 }\n  if (!color1) return parseColorToRgba(color2)\n  if (!color2) return parseColorToRgba(color1)\n\n  const rgba1 = parseColorToRgba(color1)\n  const rgba2 = parseColorToRgba(color2)\n\n  const originalWeight = boundRange(weight, 0, 1)\n  const normalizedWeight = originalWeight * 2 - 1\n\n  const alphaDistance = rgba1.a - rgba2.a\n  const mixWeight =\n    normalizedWeight * alphaDistance === -1\n      ? normalizedWeight\n      : (normalizedWeight + alphaDistance) / (1 + normalizedWeight * alphaDistance)\n  const weight1 = (mixWeight + 1) / 2\n  const weight2 = 1 - weight1\n\n  return {\n    r: Math.round(rgba1.r * weight1 + rgba2.r * weight2),\n    g: Math.round(rgba1.g * weight1 + rgba2.g * weight2),\n    b: Math.round(rgba1.b * weight1 + rgba2.b * weight2),\n    a: Math.round(rgba1.a * originalWeight + rgba2.a * (1 - originalWeight)),\n    format: 'rgba',\n    toString: toRgbString\n  } as RGBAColor\n}\n\nexport function adjustAlpha(color: Color, alpha: number | string) {\n  const rgba = parseColorToRgba(color)\n\n  rgba.a = normalizeAlpha(isPercentage(alpha) ? parsePercentage(alpha) : alpha)\n\n  return rgba\n}\n\nexport function randomColor(withAlpha = false, type: 'hex' | 'rgb' | 'hsv' | 'hsl' = 'hex') {\n  const r = Math.round(Math.random() * 255)\n  const g = Math.round(Math.random() * 255)\n  const b = Math.round(Math.random() * 255)\n\n  if (type === 'hex') {\n    return withAlpha ? rgbaToHex(r, g, b, Math.random()) : rgbToHex(r, g, b)\n  }\n\n  let color: ObjectColor\n\n  if (type === 'hsl') {\n    color = rgbToHsl(r, g, b)\n  } else if (type === 'hsv') {\n    color = rgbToHsv(r, g, b)\n  } else {\n    color = { r, g, b }\n  }\n\n  if (withAlpha) {\n    (color as RGBAColor).a = Math.random()\n  }\n\n  return color.toString()\n}\n\nfunction repairDigits(str: string) {\n  return str.length === 1 ? `0${str}` : str.toString()\n}\n\nfunction isRepetitive(string: string): boolean {\n  return string.charAt(0) === string.charAt(1)\n}\n\n// function testUnit(color: number | string): boolean {\n//   return UNIT_REG.test(color as string)\n// }\n\nfunction convertDecimalToHex(number: number | string): string {\n  return Math.round(parseFloat(number as string) * 255).toString(16)\n}\n\nfunction convertHexToDecimal(hex: string): number {\n  return parseInt(hex, 16) / 255\n}\n\nfunction boundRange(number: number | string, min: number, max: number): number {\n  return Math.max(min, Math.min(max, parseFloat(number as string)))\n}\n\nfunction hueToRgb(p: number, q: number, t: number): number {\n  if (t < 0) t += 1\n  if (t > 1) t -= 1\n  if (t < 1 / 6) return p + (q - p) * 6 * t\n  if (t < 1 / 2) return q\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n\n  return p\n}\n\nfunction isPercentage(percent: number | string): boolean {\n  return String(percent).trim().includes('%')\n}\n\nfunction parsePercentage(percent: number | string): number {\n  const number = parseFloat(percent as string) / 100\n\n  return Number.isNaN(number) ? 0 : number\n}\n\nfunction toRgbString(this: RGB) {\n  if (isDefined(this.a) && this.a >= 0 && this.a < 1) {\n    return `rgba(${this.r}, ${this.g}, ${this.b}, ${this.a})`\n  }\n\n  return `rgb(${this.r}, ${this.g}, ${this.b})`\n}\n\nfunction toHslString(this: HSL) {\n  if (isDefined(this.a) && this.a >= 0 && this.a < 1) {\n    return `hsla(${this.h}, ${this.s}, ${this.l}, ${this.a})`\n  }\n\n  return `hsl(${this.h}, ${this.s}, ${this.l})`\n}\n\nfunction toHsvString(this: HSV) {\n  if (isDefined(this.a) && this.a >= 0 && this.a < 1) {\n    return `hsva(${this.h}, ${this.s}, ${this.v}, ${this.a})`\n  }\n\n  return `hsv(${this.h}, ${this.s}, ${this.v})`\n}\n","export interface BITree {\n  add(index: number, num: number): void,\n  sum(index?: number): number,\n  get(index: number): number,\n  boundIndex(limit: number): number\n}\n\nfunction lowBit(num: number) {\n  return num & -num\n}\n\nexport function createBITree(length: number, min = 0): BITree {\n  const tree = new Array(length + 1).fill(0)\n\n  /**\n   * 为第 index 个元素增/减值\n   */\n  function add(index: number, delta: number) {\n    if (!delta || index >= length) return\n\n    index += 1\n\n    while (index <= length) {\n      tree[index] += delta\n      index += lowBit(index)\n    }\n  }\n\n  /**\n   * 求前 index 个元素的和\n   */\n  function sum(index = length) {\n    if (index <= 0) return 0\n    if (index > length) index = length\n\n    let sum = index * min\n\n    while (index > 0) {\n      sum += tree[index]\n      index -= lowBit(index)\n    }\n\n    return sum\n  }\n\n  /**\n   * 获取第 index 个元素的值\n   */\n  function get(index: number) {\n    return sum(index + 1) - sum(index)\n  }\n\n  /**\n   * 根据 limit 提供的值寻找一个命中的元素的 index\n   */\n  function boundIndex(limit: number) {\n    let left = 0\n    let right = length\n\n    while (right > left) {\n      const middle = Math.floor((left + right) / 2)\n      const total = sum(middle)\n\n      if (total > limit) {\n        right = middle\n        continue\n      } else if (total < limit) {\n        if (left === middle) {\n          return sum(left + 1) <= limit ? left + 1 : left\n        }\n\n        left = middle\n      } else {\n        return middle\n      }\n    }\n\n    return left\n  }\n\n  return { add, sum, get, boundIndex }\n}\n","import type { AnyCase } from './word-case'\n\n/**\n * 将给定的值转成数字，NaN 的情况将会处理成 0\n *\n * @param value 需要转化的值\n */\nexport function toNumber(value: unknown) {\n  const number = parseFloat(value as string)\n\n  return Number.isNaN(number) ? 0 : number\n}\n\n/**\n * 将小于 10 整数 N 变成 `0N` 的字符串，方法不会对入参校验\n *\n * @param number 需要处理的整数\n */\nexport function doubleDigits(number: number) {\n  return number < 10 ? `0${number}` : number.toString()\n}\n\n/**\n * Return digits length of a number.\n *\n * @param number The input number\n */\nexport function digitLength(number: number | string) {\n  // Get digit length of e\n  const eSplit = number.toString().split(/[eE]/)\n  const len = (eSplit[0].split('.')[1] || '').length - +(eSplit[1] || 0)\n\n  return len > 0 ? len : 0\n}\n\n/**\n * 将给定的数字格式化为三位阶\n *\n * @param number 需要格式化的数字\n * @param segment 分隔的位数，默认为 3\n * @param separator 分隔的符号，默认为 ','\n */\nexport function segmentNumber(number: number | string, segment = 3, separator = ','): string {\n  if (typeof number !== 'number') {\n    number = parseFloat(number)\n  }\n\n  if (Number.isNaN(number)) return '0'\n\n  let [integer, decimal] = String(number).split('.')\n\n  const formatRegExp = new RegExp(`(\\\\d+)(\\\\d{${segment}})`)\n\n  while (formatRegExp.test(integer)) {\n    integer = integer.replace(formatRegExp, `$1${separator}$2`)\n  }\n\n  decimal = decimal ? `.${decimal}` : ''\n\n  return `${integer}${decimal}`\n}\n\n/**\n * 将给定的实数保留一定的小数\n *\n * @param number 需要处理的实数\n * @param decimal 需要保留的小数\n */\nexport function toFixed(number: number, decimal: number) {\n  if (decimal === 0) return Math.round(number)\n\n  let snum = number.toFixed(digitLength(number))\n\n  const pointPos = snum.indexOf('.')\n\n  if (pointPos === -1) return number\n\n  const nums = snum.replace('.', '').split('')\n  const targetPos = pointPos + decimal\n  const datum = nums[targetPos]\n\n  if (!datum) return number\n\n  if (snum.charAt(targetPos + 1) === '5') {\n    snum = snum.substring(0, targetPos + 1) + '6'\n  } else {\n    snum = snum.substring(0, targetPos + 2)\n  }\n\n  return parseFloat(Number(snum).toFixed(decimal))\n}\n\n/**\n * 将给定的实数扩大一定的倍数并保留一定的小数\n *\n * @param number 要处理的实数\n * @param multiple 要扩大的倍数\n * @param decimal 要保留的小数\n */\nexport function multipleFixed(number: number, multiple: number, decimal: number) {\n  return toFixed(number * multiple, decimal)\n}\n\n/**\n * 根据临界值对给定的数字进行舍入\n *\n * @param number 需要舍入的数\n * @param criticalValue 舍入的临界值 (0 ~ 1)，达到临界值进位反之舍弃\n */\nexport function round(number: number, criticalValue: number) {\n  if (criticalValue < 0 || criticalValue > 1) {\n    return Math.round(number)\n  }\n\n  const ceilValue = Math.ceil(number)\n\n  if (number + criticalValue >= ceilValue) {\n    return ceilValue\n  } else {\n    return Math.floor(number)\n  }\n}\n\n/**\n * 将给定的数字限定在指定的范围内\n *\n * @param number 需要限定范围的数\n * @param min 边界最小值，包含该值\n * @param max 边界最大值，包含该值\n */\nexport function boundRange(number: number | string, min: number, max: number) {\n  return Math.max(min, Math.min(max, parseFloat(number as string)))\n}\n\nexport type SizeUnitWithAuto = AnyCase<'B' | 'KB' | 'MB' | 'GB' | 'TB' | 'AUTO'>\nexport type SizeUnit = Exclude<SizeUnitWithAuto, AnyCase<'AUTO'>>\n\nconst SIZE_UNIT_WITH_AUTO = Object.freeze([\n  'B',\n  'KB',\n  'MB',\n  'GB',\n  'TB',\n  'AUTO'\n] as Uppercase<SizeUnitWithAuto>[])\n\n/**\n * 根据给定的 Byte 数值，将其格式化成指定单位的大小\n *\n * @param byte 需要计算的 Byte 数值\n * @param unit 格式化的单位\n */\nexport function formatByteSize(byte: number, unit: SizeUnitWithAuto = 'AUTO') {\n  let upperUnit = unit.toUpperCase() as Uppercase<SizeUnitWithAuto>\n  upperUnit = SIZE_UNIT_WITH_AUTO.includes(upperUnit) ? upperUnit : 'AUTO'\n\n  let power\n  switch (upperUnit) {\n    case 'AUTO':\n      power = 0\n      break\n    case 'KB':\n      power = 1\n      break\n    case 'MB':\n      power = 2\n      break\n    case 'GB':\n      power = 3\n      break\n    case 'TB':\n      power = 4\n      break\n    default:\n      return byte\n  }\n\n  let targetSize\n\n  if (!power) {\n    for (targetSize = byte; targetSize > 1024; ++power) {\n      if (power > 4) break\n      targetSize = targetSize / 1024\n    }\n  } else {\n    targetSize = byte / 1024 ** power\n  }\n\n  return targetSize\n}\n\n/**\n * Correct the given number to specifying significant digits.\n *\n * @param number The input number\n * @param precision An integer specifying the number of significant digits\n *\n * @example toPrecision(0.09999999999999998) === 0.1 // true\n */\nexport function toPrecision(number: number | string, precision = 15) {\n  return +parseFloat(Number(number).toPrecision(precision))\n}\n\nfunction multipleInt(number: number | string) {\n  const snum = String(number)\n\n  if (!snum.includes('e')) {\n    return Number(snum.replace('.', ''))\n  }\n\n  const dLength = digitLength(number)\n\n  return dLength > 0 ? toPrecision(Number(number) * 10 ** dLength) : Number(number)\n}\n\n/**\n * Create an operation to support rest params.\n *\n * @param operation The original operation\n */\nfunction createOperation(operation: (n1: number | string, n2: number | string) => number) {\n  return (...numbers: (number | string)[]) => {\n    let result = numbers[0] as number\n\n    for (let i = 1, len = numbers.length; i < len; ++i) {\n      result = operation(result, numbers[i])\n    }\n\n    return result\n  }\n}\n\n/**\n * Accurate multiplication.\n *\n * @param numbers The numbers to multiply\n */\nexport const times = createOperation((number1, number2) => {\n  const int1 = multipleInt(number1)\n  const int2 = multipleInt(number2)\n  const base = digitLength(number1) + digitLength(number2)\n  const int = int1 * int2\n\n  return int / 10 ** base\n})\n\n/**\n * Accurate addition.\n *\n * @param numbers The numbers to add\n */\nexport const plus = createOperation((number1, number2) => {\n  const base = 10 ** Math.max(digitLength(number1), digitLength(number2))\n\n  return (times(number1, base) + times(number2, base)) / base\n})\n\n/**\n * Accurate subtraction\n *\n * @param numbers The numbers to subtract\n */\nexport const minus = createOperation((number1, number2) => {\n  const base = 10 ** Math.max(digitLength(number1), digitLength(number2))\n\n  return (times(number1, base) - times(number2, base)) / base\n})\n\n/**\n * Accurate division.\n *\n * @param numbers The numbers to divide\n */\nexport const divide = createOperation((number1, number2) => {\n  const int1 = multipleInt(number1)\n  const int2 = multipleInt(number2)\n\n  return times(int1 / int2, toPrecision(10 ** (digitLength(number2) - digitLength(number1))))\n})\n","import { doubleDigits } from './number'\n\nexport type Dateable = number | string | Date\n\nexport const SECOND_ON_MILLS = 1000\n\nexport const MINUTE_ON_SECONDS = 60\nexport const MINUTE_ON_MILLS = MINUTE_ON_SECONDS * SECOND_ON_MILLS\n\nexport const HOUR_ON_MINUTES = 60\nexport const HOUR_ON_SECONDS = HOUR_ON_MINUTES * MINUTE_ON_SECONDS\nexport const HOUR_ON_MILLS = HOUR_ON_SECONDS * SECOND_ON_MILLS\n\nexport const DAY_ON_HOURS = 24\nexport const DAY_ON_MINUTES = DAY_ON_HOURS * HOUR_ON_MINUTES\nexport const DAY_ON_SECONDS = DAY_ON_MINUTES * MINUTE_ON_SECONDS\nexport const DAY_ON_MILLIS = DAY_ON_SECONDS * SECOND_ON_MILLS\n\nexport const WEEK_ON_DAYS = 7\nexport const WEEK_ON_HOURS = WEEK_ON_DAYS * DAY_ON_HOURS\nexport const WEEK_ON_MINUTES = WEEK_ON_HOURS * HOUR_ON_MINUTES\nexport const WEEK_ON_SECONDS = WEEK_ON_MINUTES * MINUTE_ON_SECONDS\nexport const WEEK_ON_MILLIS = WEEK_ON_SECONDS * SECOND_ON_MILLS\n\nexport const QUARTER_ON_MONTHS = 3\n\nexport const YEAR_ON_QUARTERS = 4\nexport const YEAR_ON_MONTHS = YEAR_ON_QUARTERS * QUARTER_ON_MONTHS\n\ntype Formatter = (date: Date, match: string) => string | number\n\ninterface Formatters {\n  [prop: string]: Formatter\n}\n\nconst formatters: Formatters = {\n  y(date, match) {\n    const year = date.getFullYear()\n\n    return match.length === 4 ? year : (year % 1000) % 100\n  },\n  M(date, match) {\n    const month = date.getMonth() + 1\n\n    return match.length === 2 ? doubleDigits(month) : month\n  },\n  d(date, match) {\n    const day = date.getDate()\n\n    return match.length === 2 ? doubleDigits(day) : day\n  },\n  H(date, match) {\n    const hour = date.getHours()\n\n    return match.length === 2 ? doubleDigits(hour) : hour\n  },\n  m(date, match) {\n    const minute = date.getMinutes()\n\n    return match.length === 2 ? doubleDigits(minute) : minute\n  },\n  s(date, match) {\n    const second = date.getSeconds()\n\n    return match.length === 2 ? doubleDigits(second) : second\n  },\n  q(date, match) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3)\n\n    return match.length === 2 ? doubleDigits(quarter) : quarter\n  }\n}\n\nconst formatRegExp = /[yMdHmsq](\\w)*|./g\nconst quotationRegExp = /'(.+?)'/g\n\n/**\n * 将任意可转为 Date 的变量转为一个新日期\n *\n * @param any 任意可转换的值\n * @param strict 是否在传入非法值时抛错\n */\nexport function toDate(any: Dateable, strict = false) {\n  const date = new Date(any)\n\n  if (strict && Number.isNaN(+date)) {\n    throw new RangeError('Invalid date value')\n  }\n\n  if (typeof any === 'string' && !any.includes(':')) {\n    date.setHours(0)\n    date.setMinutes(0)\n    date.setSeconds(0)\n  }\n\n  return date\n}\n\n/**\n * 将日期格式化成指定格式\n *\n * @param date 需要格式化的Date对象\n * @param pattern 格式化结构 年-y 月-M 日-d 时-H 分-m 秒-s 季度-q\n *\n * @example format(new Date(), 'yyyy-MM-dd')\n * @example format(Date.now(), 'yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\'')\n */\nexport function format(date: Dateable, pattern = 'yyyy-MM-dd HH:mm:ss') {\n  date = toDate(date)\n\n  const matchs = pattern.match(formatRegExp)\n  const length = matchs?.length\n\n  if (!length) {\n    return pattern\n  }\n\n  let i = 0\n  let result = ''\n\n  while (i < length) {\n    const substring = (matchs as RegExpMatchArray)[i]\n    const firstCharacter = substring[0]\n    const formatter = formatters[firstCharacter]\n\n    if (formatter) {\n      result += formatter(date, substring)\n    } else {\n      result += substring\n    }\n\n    ++i\n  }\n\n  return result.replace(quotationRegExp, '$1')\n}\n\n/**\n * 获取日期的时间部分\n *\n * @param date 给定的日期\n */\nexport function getTime(date: Dateable) {\n  date = toDate(date)\n\n  return `${doubleDigits(date.getHours())}:${doubleDigits(date.getMinutes())}:${doubleDigits(\n    date.getSeconds()\n  )}`\n}\n\n/**\n * 获取日期所在的季度\n *\n * @param date 给定的日期\n */\nexport function getQuarter(date: Dateable) {\n  date = toDate(date)\n\n  return Math.floor(date.getMonth() / 3) + 1\n}\n\nconst weeksForChinese = ['日', '一', '二', '三', '四', '五', '六']\n\n/**\n * 获取中文星期\n *\n * @param date 给定的日期\n */\nexport function getChineseWeek(date: Date) {\n  return weeksForChinese[date.getDay()]\n}\n\n/**\n * 为日期增减给定的毫秒\n *\n * @param date 原始日期\n * @param amount 增减的毫秒\n */\nexport function addMilliseconds(date: Dateable, amount: number) {\n  date = toDate(date)\n  date.setTime(date.getTime() + amount)\n\n  return date\n}\n\n/**\n * 为日期增减给定的秒\n *\n * @param date 原始日期\n * @param amount 增减的秒\n */\nexport function addSeconds(date: Dateable, amount: number) {\n  amount *= SECOND_ON_MILLS\n\n  return addMilliseconds(date, amount)\n}\n\n/**\n * 为日期增减给定的分钟\n *\n * @param date 原始日期\n * @param amount 增减的分钟\n */\nexport function addMinutes(date: Dateable, amount: number) {\n  amount *= MINUTE_ON_SECONDS\n\n  return addSeconds(date, amount)\n}\n\n/**\n * 为日期增减给定的小时\n *\n * @param date 原始日期\n * @param amount 增减的小时\n */\nexport function addHours(date: Dateable, amount: number) {\n  amount *= HOUR_ON_MINUTES\n\n  return addMinutes(date, amount)\n}\n\n/**\n * 为日期增减给定的半天数（12小时）\n *\n * @param date 原始日期\n * @param amount 增减的半天数\n */\nexport function addHalfDays(date: Dateable, amount: number) {\n  amount *= 12\n\n  return addHours(date, amount)\n}\n\n/**\n * 为日期增减给定的天数\n *\n * @param date 原始日期\n * @param amount 增减的天数\n */\nexport function addDays(date: Dateable, amount: number) {\n  date = toDate(date)\n  amount = ~~amount\n\n  date.setDate(date.getDate() + amount)\n\n  return date\n}\n\n/**\n * 为日期增减给定的周数\n *\n * @param date 原始日期\n * @param amount 增减的周数\n */\nexport function addWeeks(date: Dateable, amount: number) {\n  amount *= WEEK_ON_DAYS\n\n  return addDays(date, amount)\n}\n\n/**\n * 为日期增减给定的月数\n *\n * @param date 原始日期\n * @param amount 增减的月数\n */\nexport function addMonths(date: Dateable, amount: number) {\n  date = toDate(date)\n  amount = ~~amount\n\n  date.setMonth(date.getMonth() + amount)\n\n  return date\n}\n\n/**\n * 为日期增减给定的季度（3个月）\n *\n * @param date 原始日期\n * @param amount 增减的季度\n */\nexport function addQuarters(date: Dateable, amount: number) {\n  amount *= QUARTER_ON_MONTHS\n\n  return addMonths(date, amount)\n}\n\n/**\n * 为日期增减给定的年份\n *\n * @param date 原始日期\n * @param amount 增减的年份\n */\nexport function addYears(date: Dateable, amount: number) {\n  amount *= YEAR_ON_MONTHS\n\n  return addMonths(date, amount)\n}\n\n/**\n * 生成一个日期 range 数组\n *\n * @param start 开始日期\n * @param size range 的大小, 默认 42 (一般电子日历为 6 行 7 列)\n * @param step range 的跨幅\n */\nexport function rangeDate(start: Dateable, size = 42, step = 1) {\n  start = toDate(start)\n\n  const dateRange: Date[] = []\n\n  for (let i = 0; i < size; ++i) {\n    dateRange.push(addDays(start, i * step))\n  }\n\n  return dateRange\n}\n\n/**\n * 生成一个月份 range 数组\n *\n * @param start 开始日期\n * @param size range 的大小, 默认 12 (一年)\n * @param step range 的跨幅\n */\nexport function rangeMonth(start: Dateable, size = 12, step = 1) {\n  start = toDate(start)\n\n  const dateRange: Date[] = []\n\n  for (let i = 0; i < size; ++i) {\n    dateRange.push(addMonths(start, i * step))\n  }\n\n  return dateRange\n}\n\n/**\n * 根据给定的日期获取上一个周日\n *\n * @param date 原始日期\n */\nexport function getLastSunday(date: Date) {\n  const day = date.getDay() ?? 7\n\n  return addDays(date, -day)\n}\n\n/**\n * 获取给定的日期所在秒的开始日期（毫秒归零）\n *\n * @param date 原始日期\n */\nexport function startOfSecond(date: Dateable) {\n  date = toDate(date)\n  date.setMilliseconds(0)\n\n  return date\n}\n\n/**\n * 获取给定的日期所在分钟的开始日期 (秒归零)\n *\n * @param date 原始日期\n */\nexport function startOfMinute(date: Dateable) {\n  date = toDate(date)\n  date.setSeconds(0, 0)\n\n  return date\n}\n\n/**\n * 获取给定的日期所在小时的开始日期 (分钟归零)\n *\n * @param date 原始日期\n */\nexport function startOfHour(date: Dateable) {\n  date = toDate(date)\n  date.setMinutes(0, 0, 0)\n\n  return date\n}\n\n/**\n * 获取给定的日期所在天的开始日期\n *\n * @param date 原始日期\n */\nexport function startOfDay(date: Dateable) {\n  date = toDate(date)\n  date.setHours(0, 0, 0, 0)\n\n  return date\n}\n\n/**\n * 获取给定日期所在天的结束日期\n *\n * @param date 原始日期\n */\nexport function endOfDay(date: Dateable) {\n  date = toDate(date)\n  date.setHours(23, 59, 59, 999)\n\n  return date\n}\n\n/**\n * 获取给定的日期所在周的第一天的开始日期\n *\n * @param date 需要解析的时间\n * @param startOn 设定周的第一天，默认为周日\n */\nexport function startOfWeek(date: Dateable, startOn = 0) {\n  startOn = startOn % 7\n\n  if (startOn < 0) {\n    startOn += 7\n  }\n\n  date = toDate(date)\n\n  const day = date.getDay()\n  const difference = (day < startOn ? 7 : 0) + day - startOn\n\n  date.setDate(date.getDate() - difference)\n  date.setHours(0, 0, 0, 0)\n\n  return date\n}\n\n/**\n * 判断给定的年份是否为闰年\n *\n * @param year 原始年份\n */\nexport function isLeapYear(year: number) {\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0\n}\n\n/**\n * 获取给定的日期所在月份的第一天的开始日期\n *\n * @param date 原始日期\n * @param startOn 设定一个月的第一天，默认为 1 号\n */\nexport function startOfMonth(date: Dateable, startOn = 1) {\n  date = toDate(date)\n\n  const year = date.getFullYear()\n  const month = date.getMonth() + 1\n  const day = date.getDate()\n\n  let lastDay\n\n  if (month < 7) {\n    if (month !== 2) {\n      lastDay = 30 + (month % 2)\n    } else {\n      if (isLeapYear(year)) {\n        lastDay = 29\n      } else {\n        lastDay = 28\n      }\n    }\n  } else {\n    lastDay = 31 - (month % 2)\n  }\n\n  startOn = startOn % lastDay\n\n  if (startOn < 0) {\n    startOn += lastDay\n  }\n\n  if (day < startOn) {\n    date.setMonth(month - 1)\n  }\n\n  date.setDate(startOn)\n  date.setHours(0, 0, 0, 0)\n\n  return date\n}\n\n/**\n * 获取给定日期所在季度的第一天的开始日期\n *\n * @param date 原始日期\n */\nexport function startOfQuarter(date: Dateable) {\n  date = toDate(date)\n\n  const quarter = getQuarter(date)\n\n  date.setDate(1)\n  date.setHours(0, 0, 0, 0)\n  date.setMonth((quarter - 1) * 3)\n\n  return date\n}\n\n/**\n * 获取给定日期所在年份的第一天的开始日期\n *\n * @param date 原始日期\n * @param startOn 设定年的开始月份，默认为一月\n */\nexport function startOfYear(date: Dateable, startOn = 0) {\n  startOn = startOn % 11\n\n  if (startOn < 0) {\n    startOn += 11\n  }\n\n  date = toDate(date)\n\n  const month = date.getMonth()\n  const difference = (month < startOn ? 11 : 0) + month - startOn\n\n  date.setMonth(date.getMonth() - difference)\n  date.setDate(1)\n  date.setHours(0, 0, 0, 0)\n\n  return date\n}\n\n/**\n * 比较两个日期相差的毫秒\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceMilliseconds(left: Dateable, right: Dateable) {\n  left = toDate(left)\n  right = toDate(right)\n\n  return right.getTime() - left.getTime()\n}\n\n/**\n * 比较两个日期相差的秒\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceSeconds(left: Dateable, right: Dateable) {\n  const diff = differenceMilliseconds(left, right) / SECOND_ON_MILLS\n\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\n/**\n * 比较两个日期相差的分钟\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceMinutes(left: Dateable, right: Dateable) {\n  const diff = differenceMilliseconds(left, right) / MINUTE_ON_MILLS\n\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\n/**\n * 比较两个日期相差的小时\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceHours(left: Dateable, right: Dateable) {\n  const diff = differenceMilliseconds(left, right) / HOUR_ON_MILLS\n\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\n/**\n * 比较两个日期相差的天数\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceDays(left: Dateable, right: Dateable) {\n  left = startOfDay(left)\n  right = startOfDay(right)\n\n  return (right.getTime() - left.getTime()) / DAY_ON_MILLIS\n}\n\n/**\n * 比较两个日期相差的周\n *\n * @param left 原始日期\n * @param right 原始日期\n * @param weekStartOn 设定周的第一天，默认为周日\n */\nexport function differenceWeeks(left: Dateable, right: Dateable, weekStartOn = 0) {\n  left = startOfWeek(left, weekStartOn)\n  right = startOfWeek(right, weekStartOn)\n\n  return (right.getTime() - left.getTime()) / WEEK_ON_MILLIS\n}\n\n/**\n * 比较两个日期相差的月\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceMonths(left: Dateable, right: Dateable) {\n  left = toDate(left)\n  right = toDate(right)\n\n  const yearDiff = right.getFullYear() - left.getFullYear()\n  const monthDiff = right.getMonth() - left.getMonth()\n\n  return yearDiff * 12 + monthDiff\n}\n\n/**\n * 比较两个日期相差的季度\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceQuarters(left: Dateable, right: Dateable) {\n  left = toDate(left)\n  right = toDate(right)\n\n  const yearDiff = right.getFullYear() - left.getFullYear()\n  const quarterDiff = getQuarter(right) - getQuarter(left)\n\n  return yearDiff * 4 + quarterDiff\n}\n\n/**\n * 比较两个日期相差的年份\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceYears(left: Dateable, right: Dateable) {\n  left = toDate(left)\n  right = toDate(right)\n\n  return right.getFullYear() - left.getFullYear()\n}\n\n/**\n * 升序比较两个日期大小，用于给数组的 sort 方法使用\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function compareAsc(left: Dateable, right: Dateable) {\n  left = toDate(left)\n  right = toDate(right)\n\n  const diff = left.getTime() - right.getTime()\n\n  return diff < 0 ? -1 : diff > 0 ? 1 : diff\n}\n\n/**\n * 降序比较两个日期大小，用于给数组的 sort 方法使用\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function compareDesc(left: Dateable, right: Dateable) {\n  return -compareAsc(left, right)\n}\n\n/**\n * 比较两个日期相差的完整秒\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceFullSeconds(left: Dateable, right: Dateable) {\n  left = startOfSecond(left)\n  right = startOfSecond(right)\n\n  return differenceSeconds(left, right)\n}\n\n/**\n * 比较两个日期相差的完整分钟\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceFullMinutes(left: Dateable, right: Dateable) {\n  left = startOfMinute(left)\n  right = startOfMinute(right)\n\n  return differenceMinutes(left, right)\n}\n\n/**\n * 比较两个日期相差的完整小时\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceFullHours(left: Dateable, right: Dateable) {\n  left = startOfHour(left)\n  right = startOfHour(right)\n\n  return differenceHours(left, right)\n}\n\n/**\n * 比较两个日期相差的完整天\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceFullDays(left: Dateable, right: Dateable) {\n  const sign = compareDesc(left, right)\n  const difference = Math.abs(differenceDays(left, right))\n\n  left = toDate(left)\n  left.setDate(left.getDate() + sign * difference)\n\n  const isLastNotFull = compareDesc(left, right) === -sign\n\n  return sign * (difference - (isLastNotFull ? 1 : 0))\n}\n\n/**\n * 比较两个日期相差的完整周\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceFullWeeks(left: Dateable, right: Dateable) {\n  const diff = differenceFullDays(left, right) / WEEK_ON_DAYS\n\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\n/**\n * 比较两个日期相差的完整月\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceFullMonths(left: Dateable, right: Dateable) {\n  const sign = compareDesc(left, right)\n  const difference = Math.abs(differenceMonths(left, right))\n\n  left = toDate(left)\n  left.setMonth(left.getMonth() + sign * difference)\n\n  const isLastNotFull = compareDesc(left, right) === -sign\n\n  return sign * (difference - (isLastNotFull ? 1 : 0))\n}\n\n/**\n * 比较两个日期相差的完整季度\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceFullQuarters(left: Dateable, right: Dateable) {\n  const diff = differenceFullMonths(left, right) / 3\n\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\n/**\n * 比较两个日期相差的完整年份\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceFullYears(left: Dateable, right: Dateable) {\n  const sign = compareDesc(left, right)\n  const difference = Math.abs(differenceYears(left, right))\n\n  left = toDate(left)\n  left.setFullYear(left.getFullYear() + sign * difference)\n\n  const isLastNotFull = compareDesc(left, right) === -sign\n\n  return sign * (difference - (isLastNotFull ? 1 : 0))\n}\n","/**\n * 深度拷贝对象或数组 (避免一层死循环)\n *\n * @param obj 需要拷贝的对象或数组\n */\nexport function deepClone<T>(obj: T): T {\n  if (obj === null || typeof obj !== 'object') {\n    return obj\n  }\n\n  const _root = (Array.isArray(obj) ? [] : {}) as any\n\n  // 循环数组栈\n  const loopList: Array<{\n    parent: Record<string, any>,\n    key?: string,\n    data: Record<string, any>\n  }> = [\n    {\n      parent: _root,\n      key: undefined,\n      data: obj\n    }\n  ]\n\n  while (loopList.length) {\n    // 先入后出，深度优先\n    const node = loopList.pop()!\n    const { parent, key, data } = node\n    const type = Array.isArray(data) ? 'array' : 'object'\n\n    if (!parent) continue\n\n    // 初始化克隆对象_root\n    let res = parent\n\n    if (typeof key !== 'undefined') {\n      res = parent[key] = type === 'array' ? [] : {}\n    }\n\n    Object.keys(data).forEach(i => {\n      const _data = data[i]\n\n      // 避免一层死循环\n      if (_data === data) {\n        res[i] = res\n      } else if (_data !== null && typeof _data === 'object') {\n        loopList.push({\n          parent: res,\n          key: i,\n          data: _data\n        })\n      } else {\n        res[i] = _data\n      }\n    })\n  }\n\n  return _root\n}\n","const defaultMessage = 'This object was destroyed, do not use it anywhere'\nconst returnTrue = () => true\n\nexport function destroyObject(object: any, message = defaultMessage) {\n  const throwDestroyed = () => {\n    throw new Error(message)\n  }\n\n  Object.keys(object).forEach(name => {\n    if (typeof object[name] === 'function') {\n      object[name] = throwDestroyed.bind(object)\n    } else {\n      object[name] = null\n    }\n  })\n\n  Object.getOwnPropertyNames(object.constructor.prototype).forEach(name => {\n    if (name !== 'constructor' && typeof object[name] === 'function') {\n      object[name] = throwDestroyed.bind(object)\n    }\n  })\n\n  object.isDestroyed = returnTrue\n}\n","import { isClient, isDefined } from './common'\n\nexport interface TransferNode extends Node {\n  __transferNode?: Node,\n  __transferElement?: Node\n}\n\nexport interface EventPayload extends EventInit {\n  type: string,\n  [prop: string]: any\n}\n\n/**\n * Whether current interaction is using touch.\n */\nexport const USE_TOUCH = isClient && ('ontouchstart' in window || getMaxTouchPoints() > 0)\nexport const CLICK_TYPE = USE_TOUCH ? 'pointerdown' : 'click'\n\nfunction getMaxTouchPoints() {\n  return typeof navigator !== 'undefined'\n    ? navigator.maxTouchPoints || ((navigator as any).msMaxTouchPoints as number) || 0\n    : 0\n}\n\nconst events: Map<string, Set<TransferNode>> = new Map()\n\nexport function createEvent(type: string) {\n  if (!events.has(type)) {\n    events.set(type, new Set())\n  }\n}\n\nexport function getObservers(type: string) {\n  return events.get(type) ?? events.set(type, new Set()).get(type)!\n}\n\nexport function observe(el: TransferNode, types: string | string[]) {\n  if (typeof types === 'string') {\n    types = [types as string]\n  }\n\n  if (Array.isArray(types)) {\n    for (let i = 0, len = types.length; i < len; ++i) {\n      const type = types[i]\n\n      if (!events.has(type)) {\n        events.set(type, new Set())\n      }\n\n      events.get(type)!.add(el)\n    }\n  }\n}\n\nexport function disconnect(el: TransferNode, types: string | string[]) {\n  if (typeof types === 'string') {\n    types = [types as string]\n  }\n\n  if (Array.isArray(types)) {\n    for (let i = 0, len = types.length; i < len; ++i) {\n      const type = types[i]\n\n      if (events.has(type)) {\n        events.get(type)?.delete(el)\n      }\n    }\n  }\n}\n\nexport function dispatchEvent(el: TransferNode, payload: EventPayload, Event = window.Event) {\n  const { type, bubbles = false, cancelable = false, ...data } = payload\n\n  if (!isDefined(type) || type === '') return false\n\n  let event\n\n  if (isDefined(Event)) {\n    event = new Event(type, { bubbles, cancelable })\n  } else {\n    event = document.createEvent('HTMLEvents')\n    event.initEvent(type, bubbles, cancelable)\n  }\n\n  Object.assign(event, data)\n\n  return el.dispatchEvent(event)\n}\n","import type { TransferNode } from './dom-event'\n\nconst TABABLE_SELECTOR = [\n  'button',\n  '[href]:not(.disabled)',\n  'input',\n  'select',\n  'textarea',\n  '[tabindex]',\n  '[contenteditable]'\n]\n  .map(s => `${s}:not(:disabled):not([disabled])`)\n  .join(', ')\n\nfunction isElement(el?: Element | null): el is HTMLElement {\n  return !!el && el.nodeType === Node.ELEMENT_NODE\n}\n\nfunction ensureElement(el?: Element | null) {\n  return isElement(el) ? el : document.body\n}\n\nexport function queryAll(selector: string, root?: Element | null) {\n  if (!selector) return []\n\n  return Array.from(ensureElement(root).querySelectorAll(selector)) as HTMLElement[]\n}\n\nexport function isFocusIn(el?: Element | null) {\n  const activeEl = document.activeElement as HTMLElement\n\n  if (!isElement(el) || !activeEl) return false\n\n  return el === activeEl || contains(activeEl, el)\n}\n\nexport function contains(el?: Element | null, parent?: HTMLElement | null) {\n  if (!el || !parent) return false\n\n  const tel = (parent as TransferNode).__transferElement\n\n  return parent.contains(el) || (!!tel && (tel === el || tel.contains(el)))\n}\n\nexport function isHidden(el?: Element | null) {\n  if (!isElement(el) || !el.parentNode || !contains(el, document.body)) {\n    return true\n  }\n\n  if (el.style.display === 'none') {\n    return true\n  }\n\n  const rect = el.getBoundingClientRect()\n\n  return !(rect && rect.width > 0 && rect.height > 0)\n}\n\nexport function isVisible(el?: Element | null) {\n  return !isHidden(el)\n}\n\nexport function isDisabled(el?: Element | null) {\n  return (\n    !isElement(el) ||\n    (el.hasAttribute('disabled') && el.getAttribute('disabled') !== 'false') ||\n    (el as HTMLInputElement).disabled\n  )\n}\n\nexport function queryTabables(root?: HTMLElement, includeDisabled = false) {\n  const isDis = includeDisabled ? () => false : isDisabled\n\n  return queryAll(TABABLE_SELECTOR, root).filter(\n    el => isVisible(el) && el.tabIndex > -1 && !isDis(el)\n  )\n}\n\nexport function getXPadding(el: HTMLElement | null) {\n  if (!el) return 0\n\n  const computedStyle = getComputedStyle(el)\n  const padding = parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight)\n\n  return padding || 0\n}\n\nexport function getYPadding(el: HTMLElement | null) {\n  if (!el) return 0\n\n  const computedStyle = getComputedStyle(el)\n  const padding = parseFloat(computedStyle.paddingTop) + parseFloat(computedStyle.paddingBottom)\n\n  return padding || 0\n}\n\nexport function getXMargin(el: HTMLElement | null) {\n  if (!el) return 0\n\n  const computedStyle = getComputedStyle(el)\n  const margin = parseFloat(computedStyle.marginLeft) + parseFloat(computedStyle.marginRight)\n\n  return margin || 0\n}\n\nexport function getYMargin(el: HTMLElement | null) {\n  if (!el) return 0\n\n  const computedStyle = getComputedStyle(el)\n  const margin = parseFloat(computedStyle.marginTop) + parseFloat(computedStyle.marginBottom)\n\n  return margin || 0\n}\n\nexport function getXBorder(el: HTMLElement | null) {\n  if (!el) return 0\n\n  const computedStyle = getComputedStyle(el)\n  const width =\n    parseFloat(computedStyle.borderLeftWidth) + parseFloat(computedStyle.borderRightWidth)\n\n  return width || 0\n}\n\nexport function getYBorder(el: HTMLElement | null) {\n  if (!el) return 0\n\n  const computedStyle = getComputedStyle(el)\n  const width =\n    parseFloat(computedStyle.borderTopWidth) + parseFloat(computedStyle.borderBottomWidth)\n\n  return width || 0\n}\n\nexport function getRangeWidth(el: HTMLElement | null) {\n  if (!el) return 0\n\n  const range = document.createRange()\n\n  range.setStart(el, 0)\n  range.setEnd(el, el.childNodes.length)\n\n  const rangeWidth = range.getBoundingClientRect().width\n  const xPadding = getXPadding(el)\n\n  return rangeWidth + xPadding\n}\n","const escapeRE = /[\"'&<>]/\n\nexport function escapeHtml(string: unknown) {\n  const str = '' + string\n  const match = escapeRE.exec(str)\n\n  if (!match) {\n    return str\n  }\n\n  let html = ''\n  let escaped: string\n  let index: number\n  let lastIndex = 0\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escaped = '&quot;'\n        break\n      case 38: // &\n        escaped = '&amp;'\n        break\n      case 39: // '\n        escaped = '&#39;'\n        break\n      case 60: // <\n        escaped = '&lt;'\n        break\n      case 62: // >\n        escaped = '&gt;'\n        break\n      default:\n        continue\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index)\n    }\n\n    lastIndex = index + 1\n    html += escaped\n  }\n\n  return lastIndex !== index ? html + str.substring(lastIndex, index) : html\n}\n","export type EventType = number | string | symbol\nexport type EventHandler = (...payload: any[]) => void\nexport type EventHandlerSet = Set<EventHandler>\nexport type EventHandlerMap = Map<EventType, EventHandlerSet>\n\nexport interface EventEmitter {\n  on: (type: EventType, handler: EventHandler) => void,\n  off: (type: EventType, handler: EventHandler) => void,\n  clear: (type: EventType) => void,\n  clearAll: () => void,\n  emit: (type: EventType, ...payload: any[]) => void\n}\n\nexport function createEventEmitter() {\n  const handlerMap: EventHandlerMap = new Map()\n\n  return {\n    on(type, handler) {\n      const handlers = handlerMap.get(type)\n      const added = handlers?.add(handler)\n\n      if (!added) {\n        handlerMap.set(type, new Set([handler]))\n      }\n    },\n    off(type, handler) {\n      const handlers = handlerMap.get(type)\n\n      if (handlers) {\n        handlers.delete(handler)\n      }\n    },\n    clear(type) {\n      const handlers = handlerMap.get(type)\n\n      if (handlers) {\n        handlers.clear()\n      }\n    },\n    clearAll() {\n      handlerMap.clear()\n    },\n    emit(type, ...payload) {\n      const handlers = handlerMap.get(type)\n\n      if (handlers) {\n        handlers.forEach(handler => {\n          handler(...payload)\n        })\n      }\n    }\n  } as EventEmitter\n}\n","function logOnce(message: string, cache: Set<string>, logFn: (...data: any[]) => void) {\n  if (message && !cache.has(message)) {\n    logFn(message)\n    cache.add(message)\n  }\n}\n\nconst infoCache = new Set<string>()\n\nexport function infoOnce(message: string, logFn = console.info) {\n  logOnce(message, infoCache, logFn)\n}\n\nconst warnCache = new Set<string>()\n\nexport function warnOnce(message: string, logFn = console.warn) {\n  logOnce(message, warnCache, logFn)\n}\n\nconst errorCache = new Set<string>()\n\nexport function errorOnce(message: string, logFn = console.warn) {\n  logOnce(message, errorCache, logFn)\n}\n","/**\n * 将一个函数或方法进行节流\n *\n * @param method 需要节流的方法，需自行绑定 this\n * @param delay 节流后的触发间隔，默认 16 ms (1 帧/秒)\n */\nexport function throttle<T extends (...args: any[]) => any>(method: T, delay = 16) {\n  if (typeof method !== 'function') {\n    return method\n  }\n\n  let start = Date.now()\n  let timer: ReturnType<typeof setTimeout>\n\n  return function (...args: Parameters<T>) {\n    const current = Date.now()\n    const remaining = start + delay - current\n\n    clearTimeout(timer)\n\n    if (remaining <= 0) {\n      method(...args)\n      start = Date.now()\n    } else {\n      timer = setTimeout(() => {\n        method(...args)\n      }, delay)\n    }\n  }\n}\n\n/**\n * 将一个函数或方法进行防抖\n *\n * @param method 需要防抖的方法，需自行绑定 this\n * @param delay 防抖的限制时间，默认 100ms\n */\nexport function debounce<T extends (...args: any[]) => any>(method: T, delay = 100) {\n  if (typeof method !== 'function') {\n    return method\n  }\n\n  let timer: ReturnType<typeof setTimeout>\n\n  return function (...args: Parameters<T>) {\n    clearTimeout(timer)\n\n    timer = setTimeout(() => {\n      method(...args)\n    }, delay)\n  }\n}\n\n/**\n * 针对每个微任务，将一个函数或方法进行防抖\n *\n * @param method 需要防抖的方法，需自行绑定 this\n */\nexport function debounceMinor<T extends (...args: any[]) => any>(method: T) {\n  if (typeof method !== 'function') {\n    return method\n  }\n\n  let called = false\n  let lastArgs: Parameters<T>\n\n  return function (...args: Parameters<T>) {\n    lastArgs = args\n\n    if (!called) {\n      called = true\n\n      Promise.resolve().then(() => {\n        method(...lastArgs)\n        called = false\n      })\n    }\n  }\n}\n\n/**\n * 针对每一帧，将一个函数或方法进行防抖\n *\n * @param method 需要防抖的方法，需自行绑定 this\n */\nexport function debounceFrame<T extends (...args: any[]) => any>(method: T) {\n  if (typeof method !== 'function') {\n    return method\n  }\n\n  let called = false\n  let lastArgs: Parameters<T>\n\n  return function (...args: Parameters<T>) {\n    lastArgs = args\n\n    if (!called) {\n      called = true\n\n      requestAnimationFrame(() => {\n        method(...lastArgs)\n        called = false\n      })\n    }\n  }\n}\n\nconst tickCallbacks = new Set<(...args: any[]) => any>()\nconst tickArgsMap = new WeakMap<any, any[]>()\n\nfunction flushTickCallbacks() {\n  tickCallbacks.forEach(fn => {\n    fn(...tickArgsMap.get(fn)!)\n  })\n  tickCallbacks.clear()\n}\n\n/**\n * 在下一微任务，仅执行一次传入的方法\n *\n * @param method 需要执行的方法\n * @param args 方法的额外参数，在方法调用前多次传入将会覆盖之前的参数\n */\nexport function nextTickOnce<T extends (...args: any[]) => any>(method: T, ...args: any[]) {\n  if (typeof method !== 'function') {\n    return method\n  }\n\n  tickArgsMap.set(method, args)\n\n  if (tickCallbacks.has(method)) {\n    return\n  }\n\n  tickCallbacks.add(method)\n\n  if (tickCallbacks.size === 1) {\n    Promise.resolve().then(flushTickCallbacks)\n  }\n}\n\nconst frameCallbacks = new Set<(...args: any[]) => any>()\nconst frameArgsMap = new WeakMap<any, any[]>()\n\nfunction flushFrameCallbacks() {\n  frameCallbacks.forEach(fn => {\n    fn(...frameArgsMap.get(fn)!)\n  })\n  frameCallbacks.clear()\n}\n\n/**\n * 在下一渲染帧，仅执行一次传入的方法\n *\n * @param method 需要执行的方法\n * @param args 方法的额外参数，在方法调用前多次传入将会覆盖之前的参数\n */\nexport function nextFrameOnce<T extends (...args: any[]) => any>(method: T, ...args: any[]) {\n  if (typeof method !== 'function') {\n    return method\n  }\n\n  frameArgsMap.set(method, args)\n\n  if (frameCallbacks.has(method)) {\n    return\n  }\n\n  frameCallbacks.add(method)\n\n  if (frameCallbacks.size === 1) {\n    requestAnimationFrame(flushFrameCallbacks)\n  }\n}\n","import { isClient } from './common'\n\nlet flexGapSupported: boolean | null = null\n\nexport function supportFlexGap() {\n  if (!isClient) {\n    return true\n  }\n\n  if (flexGapSupported === null) {\n    const flex = document.createElement('div')\n\n    flex.style.display = 'flex'\n    flex.style.flexDirection = 'column'\n    flex.style.rowGap = '1px'\n\n    flex.appendChild(document.createElement('div'))\n    flex.appendChild(document.createElement('div'))\n    document.body.appendChild(flex)\n\n    flexGapSupported = flex.scrollHeight === 1\n\n    document.body.removeChild(flex)\n  }\n\n  return flexGapSupported\n}\n\nlet imgLoadingSupported: boolean | null = null\n\nexport function supportImgLoading() {\n  if (!isClient) {\n    return true\n  }\n\n  if (imgLoadingSupported === null) {\n    imgLoadingSupported = 'loading' in document.createElement('img')\n  }\n\n  return imgLoadingSupported\n}\n","import { isDefined, isFunction, isObject, toTrue } from './common'\nimport { deepClone } from './deep-clone'\n\nexport function ensureArray<T>(value: T | T[]) {\n  return Array.isArray(value) ? value : [value]\n}\n\nexport function callIfFunc<T>(value: T | (() => T)) {\n  return isFunction(value) ? value() : value\n}\n\nexport function normalizePath(path: string) {\n  return path.replace(/[\\\\/]+/g, '/')\n}\n\n/**\n * 根据数组元素中某个或多个属性的值转换为映射\n *\n * @param list 需要被转换的数组\n * @param prop 需要被转换的属性或提供一个读取方法\n * @param accessor 映射的值的读取方法，默认返回元素本身\n * @param isMap 是否使用 Map 对象储存结果\n */\nexport function transformListToMap<T = any, O = T>(\n  list: T[],\n  prop: keyof T | ((item: T) => any),\n  accessor?: (item: T) => O,\n  isMap?: false\n): Record<string, O>\nexport function transformListToMap<T = any, O = T, K extends keyof T = keyof T>(\n  list: T[],\n  prop: K,\n  accessor?: (item: T) => O,\n  isMap?: true\n): Map<T[K], O>\nexport function transformListToMap<T = any, O = T, K = any>(\n  list: T[],\n  prop: (item: T) => K,\n  accessor?: (item: T) => O,\n  isMap?: true\n): Map<K extends keyof T ? T[K] : unknown, O>\nexport function transformListToMap<T = any, O = T>(\n  list: T[],\n  prop: keyof T | ((item: T) => any),\n  accessor: (item: T) => O = v => v as any,\n  isMap = false\n) {\n  const map = (isMap ? new Map<string, any>() : {}) as any\n\n  if (!isDefined(prop)) return map\n\n  const set = isMap\n    ? (key: any, value: O) => map.set(key, value)\n    : (key: any, value: O) => (map[key] = value)\n  const propAccessor = isFunction(prop) ? prop : (item: T) => item[prop]\n\n  list.forEach(item => {\n    const key = propAccessor(item)\n\n    if (isDefined(key)) {\n      set(key, accessor(item))\n    }\n  })\n\n  return map\n}\n\n/**\n * 移除数组中的某个元素\n *\n * @param array 需要被移除元素的数组\n * @param item 需要被移除的元素, 或一个查找方法，如果元素为函数时则需要做一层简单包装\n * @param isFn 标记数组的元素是否为函数\n */\nexport function removeArrayItem<T = any>(\n  array: T[],\n  item: T | ((item: T) => boolean),\n  isFn = false\n): T | null {\n  let index = -1\n\n  if (isFn || typeof item !== 'function') {\n    index = array.findIndex(current => current === item)\n  } else {\n    index = array.findIndex(item as (item: T) => boolean)\n  }\n\n  if (~index) {\n    return array.splice(index, 1)[0]\n  }\n\n  return null\n}\n\n/**\n * 按照一定顺序的属性对数据进行分组\n *\n * @param list 需要分数的数据\n * @param props 需要按顺序分组的属性\n */\nexport function groupByProps<T = any>(\n  list: T[],\n  props: Array<string | ((item: T) => any)> | string | ((item: T) => any) = []\n): Record<string, T[]> {\n  if (typeof props === 'string' || typeof props === 'function') {\n    props = [props]\n  }\n\n  const propCount = props.length\n  const zipData: Record<string, any> = {}\n\n  for (const item of list) {\n    let data\n\n    for (let i = 0; i < propCount; ++i) {\n      const isLast = i === propCount - 1\n      const prop = props[i]\n      const value = typeof prop === 'function' ? prop(item) : item[prop as keyof T]\n\n      if (!data) {\n        if (!zipData[value]) {\n          zipData[value] = isLast ? [] : {}\n        }\n\n        data = zipData[value]\n      } else {\n        if (!data[value]) {\n          data[value] = isLast ? [] : {}\n        }\n\n        data = data[value]\n      }\n    }\n\n    data.push(item)\n  }\n\n  return zipData\n}\n\nexport interface TreeOptions<T = string> {\n  keyField?: T,\n  childField?: T,\n  parentField?: T,\n  rootId?: any\n}\n\n/**\n * Transform the given flatted list to tree\n *\n * @param list the flatted list\n * @param options the config for transforming\n */\nexport function transformTree<T = any>(list: T[], options: TreeOptions<keyof T> = {}) {\n  const {\n    keyField = 'id' as keyof T,\n    childField = 'children' as keyof T,\n    parentField = 'parent' as keyof T,\n    rootId = null\n  } = options\n\n  const hasRootId = isDefined(rootId) && rootId !== ''\n  const tree: T[] = []\n  const record = new Map<T[keyof T], T[]>()\n\n  for (let i = 0, len = list.length; i < len; ++i) {\n    const item = list[i]\n    const id = item[keyField]\n\n    if (hasRootId ? id === rootId : !isDefined(id)) {\n      continue\n    }\n\n    if (record.has(id)) {\n      (item as any)[childField] = record.get(id)!\n    } else {\n      (item as any)[childField] = []\n      record.set(id, (item as any)[childField])\n    }\n\n    if (item[parentField] && (!hasRootId || item[parentField] !== rootId)) {\n      const parentId = item[parentField]\n\n      if (!record.has(parentId)) {\n        record.set(parentId, [])\n      }\n\n      record.get(parentId)!.push(item)\n    } else {\n      tree.push(item)\n    }\n  }\n\n  return tree\n}\n\n/**\n * Transform the given tree to flatted list\n *\n * @param tree the tree\n * @param options the config for transforming\n */\nexport function flatTree<T = any>(\n  tree: T[],\n  options: TreeOptions<keyof T> & {\n    depthFirst?: boolean,\n    injectId?: boolean,\n    filter?: (item: T) => boolean,\n    cascaded?: boolean\n  } = {}\n) {\n  const {\n    keyField = 'id' as keyof T,\n    childField = 'children' as keyof T,\n    parentField = 'parent' as keyof T,\n    rootId = null,\n    depthFirst = false,\n    injectId = true,\n    filter = toTrue,\n    cascaded = false\n  } = options\n\n  const hasRootId = isDefined(rootId) && rootId !== ''\n  const list: T[] = []\n  const loop = [...tree]\n\n  let idCount = 1\n\n  while (loop.length) {\n    const item = loop.shift()!\n\n    const childrenValue = item[childField]\n    const children: T[] = Array.isArray(childrenValue) && childrenValue.length ? childrenValue : []\n\n    if (injectId && !item[keyField]) {\n      item[keyField] = idCount++ as any\n    }\n\n    const id = item[keyField]\n\n    if (\n      injectId &&\n      parentField &&\n      (hasRootId ? item[parentField] === rootId : !item[parentField])\n    ) {\n      (item as any)[parentField] = rootId\n    }\n\n    const filterResult = filter(item)\n\n    if (filterResult) list.push(item)\n\n    if (filterResult || !cascaded) {\n      for (let i = 0, len = children.length; i < len; ++i) {\n        const child = children[i]\n\n        if (injectId && parentField) {\n          child[parentField] = id\n        }\n\n        !depthFirst && loop.push(child)\n      }\n\n      if (depthFirst) {\n        loop.unshift(...children)\n      }\n    }\n  }\n\n  return list\n}\n\n/**\n * Walk the given tree value and call the callback for each node\n *\n * @param tree the tree to walk\n * @param cb the callback function\n * @param options the config for walk\n */\nexport function walkTree<T = any>(\n  tree: T[],\n  cb: (item: T, depth: number) => void,\n  options: {\n    depthFirst?: boolean,\n    childField?: keyof T\n  } = {}\n) {\n  const { childField = 'children' as keyof T, depthFirst = false } = options\n  const loop = [...tree.map(item => ({ item, depth: 0 }))]\n\n  while (loop.length) {\n    const { item, depth } = loop.shift()!\n    const children = item[childField] as T[]\n\n    cb(item, depth)\n\n    if (children?.length) {\n      loop[depthFirst ? 'unshift' : 'push'](...children.map(item => ({ item, depth: depth + 1 })))\n    }\n  }\n}\n\nexport interface SortOptions<T = string> {\n  key: T,\n  method?: (prev: any, next: any) => number,\n  accessor?: (...args: any[]) => any,\n  type?: 'asc' | 'desc',\n  params?: any[] // 传入读取器的额外参数\n}\n\nconst defaultSortMethod = (prev: any, next: any) => {\n  if (Number.isNaN(Number(prev) - Number(next))) {\n    return String(prev).localeCompare(next)\n  }\n\n  return prev - next\n}\n\n/**\n * 根据依赖的属性逐层排序\n *\n * @param list 需要排序的数组\n * @param props 排序依赖的属性 key-属性名 method-排序方法 accessor-数据获取方法 type-升降序\n */\nexport function sortByProps<T = any>(\n  list: T[],\n  props: keyof T | SortOptions<keyof T> | (keyof T | SortOptions<keyof T>)[]\n) {\n  if (\n    !list.sort ||\n    (isObject<SortOptions>(props) && !props.key) ||\n    !(props as string | SortOptions[]).length\n  ) {\n    return list\n  }\n\n  const sortedList = Array.from(list)\n\n  if (!Array.isArray(props)) {\n    props = [props]\n  }\n\n  const formattedProps = props\n    .map(\n      value =>\n        (typeof value === 'string'\n          ? {\n              key: value,\n              method: defaultSortMethod,\n              type: 'asc'\n            }\n          : value) as SortOptions<keyof T>\n    )\n    .map(value => {\n      if (typeof value.accessor !== 'function') {\n        value.accessor = (data: T) => data[value.key]\n      }\n\n      if (typeof value.method !== 'function') {\n        value.method = defaultSortMethod\n      }\n\n      value.params = Array.isArray(value.params) ? value.params : []\n\n      return value as Required<SortOptions>\n    })\n\n  sortedList.sort((prev, next) => {\n    let lastResult = 0\n\n    for (const prop of formattedProps) {\n      const { method, type, accessor, params } = prop\n      const desc = type === 'desc'\n      const result = method(accessor(prev, ...params), accessor(next, ...params))\n\n      lastResult = desc ? -result : result\n      // 若不为0则无需进行下一层排序\n      if (lastResult) break\n    }\n\n    return lastResult\n  })\n\n  return sortedList\n}\n\n/**\n * 将两个对象进行深度的动态合并\n *\n * @param sourceObj 用于接收合并的源对象\n * @param targetObj 被合并的对象，当属性名相同但值类型不同的情况，此对象的权重更高\n * @param isNewObj 标记合并至一个全新的对象（深度的）\n */\nexport function mergeObjects<T extends Record<string, any>, U extends Record<string, any>>(\n  sourceObj: T,\n  targetObj: U,\n  isNewObj = true\n) {\n  sourceObj = isNewObj ? deepClone(sourceObj) : sourceObj\n\n  const loop: Array<{\n    source: Record<string, any>,\n    target: Record<string, any>\n  }> = [\n    {\n      source: sourceObj,\n      target: targetObj\n    }\n  ]\n\n  while (loop.length) {\n    const { source, target } = loop.pop()!\n\n    Object.keys(target).forEach(key => {\n      if (isObject(target[key])) {\n        if (!isObject(source[key])) {\n          source[key] = {}\n        }\n\n        loop.push({\n          source: source[key],\n          target: target[key]\n        })\n      } else if (Array.isArray(target[key])) {\n        if (!Array.isArray(source[key])) {\n          source[key] = []\n        }\n\n        loop.push({\n          source: source[key],\n          target: target[key]\n        })\n      } else {\n        source[key] = target[key]\n      }\n    })\n  }\n\n  return sourceObj as T & U\n}\n\nexport function runQueueFrame(queue: Array<() => void>) {\n  queue = Array.from(queue)\n\n  let cancelled = false\n\n  const run = () => {\n    if (cancelled) return\n\n    queue.shift()?.()\n    queue.length && requestAnimationFrame(run)\n  }\n\n  run()\n\n  return () => (cancelled = true)\n}\n","import { Comment, Fragment, createTextVNode, isVNode } from 'vue'\n\nimport type { VNode, VNodeNormalizedChildren } from 'vue'\n\nexport function flatVNodes(children: VNodeNormalizedChildren) {\n  const result: VNode[] = []\n  const loop = Array.isArray(children) ? [...children] : []\n\n  while (loop.length) {\n    const vnode = loop.shift()!\n\n    if (vnode === null) continue\n\n    if (Array.isArray(vnode)) {\n      loop.unshift(...vnode)\n    }\n\n    if (\n      typeof vnode !== 'string' &&\n      typeof vnode !== 'number' &&\n      (!isVNode(vnode) || vnode.type === Comment)\n    ) { continue }\n\n    if (typeof vnode === 'string' || typeof vnode === 'number') {\n      result.push(createTextVNode(String(vnode)))\n    } else if (vnode.type === Fragment && Array.isArray(vnode.children)) {\n      loop.unshift(vnode.children)\n    } else {\n      result.push(vnode)\n    }\n  }\n\n  return result\n}\n","/**\n * 将给定的常量字符串类型拓展为不区分大小写的任意组合\n */\nexport type AnyCase<S> = string extends S\n  ? string\n  : S extends `${infer F1}${infer F2}${infer R}`\n    ? `${Uppercase<F1> | Lowercase<F1>}${Uppercase<F2> | Lowercase<F2>}${AnyCase<R>}`\n    : S extends `${infer F}${infer R}`\n      ? `${Uppercase<F> | Lowercase<F>}${AnyCase<R>}`\n      : ''\n\n/**\n * 将命名转换为短横线命名\n *\n * @param value 需要转换的命名\n */\nexport function toKebabCase(value: string) {\n  return (\n    value.charAt(0).toLowerCase() +\n    value\n      .slice(1)\n      .replace(/([A-Z])/g, '-$1')\n      .toLowerCase()\n  )\n}\n\ntype CapitalCase<T extends string> = T extends `${infer First} ${infer Rest}`\n  ? CapitalCase<`${First}-${Rest}`>\n  : T extends `${infer First}-${infer Rest}`\n    ? `${Capitalize<First>}${CapitalCase<Rest>}`\n    : Capitalize<T>\n\n/**\n * 将命名转换为首字母大写的驼峰\n *\n * @param value 需要转换的命名\n */\nexport function toCapitalCase<T extends string>(value: T) {\n  value = value.trim().replace(/\\s+/g, '-') as T\n  value = value.replace(/-+(\\w)/g, (_, char) => (char ? char.toUpperCase() : '')) as T\n\n  return (value.charAt(0).toLocaleUpperCase() + value.slice(1)).replace(\n    /[^\\w]/g,\n    ''\n  ) as CapitalCase<T>\n}\n"],"names":["isClient","isIOS","_a","toString","hasOwnProperty","is","value","type","has","key","isDefined","isNull","isNumber","isNaN","isString","isBoolean","isTrue","isFalse","isSymbol","isBigInt","isArray","isObject","isPromise","isFunction","isSet","isMap","isDate","isRegExp","isEmpty","isElement","noop","toTrue","toFalse","range","size","start","step","array","i","getType","randomString","length","chars","maxPos","string","INTEGER_REG","NUMBER_REG","NUMBER_UNIT","COLOR_REG_3","COLOR_REG_4","RGB_REG","RGBA_REG","HSL_REG","HSLA_REG","HSV_REG","HSVA_REG","HEX_REG_3","HEX_REG_4","HEX_REG_6","HEX_REG_8","NAMED_COLORS","COLOR_NAMES","isColor","parseStringColor","color","toRgbString","named","match","g","b","normalizeRgb","normalizeAlpha","h","s","l","normalizeHsl","toHslString","v","normalizeHsv","toHsvString","convertHexToDecimal","parseColor","a","rgb","parseColorToRgba","hsl","rgbToHsl","hsv","rgbToHsv","hex","rgbToHex","hex8","rgbaToHex","originColor","hslToRgb","hsvToRgb","boundRange","isPercentage","parsePercentage","r","q","p","hueToRgb","max","min","d","hslToHsv","hsvToHsl","f","t","mod","allow3Char","repairDigits","isRepetitive","allow4Char","convertDecimalToHex","mixColor","color1","color2","weight","rgba1","rgba2","originalWeight","normalizedWeight","alphaDistance","weight1","weight2","adjustAlpha","alpha","rgba","randomColor","withAlpha","str","number","percent","lowBit","num","createBITree","tree","add","index","delta","sum","get","boundIndex","limit","left","right","middle","total","toNumber","doubleDigits","digitLength","eSplit","len","segmentNumber","segment","separator","integer","decimal","formatRegExp","toFixed","snum","pointPos","nums","targetPos","multipleFixed","multiple","round","criticalValue","ceilValue","SIZE_UNIT_WITH_AUTO","formatByteSize","byte","unit","upperUnit","power","targetSize","toPrecision","precision","multipleInt","dLength","createOperation","operation","numbers","result","times","number1","number2","int1","int2","base","plus","minus","divide","SECOND_ON_MILLS","MINUTE_ON_SECONDS","MINUTE_ON_MILLS","HOUR_ON_MINUTES","HOUR_ON_SECONDS","HOUR_ON_MILLS","DAY_ON_HOURS","DAY_ON_MINUTES","DAY_ON_SECONDS","DAY_ON_MILLIS","WEEK_ON_DAYS","WEEK_ON_HOURS","WEEK_ON_MINUTES","WEEK_ON_SECONDS","WEEK_ON_MILLIS","QUARTER_ON_MONTHS","YEAR_ON_QUARTERS","YEAR_ON_MONTHS","formatters","date","year","month","day","hour","minute","second","quarter","quotationRegExp","toDate","any","strict","format","pattern","matchs","substring","firstCharacter","formatter","getTime","getQuarter","weeksForChinese","getChineseWeek","addMilliseconds","amount","addSeconds","addMinutes","addHours","addHalfDays","addDays","addWeeks","addMonths","addQuarters","addYears","rangeDate","dateRange","rangeMonth","getLastSunday","startOfSecond","startOfMinute","startOfHour","startOfDay","endOfDay","startOfWeek","startOn","difference","isLeapYear","startOfMonth","lastDay","startOfQuarter","startOfYear","differenceMilliseconds","differenceSeconds","diff","differenceMinutes","differenceHours","differenceDays","differenceWeeks","weekStartOn","differenceMonths","yearDiff","monthDiff","differenceQuarters","quarterDiff","differenceYears","compareAsc","compareDesc","differenceFullSeconds","differenceFullMinutes","differenceFullHours","differenceFullDays","sign","isLastNotFull","differenceFullWeeks","differenceFullMonths","differenceFullQuarters","differenceFullYears","deepClone","obj","_root","loopList","node","parent","data","res","_data","defaultMessage","returnTrue","destroyObject","object","message","throwDestroyed","name","USE_TOUCH","getMaxTouchPoints","CLICK_TYPE","events","createEvent","getObservers","observe","el","types","disconnect","dispatchEvent","payload","Event","bubbles","cancelable","event","TABABLE_SELECTOR","ensureElement","queryAll","selector","root","isFocusIn","activeEl","contains","tel","isHidden","rect","isVisible","isDisabled","queryTabables","includeDisabled","isDis","getXPadding","computedStyle","getYPadding","getXMargin","getYMargin","getXBorder","getYBorder","getRangeWidth","rangeWidth","xPadding","escapeRE","escapeHtml","html","escaped","lastIndex","createEventEmitter","handlerMap","handler","handlers","logOnce","cache","logFn","infoCache","infoOnce","warnCache","warnOnce","errorCache","errorOnce","throttle","method","delay","timer","args","current","remaining","debounce","debounceMinor","called","lastArgs","debounceFrame","tickCallbacks","tickArgsMap","flushTickCallbacks","fn","nextTickOnce","frameCallbacks","frameArgsMap","flushFrameCallbacks","nextFrameOnce","flexGapSupported","supportFlexGap","flex","imgLoadingSupported","supportImgLoading","ensureArray","callIfFunc","normalizePath","path","transformListToMap","list","prop","accessor","map","set","propAccessor","item","removeArrayItem","isFn","groupByProps","props","propCount","zipData","isLast","transformTree","options","keyField","childField","parentField","rootId","hasRootId","record","id","parentId","flatTree","depthFirst","injectId","filter","cascaded","loop","idCount","childrenValue","children","filterResult","child","walkTree","cb","depth","defaultSortMethod","prev","next","sortByProps","sortedList","formattedProps","lastResult","params","desc","mergeObjects","sourceObj","targetObj","isNewObj","source","target","runQueueFrame","queue","cancelled","run","flatVNodes","vnode","isVNode","Comment","createTextVNode","Fragment","toKebabCase","toCapitalCase","_","char"],"mappings":"uGAAaA,EAAW,OAAO,OAAW,WAC7B,MAAAC,GACKD,KAChBE,GAAA,2BAAQ,YAAR,YAAAA,GAAmB,YACnB,iBAAiB,KAAK,OAAO,UAAU,SAAS,EAE5CC,GAAW,OAAO,UAAU,SAC5BC,GAAiB,OAAO,UAAU,eAExB,SAAAC,EAAGC,EAAgBC,EAAc,CAC/C,OAAOJ,GAAS,KAAKG,CAAK,IAAM,WAAWC,CAAI,GACjD,CAEgB,SAAAC,GAAIF,EAA4BG,EAAiD,CACxF,OAAAL,GAAe,KAAKE,EAAOG,CAAG,CACvC,CAEO,SAASC,EAAuBJ,EAAyC,CACvE,OAAuBA,GAAU,IAC1C,CAEO,SAASK,GAAOL,EAA2C,CACzD,OAAuBA,GAAU,IAC1C,CAEO,SAASM,GAASN,EAAiC,CACxD,OAAO,OAAOA,GAAU,QAC1B,CAEO,SAASO,GAAMP,EAAiC,CAC9C,OAAA,OAAO,MAAMA,CAAK,CAC3B,CAEO,SAASQ,GAASR,EAAiC,CACxD,OAAO,OAAOA,GAAU,QAC1B,CAEO,SAASS,GAAUT,EAAkC,CAC1D,OAAO,OAAOA,GAAU,SAC1B,CAEO,SAASU,GAAOV,EAA+B,CACpD,OAAOA,IAAU,EACnB,CAEO,SAASW,GAAQX,EAAgC,CACtD,OAAOA,IAAU,EACnB,CAEO,SAASY,GAASZ,EAAiC,CACxD,OAAO,OAAOA,GAAU,QAC1B,CAEO,SAASa,GAASb,EAAiC,CACxD,OAAO,OAAOA,GAAU,QAC1B,CAEO,SAASc,GAAQd,EAAgC,CAC/C,OAAA,MAAM,QAAQA,CAAK,CAC5B,CAEO,SAASe,EACdf,EACY,CACL,OAAAD,EAAGC,EAAO,QAAQ,CAC3B,CAEO,SAASgB,GAAUhB,EAAuC,CAE7D,MAAA,CAAC,CAACA,GACF,OAAQA,EAAc,MAAS,YAC/B,OAAQA,EAAc,OAAU,UAEpC,CAEO,SAASiB,GAAWjB,EAAiD,CAC1E,OAAO,OAAOA,GAAU,UAC1B,CAEO,SAASkB,GAAMlB,EAAmC,CAChD,OAAAD,EAAGC,EAAO,KAAK,CACxB,CAEO,SAASmB,GAAMnB,EAAwC,CACrD,OAAAD,EAAGC,EAAO,KAAK,CACxB,CAEO,SAASoB,GAAOpB,EAA+B,CAC7C,OAAAD,EAAGC,EAAO,MAAM,CACzB,CAEO,SAASqB,GAASrB,EAAiC,CACjD,OAAAD,EAAGC,EAAO,QAAQ,CAC3B,CAEO,SAASsB,GAAQtB,EAAgB,CACtC,OAAI,MAAM,QAAQA,CAAK,GAAK,OAAOA,GAAU,SACpCA,EAAM,SAAW,EAGtBA,aAAiB,KAAOA,aAAiB,IACpCA,EAAM,OAAS,EAGpBe,EAASf,CAAK,EACT,OAAO,KAAKA,CAAK,EAAE,SAAW,EAGhC,EACT,CAEO,SAASuB,GAAUvB,EAAkC,CAC1D,OAAKN,EAEE,CAAC,EAAEM,GAAS,aAAeA,GAFZ,EAGxB,CAIO,SAASwB,IAAO,CAAC,CAGjB,SAASC,IAAS,CAChB,MAAA,EACT,CAGO,SAASC,IAAU,CACjB,MAAA,EACT,CASO,SAASC,GAAMC,EAAcC,EAAQ,EAAGC,EAAO,EAAG,CACvD,MAAMC,EAAkB,CAAA,EAExB,QAASC,EAAI,EAAGA,EAAIJ,EAAM,EAAEI,EACpBD,EAAA,KAAKF,EAAQG,EAAIF,CAAI,EAGtB,OAAAC,CACT,CAOO,SAASE,GAAQjC,EAAgB,CAC/B,OAAA,OAAO,UAAU,SAAS,KAAKA,CAAK,EAAE,MAAM,EAAG,EAAE,CAC1D,CAOgB,SAAAkC,GAAaC,EAAS,GAAI,CACxC,MAAMC,EAAQ,iEACRC,EAASD,EAAM,OAErB,IAAIE,EAAS,GAEb,KAAOH,KACKG,GAAAF,EAAM,OAAO,KAAK,MAAM,KAAK,OAAO,EAAIC,CAAM,CAAC,EAGpD,OAAAC,CACT,CC5EA,MAAMC,GAAc,gBACdC,GAAa,uBAEbC,EAAc,MAAMD,EAAU,QAAQD,EAAW,IAEjDG,GAAc,cAAcD,CAAW,aAAaA,CAAW,aAAaA,CAAW,YACvFE,EAAc,cAAcF,CAAW,aAAaA,CAAW,aAAaA,CAAW,aAAaA,CAAW,YAMxGG,GAAU,IAAI,OAAO,MAAMF,EAAW,EAAE,EACxCG,GAAW,IAAI,OAAO,OAAOF,CAAW,EAAE,EAC1CG,GAAU,IAAI,OAAO,MAAMH,CAAW,EAAE,EACxCI,GAAW,IAAI,OAAO,OAAOJ,CAAW,EAAE,EAC1CK,GAAU,IAAI,OAAO,MAAML,CAAW,EAAE,EACxCM,GAAW,IAAI,OAAO,OAAON,CAAW,EAAE,EAE1CO,GAAY,uDACZC,GAAY,uEACZC,GAAY,uDACZC,GAAY,uEAEZC,EAAe,OAAO,OAAO,CACxC,UAAW,SACX,aAAc,SACd,KAAM,MACN,WAAY,SACZ,MAAO,SACP,MAAO,SACP,OAAQ,SACR,MAAO,MACP,eAAgB,SAChB,KAAM,MACN,WAAY,SACZ,MAAO,SACP,UAAW,SACX,YAAa,SACb,UAAW,SACX,WAAY,SACZ,UAAW,SACX,MAAO,SACP,eAAgB,SAChB,SAAU,SACV,QAAS,SACT,KAAM,MACN,SAAU,SACV,SAAU,SACV,cAAe,SACf,SAAU,SACV,UAAW,SACX,SAAU,SACV,UAAW,SACX,YAAa,SACb,eAAgB,SAChB,WAAY,SACZ,WAAY,SACZ,QAAS,SACT,WAAY,SACZ,aAAc,SACd,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,WAAY,SACZ,SAAU,SACV,YAAa,SACb,QAAS,SACT,QAAS,SACT,WAAY,SACZ,UAAW,SACX,YAAa,SACb,YAAa,SACb,QAAS,MACT,UAAW,SACX,WAAY,SACZ,KAAM,SACN,UAAW,SACX,KAAM,SACN,MAAO,SACP,YAAa,SACb,KAAM,SACN,SAAU,SACV,QAAS,SACT,UAAW,SACX,OAAQ,SACR,MAAO,SACP,MAAO,SACP,SAAU,SACV,cAAe,SACf,UAAW,SACX,aAAc,SACd,UAAW,SACX,WAAY,SACZ,UAAW,SACX,qBAAsB,SACtB,UAAW,SACX,WAAY,SACZ,UAAW,SACX,UAAW,SACX,YAAa,SACb,cAAe,SACf,aAAc,SACd,eAAgB,MAChB,eAAgB,MAChB,eAAgB,SAChB,YAAa,SACb,KAAM,MACN,UAAW,SACX,MAAO,SACP,QAAS,MACT,OAAQ,SACR,iBAAkB,SAClB,WAAY,SACZ,aAAc,SACd,aAAc,SACd,eAAgB,SAChB,gBAAiB,SACjB,kBAAmB,SACnB,gBAAiB,SACjB,gBAAiB,SACjB,aAAc,SACd,UAAW,SACX,UAAW,SACX,SAAU,SACV,YAAa,SACb,KAAM,SACN,QAAS,SACT,MAAO,SACP,UAAW,SACX,OAAQ,SACR,UAAW,SACX,OAAQ,SACR,cAAe,SACf,UAAW,SACX,cAAe,SACf,cAAe,SACf,WAAY,SACZ,UAAW,SACX,KAAM,SACN,KAAM,SACN,KAAM,SACN,WAAY,SACZ,OAAQ,SACR,cAAe,SACf,IAAK,MACL,UAAW,SACX,UAAW,SACX,YAAa,SACb,OAAQ,SACR,WAAY,SACZ,SAAU,SACV,SAAU,SACV,OAAQ,SACR,OAAQ,SACR,QAAS,SACT,UAAW,SACX,UAAW,SACX,UAAW,SACX,KAAM,SACN,YAAa,SACb,UAAW,SACX,IAAK,SACL,KAAM,SACN,QAAS,SACT,OAAQ,SACR,UAAW,SACX,OAAQ,SACR,MAAO,SACP,MAAO,MACP,WAAY,SACZ,OAAQ,MACR,YAAa,QACf,CAAC,EAIYC,GAAc,OAAO,OAAO,IAAI,IAAI,OAAO,KAAKD,CAAY,CAAC,CAAC,EASpE,SAASE,GAAQxD,EAAwB,CAG9C,OAFAA,EAAQ,OAAOA,CAAK,EAAE,OAAO,YAAY,EAEpCA,EAIDA,IAAU,eAAiBsD,EAAatD,CAAkB,EACrD,GAIPA,IAAU,eACVuD,GAAY,IAAIvD,CAAkB,GAClC4C,GAAQ,KAAK5C,CAAK,GAClB6C,GAAS,KAAK7C,CAAK,GACnB8C,GAAQ,KAAK9C,CAAK,GAClB+C,GAAS,KAAK/C,CAAK,GACnBgD,GAAQ,KAAKhD,CAAK,GAClBiD,GAAS,KAAKjD,CAAK,GACnBkD,GAAU,KAAKlD,CAAK,GACpBmD,GAAU,KAAKnD,CAAK,GACpBoD,GAAU,KAAKpD,CAAK,GACpBqD,GAAU,KAAKrD,CAAK,EAnBb,EAqBX,CAOO,SAASyD,GAAiBC,EAAe,CAG9C,GAFAA,EAAQA,EAAM,SAAA,EAAW,OAAO,YAAY,EAExCA,IAAU,cACZ,MAAO,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,OAAQ,OAAQ,SAAUC,CAAY,EAGzE,IAAIC,EAAQ,GAERN,EAAaI,CAAkB,IACjCA,EAAQJ,EAAaI,CAAkB,EAC/BE,EAAA,IAGN,IAAAC,EAEJ,GAAKA,EAAQjB,GAAQ,KAAKc,CAAK,EAAI,CACjC,KAAM,CAAE,EAAG,EAAAI,EAAG,EAAAC,GAAMC,EAAaH,EAAM,CAAC,EAAGA,EAAM,CAAC,EAAGA,EAAM,CAAC,CAAC,EAEtD,MAAA,CACL,EAAG,EAAI,IACP,EAAGC,EAAI,IACP,EAAGC,EAAI,IACP,OAAQ,MACR,SAAUJ,CAAA,CAEd,CAEA,GAAKE,EAAQhB,GAAS,KAAKa,CAAK,EAAI,CAClC,KAAM,CAAE,EAAG,EAAAI,EAAG,EAAAC,GAAMC,EAAaH,EAAM,CAAC,EAAGA,EAAM,CAAC,EAAGA,EAAM,CAAC,CAAC,EAEtD,MAAA,CACL,EAAG,EAAI,IACP,EAAGC,EAAI,IACP,EAAGC,EAAI,IACP,EAAGE,EAAeJ,EAAM,CAAC,CAAC,EAC1B,OAAQ,OACR,SAAUF,CAAA,CAEd,CAEA,GAAKE,EAAQf,GAAQ,KAAKY,CAAK,EAAI,CACjC,KAAM,CAAE,EAAAQ,EAAG,EAAAC,EAAG,EAAAC,GAAMC,EAAaR,EAAM,CAAC,EAAGA,EAAM,CAAC,EAAGA,EAAM,CAAC,CAAC,EAEtD,MAAA,CAAE,EAAGK,EAAI,IAAK,EAAAC,EAAG,EAAAC,EAAG,OAAQ,MAAO,SAAUE,EACtD,CAEA,GAAKT,EAAQd,GAAS,KAAKW,CAAK,EAAI,CAClC,KAAM,CAAE,EAAAQ,EAAG,EAAAC,EAAG,EAAAC,GAAMC,EAAaR,EAAM,CAAC,EAAGA,EAAM,CAAC,EAAGA,EAAM,CAAC,CAAC,EAEtD,MAAA,CACL,EAAGK,EAAI,IACP,EAAAC,EACA,EAAAC,EACA,EAAGH,EAAeJ,EAAM,CAAC,CAAC,EAC1B,OAAQ,OACR,SAAUS,CAAA,CAEd,CAEA,GAAKT,EAAQb,GAAQ,KAAKU,CAAK,EAAI,CACjC,KAAM,CAAE,EAAAQ,EAAG,EAAAC,EAAG,EAAAI,GAAMC,EAAaX,EAAM,CAAC,EAAGA,EAAM,CAAC,EAAGA,EAAM,CAAC,CAAC,EAEtD,MAAA,CAAE,EAAGK,EAAI,IAAK,EAAAC,EAAG,EAAAI,EAAG,OAAQ,MAAO,SAAUE,EACtD,CAEA,GAAKZ,EAAQZ,GAAS,KAAKS,CAAK,EAAI,CAClC,KAAM,CAAE,EAAAQ,EAAG,EAAAC,EAAG,EAAAI,GAAMC,EAAaX,EAAM,CAAC,EAAGA,EAAM,CAAC,EAAGA,EAAM,CAAC,CAAC,EAEtD,MAAA,CACL,EAAGK,EAAI,IACP,EAAAC,EACA,EAAAI,EACA,EAAGN,EAAeJ,EAAM,CAAC,CAAC,EAC1B,OAAQ,OACR,SAAUY,CAAA,CAEd,CAEA,OAAKZ,EAAQX,GAAU,KAAKQ,CAAK,GACxB,CACL,EAAG,SAAS,GAAGG,EAAM,CAAC,CAAC,GAAGA,EAAM,CAAC,CAAC,GAAI,EAAE,EACxC,EAAG,SAAS,GAAGA,EAAM,CAAC,CAAC,GAAGA,EAAM,CAAC,CAAC,GAAI,EAAE,EACxC,EAAG,SAAS,GAAGA,EAAM,CAAC,CAAC,GAAGA,EAAM,CAAC,CAAC,GAAI,EAAE,EACxC,OAAQD,EAAQ,OAAS,OACzB,SAAUD,CAAA,GAITE,EAAQV,GAAU,KAAKO,CAAK,GACxB,CACL,EAAG,SAAS,GAAGG,EAAM,CAAC,CAAC,GAAGA,EAAM,CAAC,CAAC,GAAI,EAAE,EACxC,EAAG,SAAS,GAAGA,EAAM,CAAC,CAAC,GAAGA,EAAM,CAAC,CAAC,GAAI,EAAE,EACxC,EAAG,SAAS,GAAGA,EAAM,CAAC,CAAC,GAAGA,EAAM,CAAC,CAAC,GAAI,EAAE,EACxC,EAAGa,GAAoB,GAAGb,EAAM,CAAC,CAAC,GAAGA,EAAM,CAAC,CAAC,EAAE,EAC/C,OAAQD,EAAQ,OAAS,OACzB,SAAUD,CAAA,GAITE,EAAQT,GAAU,KAAKM,CAAK,GACxB,CACL,EAAG,SAASG,EAAM,CAAC,EAAG,EAAE,EACxB,EAAG,SAASA,EAAM,CAAC,EAAG,EAAE,EACxB,EAAG,SAASA,EAAM,CAAC,EAAG,EAAE,EACxB,OAAQD,EAAQ,OAAS,OACzB,SAAUD,CAAA,GAITE,EAAQR,GAAU,KAAKK,CAAK,GACxB,CACL,EAAG,SAASG,EAAM,CAAC,EAAG,EAAE,EACxB,EAAG,SAASA,EAAM,CAAC,EAAG,EAAE,EACxB,EAAG,SAASA,EAAM,CAAC,EAAG,EAAE,EACxB,EAAGa,GAAoBb,EAAM,CAAC,CAAC,EAC/B,OAAQD,EAAQ,OAAS,OACzB,SAAUD,CAAA,EAIP,IACT,CAOO,SAASgB,GAAWjB,EAAyB,CAClD,KAAM,CAAE,EAAAkB,EAAG,GAAGC,CAAI,EAAIC,EAAiBpB,CAAK,EAE5C,OAAOmB,EAAI,OAEX,MAAME,EAAMC,GAASH,EAAI,EAAGA,EAAI,EAAGA,EAAI,CAAC,EAClCI,EAAMC,GAASL,EAAI,EAAGA,EAAI,EAAGA,EAAI,CAAC,EAClCM,EAAMC,GAASP,EAAI,EAAGA,EAAI,EAAGA,EAAI,CAAC,EAElCQ,EAAOC,GAAUT,EAAI,EAAGA,EAAI,EAAGA,EAAI,EAAGD,CAAC,EAEtC,MAAA,CACL,IAAAC,EACA,IAAAE,EACA,IAAAE,EACA,IAAAE,EACA,MAAOP,EACP,KAAM,CAAE,GAAGC,EAAK,EAAAD,EAAG,OAAQ,MAAO,EAClC,KAAM,CAAE,GAAGG,EAAK,EAAAH,EAAG,OAAQ,MAAO,EAClC,KAAM,CAAE,GAAGK,EAAK,EAAAL,EAAG,OAAQ,MAAO,EAClC,KAAAS,EACA,OAAQ3B,CAAA,CAEZ,CAOO,SAASoB,EAAiBS,EAAoB,CACnD,IAAIV,EAAgB,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,GACjCD,EAAI,EACJlB,EAEA,OAAA,OAAO6B,GAAgB,SACzB7B,EAAQD,GAAiB8B,CAAW,EAE5B7B,EAAA6B,EAGN7B,IAAU,MAAQ,OAAOA,GAAU,WACjC,MAAOA,EACTmB,EAAMW,GAAS9B,EAAM,EAAGA,EAAM,EAAGA,EAAM,CAAC,EAC/B,MAAOA,IAChBmB,EAAMY,GAAS/B,EAAM,EAAGA,EAAM,EAAGA,EAAM,CAAC,GAGtC,MAAOA,IACLkB,EAAAX,EAAeP,EAAM,GAAK,CAAC,EAE3B,OAAO,MAAMkB,CAAC,IACZA,EAAA,IAIFC,EAAAnB,GAGD,CAAE,GAAGmB,EAAK,EAAAD,EAAG,OAAQ,OAAQ,SAAUjB,EAChD,CASgB,SAAAU,EAAaH,EAAoBC,EAAoBC,EAAoB,CAChF,MAAA,CACL,EAAGsB,EAAWxB,EAAG,EAAG,GAAG,EAAI,IAC3B,EAAGwB,EAAWC,EAAaxB,CAAC,EAAIyB,EAAgBzB,CAAC,EAAIA,EAAG,EAAG,CAAC,EAC5D,EAAGuB,EAAWC,EAAavB,CAAC,EAAIwB,EAAgBxB,CAAC,EAAIA,EAAG,EAAG,CAAC,CAAA,CAEhE,CASgB,SAAAJ,EAAa6B,EAAoB/B,EAAoBC,EAAoB,CAChF,MAAA,CACL,EAAG2B,EAAWG,EAAG,EAAG,GAAG,EAAI,IAC3B,EAAGH,EAAW5B,EAAG,EAAG,GAAG,EAAI,IAC3B,EAAG4B,EAAW3B,EAAG,EAAG,GAAG,EAAI,GAAA,CAE/B,CASgB,SAAAS,EAAaN,EAAoBC,EAAoBI,EAAoB,CAChF,MAAA,CACL,EAAGmB,EAAWxB,EAAG,EAAG,GAAG,EAAI,IAC3B,EAAGwB,EAAWC,EAAaxB,CAAC,EAAIyB,EAAgBzB,CAAC,EAAIA,EAAG,EAAG,CAAC,EAC5D,EAAGuB,EAAWC,EAAapB,CAAC,EAAIqB,EAAgBrB,CAAC,EAAIA,EAAG,EAAG,CAAC,CAAA,CAEhE,CAOO,SAASN,EAAeW,EAAoB,CAC1C,OAAAc,EAAWC,EAAaf,CAAC,EAAIgB,EAAgBhB,CAAC,EAAIA,EAAG,EAAG,CAAC,CAClE,CAEgB,SAAAY,GAAStB,EAAoBC,EAAoBC,EAAoB,CACnF,IAAI,EAAGN,EAAGC,EAGV,GAFE,CAAE,EAAAG,EAAG,EAAAC,EAAG,EAAAC,CAAA,EAAMC,EAAaH,EAAGC,EAAGC,CAAC,EAEhCD,IAAM,EACR,EAAIL,EAAIC,EAAIK,MACP,CACC,MAAA0B,EAAI1B,EAAI,GAAM,GAAK,EAAID,GAAKC,EAAID,EAAIC,EAAID,EACxC4B,EAAI,EAAI3B,EAAI0B,EAElB,EAAIE,GAASD,EAAGD,EAAG5B,EAAI,EAAI,CAAC,EACxBJ,EAAAkC,GAASD,EAAGD,EAAG5B,CAAC,EACpBH,EAAIiC,GAASD,EAAGD,EAAG5B,EAAI,EAAI,CAAC,CAC9B,CAEK,UAAA,IACAJ,GAAA,IACAC,GAAA,IAEE,CAAE,EAAG,EAAAD,EAAG,EAAAC,EAAG,SAAUJ,CAAY,CAC1C,CAEgB,SAAAqB,GAASa,EAAoB/B,EAAoBC,EAAoB,EAClF,CAAE,EAAA8B,EAAG,EAAA/B,EAAG,EAAAC,CAAA,EAAMC,EAAa6B,EAAG/B,EAAGC,CAAC,GAEnC,MAAMkC,EAAM,KAAK,IAAIJ,EAAG/B,EAAGC,CAAC,EACtBmC,EAAM,KAAK,IAAIL,EAAG/B,EAAGC,CAAC,EAC5B,IAAIG,EAAG,EAED,MAAAE,GAAK6B,EAAMC,GAAO,EAExB,GAAID,IAAQC,EACVhC,EAAI,EAAI,MACH,CACL,MAAMiC,EAAIF,EAAMC,EAIhB,OAFA,EAAI9B,EAAI,GAAM+B,GAAK,EAAIF,EAAMC,GAAOC,GAAKF,EAAMC,GAEvCD,EAAK,CACX,KAAKJ,EAAG,CACN3B,GAAKJ,EAAIC,GAAKoC,GAAKrC,EAAIC,EAAI,EAAI,GAC/B,KACF,CACA,KAAKD,EAAG,CACDI,GAAAH,EAAI8B,GAAKM,EAAI,EAClB,KACF,CACA,KAAKpC,EAAG,CACDG,GAAA2B,EAAI/B,GAAKqC,EAAI,EAClB,KACF,CACA,QACMjC,EAAA,CAER,CAEKA,GAAA,EACP,CAEA,MAAO,CAAE,EAAAA,EAAG,EAAG,EAAAE,EAAG,SAAUE,CAAY,CAC1C,CAEgB,SAAA8B,GAASlC,EAAoBC,EAAoBC,EAAoB,EAClF,CAAE,EAAAF,EAAG,EAAAC,EAAG,EAAAC,CAAA,EAAMC,EAAaH,EAAGC,EAAGC,CAAC,GAE7B,MAAAG,EAAI,IAAO,EAAIH,EAAID,GAAK,EAAI,KAAK,IAAI,EAAIC,EAAI,CAAC,IAE/C,OAAAD,EAAA,GAAKI,EAAIH,GAAMG,EAEb,CAAE,EAAGL,EAAI,IAAK,EAAAC,EAAG,EAAAI,EAAG,SAAUE,EACvC,CAEgB,SAAA4B,GAASnC,EAAoBC,EAAoBI,EAAoB,EAClF,CAAE,EAAAL,EAAG,EAAAC,EAAG,EAAAI,CAAA,EAAMC,EAAaN,EAAGC,EAAGI,CAAC,GAE7B,MAAAH,EAAI,GAAMG,GAAK,EAAIJ,GAEzB,OAAAA,EAAKI,EAAIJ,GAAM,EAAI,KAAK,IAAI,EAAIC,EAAI,CAAC,GAE9B,CAAE,EAAGF,EAAI,IAAK,EAAAC,EAAG,EAAAC,EAAG,SAAUE,EACvC,CAEgB,SAAAmB,GAASvB,EAAoBC,EAAoBI,EAAoB,EAClF,CAAE,EAAAL,EAAG,EAAAC,EAAG,EAAAI,CAAA,EAAMC,EAAaN,EAAGC,EAAGI,CAAC,GAE9BL,GAAA,EAEC,MAAAlC,EAAI,KAAK,MAAMkC,CAAC,EAChBoC,EAAIpC,EAAIlC,EACR+D,EAAIxB,GAAK,EAAIJ,GACb2B,EAAIvB,GAAK,EAAI+B,EAAInC,GACjBoC,EAAIhC,GAAK,GAAK,EAAI+B,GAAKnC,GACvBqC,EAAMxE,EAAI,EAEZ,IAAA6D,EAAI,CAACtB,EAAGuB,EAAGC,EAAGA,EAAGQ,EAAGhC,CAAC,EAAEiC,CAAG,EAC1B1C,EAAI,CAACyC,EAAGhC,EAAGA,EAAGuB,EAAGC,EAAGA,CAAC,EAAES,CAAG,EAC1BzC,EAAI,CAACgC,EAAGA,EAAGQ,EAAGhC,EAAGA,EAAGuB,CAAC,EAAEU,CAAG,EAEzB,OAAAX,GAAA,IACA/B,GAAA,IACAC,GAAA,IAEE,CAAE,EAAA8B,EAAG,EAAA/B,EAAG,EAAAC,EAAG,SAAUJ,CAAY,CAC1C,CAEgB,SAAAuB,GAASW,EAAoB/B,EAAoBC,EAAoB,EAClF,CAAE,EAAA8B,EAAG,EAAA/B,EAAG,EAAAC,CAAA,EAAMC,EAAa6B,EAAG/B,EAAGC,CAAC,GAEnC,MAAMkC,EAAM,KAAK,IAAIJ,EAAG/B,EAAGC,CAAC,EACtBmC,EAAM,KAAK,IAAIL,EAAG/B,EAAGC,CAAC,EAExB,IAAAG,EAEJ,MAAMK,EAAI0B,EACJE,EAAIF,EAAMC,EACV/B,EAAI8B,IAAQ,EAAI,EAAIE,EAAIF,EAE9B,GAAIA,IAAQC,EACNhC,EAAA,MACC,CACL,OAAQ+B,EAAK,CACX,KAAKJ,EAAG,CACN3B,GAAKJ,EAAIC,GAAKoC,GAAKrC,EAAIC,EAAI,EAAI,GAC/B,KACF,CACA,KAAKD,EAAG,CACDI,GAAAH,EAAI8B,GAAKM,EAAI,EAClB,KACF,CACA,KAAKpC,EAAG,CACDG,GAAA2B,EAAI/B,GAAKqC,EAAI,EAClB,KACF,CACA,QACMjC,EAAA,CAER,CAEKA,GAAA,EACP,CAEA,MAAO,CAAE,EAAAA,EAAG,EAAAC,EAAG,EAAAI,EAAG,SAAUE,CAAY,CAC1C,CAEO,SAASW,GACdS,EACA/B,EACAC,EACA0C,EAAa,GACb,EACC,CAAE,EAAAZ,EAAG,EAAA/B,EAAG,EAAAC,CAAA,EAAMC,EAAa6B,EAAG/B,EAAGC,CAAC,GAEnC,MAAMoB,EAAM,CACVuB,EAAa,KAAK,MAAMb,EAAI,GAAG,EAAE,SAAS,EAAE,CAAC,EAC7Ca,EAAa,KAAK,MAAM5C,EAAI,GAAG,EAAE,SAAS,EAAE,CAAC,EAC7C4C,EAAa,KAAK,MAAM3C,EAAI,GAAG,EAAE,SAAS,EAAE,CAAC,CAAA,EAG/C,OAAI0C,GAAcE,EAAaxB,EAAI,CAAC,CAAC,GAAKwB,EAAaxB,EAAI,CAAC,CAAC,GAAKwB,EAAaxB,EAAI,CAAC,CAAC,EAC5EA,EAAI,CAAC,EAAE,OAAO,CAAC,EAAIA,EAAI,CAAC,EAAE,OAAO,CAAC,EAAIA,EAAI,CAAC,EAAE,OAAO,CAAC,EAGvD,IAAMA,EAAI,KAAK,EAAE,CAC1B,CAEO,SAASG,GACdO,EACA/B,EACAC,EACAa,EACAgC,EAAa,GACb,EACC,CAAE,EAAAf,EAAG,EAAA/B,EAAG,EAAAC,CAAA,EAAMC,EAAa6B,EAAG/B,EAAGC,CAAC,GAEnC,MAAMoB,EAAM,CACVuB,EAAa,KAAK,MAAMb,EAAI,GAAG,EAAE,SAAS,EAAE,CAAC,EAC7Ca,EAAa,KAAK,MAAM5C,EAAI,GAAG,EAAE,SAAS,EAAE,CAAC,EAC7C4C,EAAa,KAAK,MAAM3C,EAAI,GAAG,EAAE,SAAS,EAAE,CAAC,EAC7C2C,EAAaG,GAAoB5C,EAAeW,CAAC,CAAC,CAAC,CAAA,EAInD,OAAAgC,GACAD,EAAaxB,EAAI,CAAC,CAAC,GACnBwB,EAAaxB,EAAI,CAAC,CAAC,GACnBwB,EAAaxB,EAAI,CAAC,CAAC,GACnBwB,EAAaxB,EAAI,CAAC,CAAC,EAEZA,EAAI,CAAC,EAAE,OAAO,CAAC,EAAIA,EAAI,CAAC,EAAE,OAAO,CAAC,EAAIA,EAAI,CAAC,EAAE,OAAO,CAAC,EAAIA,EAAI,CAAC,EAAE,OAAO,CAAC,EAG1E,IAAMA,EAAI,KAAK,EAAE,CAC1B,CAEO,SAAS2B,GAASC,EAAeC,EAAeC,EAAS,GAAK,CAC/D,GAAA,CAACF,GAAU,CAACC,EAAe,MAAA,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtD,GAAI,CAACD,EAAQ,OAAOjC,EAAiBkC,CAAM,EAC3C,GAAI,CAACA,EAAQ,OAAOlC,EAAiBiC,CAAM,EAErC,MAAAG,EAAQpC,EAAiBiC,CAAM,EAC/BI,EAAQrC,EAAiBkC,CAAM,EAE/BI,EAAiB1B,EAAWuB,EAAQ,EAAG,CAAC,EACxCI,EAAmBD,EAAiB,EAAI,EAExCE,EAAgBJ,EAAM,EAAIC,EAAM,EAKhCI,IAHJF,EAAmBC,IAAkB,GACjCD,GACCA,EAAmBC,IAAkB,EAAID,EAAmBC,IACtC,GAAK,EAC5BE,EAAU,EAAID,EAEb,MAAA,CACL,EAAG,KAAK,MAAML,EAAM,EAAIK,EAAUJ,EAAM,EAAIK,CAAO,EACnD,EAAG,KAAK,MAAMN,EAAM,EAAIK,EAAUJ,EAAM,EAAIK,CAAO,EACnD,EAAG,KAAK,MAAMN,EAAM,EAAIK,EAAUJ,EAAM,EAAIK,CAAO,EACnD,EAAG,KAAK,MAAMN,EAAM,EAAIE,EAAiBD,EAAM,GAAK,EAAIC,EAAe,EACvE,OAAQ,OACR,SAAUzD,CAAA,CAEd,CAEgB,SAAA8D,GAAY/D,EAAcgE,EAAwB,CAC1D,MAAAC,EAAO7C,EAAiBpB,CAAK,EAE9B,OAAAiE,EAAA,EAAI1D,EAAe0B,EAAa+B,CAAK,EAAI9B,EAAgB8B,CAAK,EAAIA,CAAK,EAErEC,CACT,CAEO,SAASC,GAAYC,EAAY,GAAO5H,EAAsC,MAAO,CAC1F,MAAM4F,EAAI,KAAK,MAAM,KAAK,OAAA,EAAW,GAAG,EAClC/B,EAAI,KAAK,MAAM,KAAK,OAAA,EAAW,GAAG,EAClCC,EAAI,KAAK,MAAM,KAAK,OAAA,EAAW,GAAG,EAExC,GAAI9D,IAAS,MACX,OAAO4H,EAAYvC,GAAUO,EAAG/B,EAAGC,EAAG,KAAK,OAAO,CAAC,EAAIqB,GAASS,EAAG/B,EAAGC,CAAC,EAGrE,IAAAL,EAEJ,OAAIzD,IAAS,MACHyD,EAAAsB,GAASa,EAAG/B,EAAGC,CAAC,EACf9D,IAAS,MACVyD,EAAAwB,GAASW,EAAG/B,EAAGC,CAAC,EAEhBL,EAAA,CAAE,EAAAmC,EAAG,EAAA/B,EAAG,EAAAC,CAAE,EAGhB8D,IACDnE,EAAoB,EAAI,KAAK,UAGzBA,EAAM,UACf,CAEA,SAASgD,EAAaoB,EAAa,CACjC,OAAOA,EAAI,SAAW,EAAI,IAAIA,CAAG,GAAKA,EAAI,UAC5C,CAEA,SAASnB,EAAarE,EAAyB,CAC7C,OAAOA,EAAO,OAAO,CAAC,IAAMA,EAAO,OAAO,CAAC,CAC7C,CAMA,SAASuE,GAAoBkB,EAAiC,CACrD,OAAA,KAAK,MAAM,WAAWA,CAAgB,EAAI,GAAG,EAAE,SAAS,EAAE,CACnE,CAEA,SAASrD,GAAoBS,EAAqB,CACzC,OAAA,SAASA,EAAK,EAAE,EAAI,GAC7B,CAEA,SAASO,EAAWqC,EAAyB7B,EAAaD,EAAqB,CACtE,OAAA,KAAK,IAAIC,EAAK,KAAK,IAAID,EAAK,WAAW8B,CAAgB,CAAC,CAAC,CAClE,CAEA,SAAS/B,GAASD,EAAWD,EAAWS,EAAmB,CAGzD,OAFIA,EAAI,IAAQA,GAAA,GACZA,EAAI,IAAQA,GAAA,GACZA,EAAI,EAAI,EAAUR,GAAKD,EAAIC,GAAK,EAAIQ,EACpCA,EAAI,EAAI,EAAUT,EAClBS,EAAI,EAAI,EAAUR,GAAKD,EAAIC,IAAM,EAAI,EAAIQ,GAAK,EAE3CR,CACT,CAEA,SAASJ,EAAaqC,EAAmC,CACvD,OAAO,OAAOA,CAAO,EAAE,KAAK,EAAE,SAAS,GAAG,CAC5C,CAEA,SAASpC,EAAgBoC,EAAkC,CACnD,MAAAD,EAAS,WAAWC,CAAiB,EAAI,IAE/C,OAAO,OAAO,MAAMD,CAAM,EAAI,EAAIA,CACpC,CAEA,SAASpE,GAAuB,CAC1B,OAAAvD,EAAU,KAAK,CAAC,GAAK,KAAK,GAAK,GAAK,KAAK,EAAI,EACxC,QAAQ,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAGjD,OAAO,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,GAC5C,CAEA,SAASkE,GAAuB,CAC1B,OAAAlE,EAAU,KAAK,CAAC,GAAK,KAAK,GAAK,GAAK,KAAK,EAAI,EACxC,QAAQ,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAGjD,OAAO,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,GAC5C,CAEA,SAASqE,GAAuB,CAC1B,OAAArE,EAAU,KAAK,CAAC,GAAK,KAAK,GAAK,GAAK,KAAK,EAAI,EACxC,QAAQ,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAGjD,OAAO,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,GAC5C,CC72BA,SAAS6H,GAAOC,EAAa,CAC3B,OAAOA,EAAM,CAACA,CAChB,CAEgB,SAAAC,GAAahG,EAAgB+D,EAAM,EAAW,CAC5D,MAAMkC,EAAO,IAAI,MAAMjG,EAAS,CAAC,EAAE,KAAK,CAAC,EAKhC,SAAAkG,EAAIC,EAAeC,EAAe,CACrC,GAAA,GAACA,GAASD,GAASnG,GAIvB,IAFSmG,GAAA,EAEFA,GAASnG,GACdiG,EAAKE,CAAK,GAAKC,EACfD,GAASL,GAAOK,CAAK,CAEzB,CAKS,SAAAE,EAAIF,EAAQnG,EAAQ,CAC3B,GAAImG,GAAS,EAAU,MAAA,GACnBA,EAAQnG,IAAgBmG,EAAAnG,GAE5B,IAAIqG,EAAMF,EAAQpC,EAElB,KAAOoC,EAAQ,GACbE,GAAOJ,EAAKE,CAAK,EACjBA,GAASL,GAAOK,CAAK,EAGhBE,OAAAA,CACT,CAKA,SAASC,EAAIH,EAAe,CAC1B,OAAOE,EAAIF,EAAQ,CAAC,EAAIE,EAAIF,CAAK,CACnC,CAKA,SAASI,EAAWC,EAAe,CACjC,IAAIC,EAAO,EACPC,EAAQ1G,EAEZ,KAAO0G,EAAQD,GAAM,CACnB,MAAME,EAAS,KAAK,OAAOF,EAAOC,GAAS,CAAC,EACtCE,EAAQP,EAAIM,CAAM,EAExB,GAAIC,EAAQJ,EAAO,CACTE,EAAAC,EACR,QAAA,SACSC,EAAQJ,EAAO,CACxB,GAAIC,IAASE,EACX,OAAON,EAAII,EAAO,CAAC,GAAKD,EAAQC,EAAO,EAAIA,EAGtCA,EAAAE,CAAA,KAEA,QAAAA,CAEX,CAEO,OAAAF,CACT,CAEA,MAAO,CAAE,IAAAP,EAAK,IAAAG,EAAK,IAAAC,EAAK,WAAAC,CAAW,CACrC,CC1EO,SAASM,GAAShJ,EAAgB,CACjC,MAAA+H,EAAS,WAAW/H,CAAe,EAEzC,OAAO,OAAO,MAAM+H,CAAM,EAAI,EAAIA,CACpC,CAOO,SAASkB,EAAalB,EAAgB,CAC3C,OAAOA,EAAS,GAAK,IAAIA,CAAM,GAAKA,EAAO,UAC7C,CAOO,SAASmB,EAAYnB,EAAyB,CAEnD,MAAMoB,EAASpB,EAAO,SAAS,EAAE,MAAM,MAAM,EACvCqB,GAAOD,EAAO,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,GAAK,IAAI,OAAS,EAAEA,EAAO,CAAC,GAAK,GAE7D,OAAAC,EAAM,EAAIA,EAAM,CACzB,CASO,SAASC,GAActB,EAAyBuB,EAAU,EAAGC,EAAY,IAAa,CAKvF,GAJA,OAAOxB,GAAW,WACpBA,EAAS,WAAWA,CAAM,GAGxB,OAAO,MAAMA,CAAM,EAAU,MAAA,IAE7B,GAAA,CAACyB,EAASC,CAAO,EAAI,OAAO1B,CAAM,EAAE,MAAM,GAAG,EAEjD,MAAM2B,EAAe,IAAI,OAAO,cAAcJ,CAAO,IAAI,EAElD,KAAAI,EAAa,KAAKF,CAAO,GAC9BA,EAAUA,EAAQ,QAAQE,EAAc,KAAKH,CAAS,IAAI,EAGlD,OAAAE,EAAAA,EAAU,IAAIA,CAAO,GAAK,GAE7B,GAAGD,CAAO,GAAGC,CAAO,EAC7B,CAQgB,SAAAE,GAAQ5B,EAAgB0B,EAAiB,CACvD,GAAIA,IAAY,EAAU,OAAA,KAAK,MAAM1B,CAAM,EAE3C,IAAI6B,EAAO7B,EAAO,QAAQmB,EAAYnB,CAAM,CAAC,EAEvC,MAAA8B,EAAWD,EAAK,QAAQ,GAAG,EAEjC,GAAIC,IAAa,GAAW,OAAA9B,EAE5B,MAAM+B,EAAOF,EAAK,QAAQ,IAAK,EAAE,EAAE,MAAM,EAAE,EACrCG,EAAYF,EAAWJ,EAG7B,OAFcK,EAAKC,CAAS,GAIxBH,EAAK,OAAOG,EAAY,CAAC,IAAM,IACjCH,EAAOA,EAAK,UAAU,EAAGG,EAAY,CAAC,EAAI,IAE1CH,EAAOA,EAAK,UAAU,EAAGG,EAAY,CAAC,EAGjC,WAAW,OAAOH,CAAI,EAAE,QAAQH,CAAO,CAAC,GAR5B1B,CASrB,CASgB,SAAAiC,GAAcjC,EAAgBkC,EAAkBR,EAAiB,CACxE,OAAAE,GAAQ5B,EAASkC,EAAUR,CAAO,CAC3C,CAQgB,SAAAS,GAAMnC,EAAgBoC,EAAuB,CACvD,GAAAA,EAAgB,GAAKA,EAAgB,EAChC,OAAA,KAAK,MAAMpC,CAAM,EAGpB,MAAAqC,EAAY,KAAK,KAAKrC,CAAM,EAE9B,OAAAA,EAASoC,GAAiBC,EACrBA,EAEA,KAAK,MAAMrC,CAAM,CAE5B,CASgB,SAAArC,GAAWqC,EAAyB7B,EAAaD,EAAa,CACrE,OAAA,KAAK,IAAIC,EAAK,KAAK,IAAID,EAAK,WAAW8B,CAAgB,CAAC,CAAC,CAClE,CAKA,MAAMsC,GAAsB,OAAO,OAAO,CACxC,IACA,KACA,KACA,KACA,KACA,MACF,CAAkC,EAQlB,SAAAC,GAAeC,EAAcC,EAAyB,OAAQ,CACxE,IAAAC,EAAYD,EAAK,cACrBC,EAAYJ,GAAoB,SAASI,CAAS,EAAIA,EAAY,OAE9D,IAAAC,EACJ,OAAQD,EAAW,CACjB,IAAK,OACKC,EAAA,EACR,MACF,IAAK,KACKA,EAAA,EACR,MACF,IAAK,KACKA,EAAA,EACR,MACF,IAAK,KACKA,EAAA,EACR,MACF,IAAK,KACKA,EAAA,EACR,MACF,QACS,OAAAH,CACX,CAEI,IAAAI,EAEJ,GAAKD,EAMHC,EAAaJ,EAAO,MAAQG,MAL5B,KAAKC,EAAaJ,EAAMI,EAAa,MAC/B,EAAAD,EAAQ,GAD6B,EAAEA,EAE3CC,EAAaA,EAAa,KAMvB,OAAAA,CACT,CAUgB,SAAAC,GAAY7C,EAAyB8C,EAAY,GAAI,CACnE,MAAO,CAAC,WAAW,OAAO9C,CAAM,EAAE,YAAY8C,CAAS,CAAC,CAC1D,CAEA,SAASC,EAAY/C,EAAyB,CACtC,MAAA6B,EAAO,OAAO7B,CAAM,EAE1B,GAAI,CAAC6B,EAAK,SAAS,GAAG,EACpB,OAAO,OAAOA,EAAK,QAAQ,IAAK,EAAE,CAAC,EAG/B,MAAAmB,EAAU7B,EAAYnB,CAAM,EAE3B,OAAAgD,EAAU,EAAIH,GAAY,OAAO7C,CAAM,EAAI,IAAMgD,CAAO,EAAI,OAAOhD,CAAM,CAClF,CAOA,SAASiD,EAAgBC,EAAiE,CACxF,MAAO,IAAIC,IAAiC,CACtC,IAAAC,EAASD,EAAQ,CAAC,EAEb,QAAAlJ,EAAI,EAAGoH,EAAM8B,EAAQ,OAAQlJ,EAAIoH,EAAK,EAAEpH,EAC/CmJ,EAASF,EAAUE,EAAQD,EAAQlJ,CAAC,CAAC,EAGhC,OAAAmJ,CAAA,CAEX,CAOO,MAAMC,EAAQJ,EAAgB,CAACK,EAASC,IAAY,CACnD,MAAAC,EAAOT,EAAYO,CAAO,EAC1BG,EAAOV,EAAYQ,CAAO,EAC1BG,EAAOvC,EAAYmC,CAAO,EAAInC,EAAYoC,CAAO,EAGvD,OAFYC,EAAOC,EAEN,IAAMC,CACrB,CAAC,EAOYC,GAAOV,EAAgB,CAACK,EAASC,IAAY,CAClD,MAAAG,EAAO,IAAM,KAAK,IAAIvC,EAAYmC,CAAO,EAAGnC,EAAYoC,CAAO,CAAC,EAEtE,OAAQF,EAAMC,EAASI,CAAI,EAAIL,EAAME,EAASG,CAAI,GAAKA,CACzD,CAAC,EAOYE,GAAQX,EAAgB,CAACK,EAASC,IAAY,CACnD,MAAAG,EAAO,IAAM,KAAK,IAAIvC,EAAYmC,CAAO,EAAGnC,EAAYoC,CAAO,CAAC,EAEtE,OAAQF,EAAMC,EAASI,CAAI,EAAIL,EAAME,EAASG,CAAI,GAAKA,CACzD,CAAC,EAOYG,GAASZ,EAAgB,CAACK,EAASC,IAAY,CACpD,MAAAC,EAAOT,EAAYO,CAAO,EAC1BG,EAAOV,EAAYQ,CAAO,EAEzB,OAAAF,EAAMG,EAAOC,EAAMZ,GAAY,KAAO1B,EAAYoC,CAAO,EAAIpC,EAAYmC,CAAO,EAAE,CAAC,CAC5F,CAAC,EClRYQ,EAAkB,IAElBC,EAAoB,GACpBC,GAAkBD,EAAoBD,EAEtCG,EAAkB,GAClBC,GAAkBD,EAAkBF,EACpCI,GAAgBD,GAAkBJ,EAElCM,GAAe,GACfC,GAAiBD,GAAeH,EAChCK,GAAiBD,GAAiBN,EAClCQ,GAAgBD,GAAiBR,EAEjCU,EAAe,EACfC,GAAgBD,EAAeJ,GAC/BM,GAAkBD,GAAgBR,EAClCU,GAAkBD,GAAkBX,EACpCa,GAAiBD,GAAkBb,EAEnCe,GAAoB,EAEpBC,GAAmB,EACnBC,GAAiBD,GAAmBD,GAQ3CG,GAAyB,CAC7B,EAAEC,EAAMnJ,EAAO,CACP,MAAAoJ,EAAOD,EAAK,cAElB,OAAOnJ,EAAM,SAAW,EAAIoJ,EAAQA,EAAO,IAAQ,GACrD,EACA,EAAED,EAAMnJ,EAAO,CACP,MAAAqJ,EAAQF,EAAK,SAAA,EAAa,EAEhC,OAAOnJ,EAAM,SAAW,EAAIoF,EAAaiE,CAAK,EAAIA,CACpD,EACA,EAAEF,EAAMnJ,EAAO,CACP,MAAAsJ,EAAMH,EAAK,UAEjB,OAAOnJ,EAAM,SAAW,EAAIoF,EAAakE,CAAG,EAAIA,CAClD,EACA,EAAEH,EAAMnJ,EAAO,CACP,MAAAuJ,EAAOJ,EAAK,WAElB,OAAOnJ,EAAM,SAAW,EAAIoF,EAAamE,CAAI,EAAIA,CACnD,EACA,EAAEJ,EAAMnJ,EAAO,CACP,MAAAwJ,EAASL,EAAK,aAEpB,OAAOnJ,EAAM,SAAW,EAAIoF,EAAaoE,CAAM,EAAIA,CACrD,EACA,EAAEL,EAAMnJ,EAAO,CACP,MAAAyJ,EAASN,EAAK,aAEpB,OAAOnJ,EAAM,SAAW,EAAIoF,EAAaqE,CAAM,EAAIA,CACrD,EACA,EAAEN,EAAMnJ,EAAO,CACb,MAAM0J,EAAU,KAAK,MAAMP,EAAK,SAAS,EAAI,GAAK,CAAC,EAEnD,OAAOnJ,EAAM,SAAW,EAAIoF,EAAasE,CAAO,EAAIA,CACtD,CACF,EAEM7D,GAAe,oBACf8D,GAAkB,WAQR,SAAAC,EAAOC,EAAeC,EAAS,GAAO,CAC9C,MAAAX,EAAO,IAAI,KAAKU,CAAG,EAEzB,GAAIC,GAAU,OAAO,MAAM,CAACX,CAAI,EACxB,MAAA,IAAI,WAAW,oBAAoB,EAG3C,OAAI,OAAOU,GAAQ,UAAY,CAACA,EAAI,SAAS,GAAG,IAC9CV,EAAK,SAAS,CAAC,EACfA,EAAK,WAAW,CAAC,EACjBA,EAAK,WAAW,CAAC,GAGZA,CACT,CAWgB,SAAAY,GAAOZ,EAAgBa,EAAU,sBAAuB,CACtEb,EAAOS,EAAOT,CAAI,EAEZ,MAAAc,EAASD,EAAQ,MAAMnE,EAAY,EACnCvH,EAAS2L,GAAA,YAAAA,EAAQ,OAEvB,GAAI,CAAC3L,EACI,OAAA0L,EAGT,IAAI7L,EAAI,EACJmJ,EAAS,GAEb,KAAOnJ,EAAIG,GAAQ,CACX,MAAA4L,EAAaD,EAA4B9L,CAAC,EAC1CgM,EAAiBD,EAAU,CAAC,EAC5BE,EAAYlB,GAAWiB,CAAc,EAEvCC,EACQ9C,GAAA8C,EAAUjB,EAAMe,CAAS,EAEzB5C,GAAA4C,EAGV,EAAA/L,CACJ,CAEO,OAAAmJ,EAAO,QAAQqC,GAAiB,IAAI,CAC7C,CAOO,SAASU,GAAQlB,EAAgB,CACtC,OAAAA,EAAOS,EAAOT,CAAI,EAEX,GAAG/D,EAAa+D,EAAK,SAAA,CAAU,CAAC,IAAI/D,EAAa+D,EAAK,YAAY,CAAC,IAAI/D,EAC5E+D,EAAK,WAAW,CACjB,CAAA,EACH,CAOO,SAASmB,EAAWnB,EAAgB,CACzC,OAAAA,EAAOS,EAAOT,CAAI,EAEX,KAAK,MAAMA,EAAK,SAAS,EAAI,CAAC,EAAI,CAC3C,CAEA,MAAMoB,GAAkB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAOnD,SAASC,GAAerB,EAAY,CAClC,OAAAoB,GAAgBpB,EAAK,OAAA,CAAQ,CACtC,CAQgB,SAAAsB,GAAgBtB,EAAgBuB,EAAgB,CAC9D,OAAAvB,EAAOS,EAAOT,CAAI,EAClBA,EAAK,QAAQA,EAAK,QAAQ,EAAIuB,CAAM,EAE7BvB,CACT,CAQgB,SAAAwB,GAAWxB,EAAgBuB,EAAgB,CAC/C,OAAAA,GAAA1C,EAEHyC,GAAgBtB,EAAMuB,CAAM,CACrC,CAQgB,SAAAE,GAAWzB,EAAgBuB,EAAgB,CAC/C,OAAAA,GAAAzC,EAEH0C,GAAWxB,EAAMuB,CAAM,CAChC,CAQgB,SAAAG,GAAS1B,EAAgBuB,EAAgB,CAC7C,OAAAA,GAAAvC,EAEHyC,GAAWzB,EAAMuB,CAAM,CAChC,CAQgB,SAAAI,GAAY3B,EAAgBuB,EAAgB,CAChD,OAAAA,GAAA,GAEHG,GAAS1B,EAAMuB,CAAM,CAC9B,CAQgB,SAAAK,EAAQ5B,EAAgBuB,EAAgB,CACtD,OAAAvB,EAAOS,EAAOT,CAAI,EAClBuB,EAAS,CAAC,CAACA,EAEXvB,EAAK,QAAQA,EAAK,QAAQ,EAAIuB,CAAM,EAE7BvB,CACT,CAQgB,SAAA6B,GAAS7B,EAAgBuB,EAAgB,CAC7C,OAAAA,GAAAhC,EAEHqC,EAAQ5B,EAAMuB,CAAM,CAC7B,CAQgB,SAAAO,EAAU9B,EAAgBuB,EAAgB,CACxD,OAAAvB,EAAOS,EAAOT,CAAI,EAClBuB,EAAS,CAAC,CAACA,EAEXvB,EAAK,SAASA,EAAK,SAAS,EAAIuB,CAAM,EAE/BvB,CACT,CAQgB,SAAA+B,GAAY/B,EAAgBuB,EAAgB,CAChD,OAAAA,GAAA3B,GAEHkC,EAAU9B,EAAMuB,CAAM,CAC/B,CAQgB,SAAAS,GAAShC,EAAgBuB,EAAgB,CAC7C,OAAAA,GAAAzB,GAEHgC,EAAU9B,EAAMuB,CAAM,CAC/B,CASO,SAASU,GAAUpN,EAAiBD,EAAO,GAAIE,EAAO,EAAG,CAC9DD,EAAQ4L,EAAO5L,CAAK,EAEpB,MAAMqN,EAAoB,CAAA,EAE1B,QAASlN,EAAI,EAAGA,EAAIJ,EAAM,EAAEI,EAC1BkN,EAAU,KAAKN,EAAQ/M,EAAOG,EAAIF,CAAI,CAAC,EAGlC,OAAAoN,CACT,CASO,SAASC,GAAWtN,EAAiBD,EAAO,GAAIE,EAAO,EAAG,CAC/DD,EAAQ4L,EAAO5L,CAAK,EAEpB,MAAMqN,EAAoB,CAAA,EAE1B,QAASlN,EAAI,EAAGA,EAAIJ,EAAM,EAAEI,EAC1BkN,EAAU,KAAKJ,EAAUjN,EAAOG,EAAIF,CAAI,CAAC,EAGpC,OAAAoN,CACT,CAOO,SAASE,GAAcpC,EAAY,CAClC,MAAAG,EAAMH,EAAK,OAAA,GAAY,EAEtB,OAAA4B,EAAQ5B,EAAM,CAACG,CAAG,CAC3B,CAOO,SAASkC,GAAcrC,EAAgB,CAC5C,OAAAA,EAAOS,EAAOT,CAAI,EAClBA,EAAK,gBAAgB,CAAC,EAEfA,CACT,CAOO,SAASsC,GAActC,EAAgB,CAC5C,OAAAA,EAAOS,EAAOT,CAAI,EACbA,EAAA,WAAW,EAAG,CAAC,EAEbA,CACT,CAOO,SAASuC,GAAYvC,EAAgB,CAC1C,OAAAA,EAAOS,EAAOT,CAAI,EACbA,EAAA,WAAW,EAAG,EAAG,CAAC,EAEhBA,CACT,CAOO,SAASwC,GAAWxC,EAAgB,CACzC,OAAAA,EAAOS,EAAOT,CAAI,EAClBA,EAAK,SAAS,EAAG,EAAG,EAAG,CAAC,EAEjBA,CACT,CAOO,SAASyC,GAASzC,EAAgB,CACvC,OAAAA,EAAOS,EAAOT,CAAI,EAClBA,EAAK,SAAS,GAAI,GAAI,GAAI,GAAG,EAEtBA,CACT,CAQgB,SAAA0C,GAAY1C,EAAgB2C,EAAU,EAAG,CACvDA,EAAUA,EAAU,EAEhBA,EAAU,IACDA,GAAA,GAGb3C,EAAOS,EAAOT,CAAI,EAEZ,MAAAG,EAAMH,EAAK,SACX4C,GAAczC,EAAMwC,EAAU,EAAI,GAAKxC,EAAMwC,EAEnD,OAAA3C,EAAK,QAAQA,EAAK,QAAQ,EAAI4C,CAAU,EACxC5C,EAAK,SAAS,EAAG,EAAG,EAAG,CAAC,EAEjBA,CACT,CAOO,SAAS6C,GAAW5C,EAAc,CACvC,OAAQA,EAAO,IAAM,GAAKA,EAAO,MAAQ,GAAMA,EAAO,MAAQ,CAChE,CAQgB,SAAA6C,GAAa9C,EAAgB2C,EAAU,EAAG,CACxD3C,EAAOS,EAAOT,CAAI,EAEZ,MAAAC,EAAOD,EAAK,cACZE,EAAQF,EAAK,SAAA,EAAa,EAC1BG,EAAMH,EAAK,UAEb,IAAA+C,EAEJ,OAAI7C,EAAQ,EACNA,IAAU,EACZ6C,EAAU,GAAM7C,EAAQ,EAEpB2C,GAAW5C,CAAI,EACP8C,EAAA,GAEAA,EAAA,GAIdA,EAAU,GAAM7C,EAAQ,EAG1ByC,EAAUA,EAAUI,EAEhBJ,EAAU,IACDA,GAAAI,GAGT5C,EAAMwC,GACH3C,EAAA,SAASE,EAAQ,CAAC,EAGzBF,EAAK,QAAQ2C,CAAO,EACpB3C,EAAK,SAAS,EAAG,EAAG,EAAG,CAAC,EAEjBA,CACT,CAOO,SAASgD,GAAehD,EAAgB,CAC7CA,EAAOS,EAAOT,CAAI,EAEZ,MAAAO,EAAUY,EAAWnB,CAAI,EAE/B,OAAAA,EAAK,QAAQ,CAAC,EACdA,EAAK,SAAS,EAAG,EAAG,EAAG,CAAC,EACnBA,EAAA,UAAUO,EAAU,GAAK,CAAC,EAExBP,CACT,CAQgB,SAAAiD,GAAYjD,EAAgB2C,EAAU,EAAG,CACvDA,EAAUA,EAAU,GAEhBA,EAAU,IACDA,GAAA,IAGb3C,EAAOS,EAAOT,CAAI,EAEZ,MAAAE,EAAQF,EAAK,WACb4C,GAAc1C,EAAQyC,EAAU,GAAK,GAAKzC,EAAQyC,EAExD,OAAA3C,EAAK,SAASA,EAAK,SAAS,EAAI4C,CAAU,EAC1C5C,EAAK,QAAQ,CAAC,EACdA,EAAK,SAAS,EAAG,EAAG,EAAG,CAAC,EAEjBA,CACT,CAQgB,SAAAkD,EAAuBtH,EAAgBC,EAAiB,CACtE,OAAAD,EAAO6E,EAAO7E,CAAI,EAClBC,EAAQ4E,EAAO5E,CAAK,EAEbA,EAAM,QAAA,EAAYD,EAAK,QAAQ,CACxC,CAQgB,SAAAuH,GAAkBvH,EAAgBC,EAAiB,CACjE,MAAMuH,EAAOF,EAAuBtH,EAAMC,CAAK,EAAIgD,EAE5C,OAAAuE,EAAO,EAAI,KAAK,MAAMA,CAAI,EAAI,KAAK,KAAKA,CAAI,CACrD,CAQgB,SAAAC,GAAkBzH,EAAgBC,EAAiB,CACjE,MAAMuH,EAAOF,EAAuBtH,EAAMC,CAAK,EAAIkD,GAE5C,OAAAqE,EAAO,EAAI,KAAK,MAAMA,CAAI,EAAI,KAAK,KAAKA,CAAI,CACrD,CAQgB,SAAAE,GAAgB1H,EAAgBC,EAAiB,CAC/D,MAAMuH,EAAOF,EAAuBtH,EAAMC,CAAK,EAAIqD,GAE5C,OAAAkE,EAAO,EAAI,KAAK,MAAMA,CAAI,EAAI,KAAK,KAAKA,CAAI,CACrD,CAQgB,SAAAG,GAAe3H,EAAgBC,EAAiB,CAC9D,OAAAD,EAAO4G,GAAW5G,CAAI,EACtBC,EAAQ2G,GAAW3G,CAAK,GAEhBA,EAAM,QAAA,EAAYD,EAAK,QAAa,GAAA0D,EAC9C,CASO,SAASkE,GAAgB5H,EAAgBC,EAAiB4H,EAAc,EAAG,CACzE,OAAA7H,EAAA8G,GAAY9G,EAAM6H,CAAW,EAC5B5H,EAAA6G,GAAY7G,EAAO4H,CAAW,GAE9B5H,EAAM,QAAA,EAAYD,EAAK,QAAa,GAAA+D,EAC9C,CAQgB,SAAA+D,GAAiB9H,EAAgBC,EAAiB,CAChED,EAAO6E,EAAO7E,CAAI,EAClBC,EAAQ4E,EAAO5E,CAAK,EAEpB,MAAM8H,EAAW9H,EAAM,YAAY,EAAID,EAAK,YAAY,EAClDgI,EAAY/H,EAAM,SAAS,EAAID,EAAK,SAAS,EAEnD,OAAO+H,EAAW,GAAKC,CACzB,CAQgB,SAAAC,GAAmBjI,EAAgBC,EAAiB,CAClED,EAAO6E,EAAO7E,CAAI,EAClBC,EAAQ4E,EAAO5E,CAAK,EAEpB,MAAM8H,EAAW9H,EAAM,YAAY,EAAID,EAAK,YAAY,EAClDkI,EAAc3C,EAAWtF,CAAK,EAAIsF,EAAWvF,CAAI,EAEvD,OAAO+H,EAAW,EAAIG,CACxB,CAQgB,SAAAC,GAAgBnI,EAAgBC,EAAiB,CAC/D,OAAAD,EAAO6E,EAAO7E,CAAI,EAClBC,EAAQ4E,EAAO5E,CAAK,EAEbA,EAAM,YAAA,EAAgBD,EAAK,YAAY,CAChD,CAQgB,SAAAoI,GAAWpI,EAAgBC,EAAiB,CAC1DD,EAAO6E,EAAO7E,CAAI,EAClBC,EAAQ4E,EAAO5E,CAAK,EAEpB,MAAMuH,EAAOxH,EAAK,QAAQ,EAAIC,EAAM,QAAQ,EAE5C,OAAOuH,EAAO,EAAI,GAAKA,EAAO,EAAI,EAAIA,CACxC,CAQgB,SAAAa,EAAYrI,EAAgBC,EAAiB,CACpD,MAAA,CAACmI,GAAWpI,EAAMC,CAAK,CAChC,CAQgB,SAAAqI,GAAsBtI,EAAgBC,EAAiB,CACrE,OAAAD,EAAOyG,GAAczG,CAAI,EACzBC,EAAQwG,GAAcxG,CAAK,EAEpBsH,GAAkBvH,EAAMC,CAAK,CACtC,CAQgB,SAAAsI,GAAsBvI,EAAgBC,EAAiB,CACrE,OAAAD,EAAO0G,GAAc1G,CAAI,EACzBC,EAAQyG,GAAczG,CAAK,EAEpBwH,GAAkBzH,EAAMC,CAAK,CACtC,CAQgB,SAAAuI,GAAoBxI,EAAgBC,EAAiB,CACnE,OAAAD,EAAO2G,GAAY3G,CAAI,EACvBC,EAAQ0G,GAAY1G,CAAK,EAElByH,GAAgB1H,EAAMC,CAAK,CACpC,CAQgB,SAAAwI,GAAmBzI,EAAgBC,EAAiB,CAC5D,MAAAyI,EAAOL,EAAYrI,EAAMC,CAAK,EAC9B+G,EAAa,KAAK,IAAIW,GAAe3H,EAAMC,CAAK,CAAC,EAEvDD,EAAO6E,EAAO7E,CAAI,EAClBA,EAAK,QAAQA,EAAK,QAAQ,EAAI0I,EAAO1B,CAAU,EAE/C,MAAM2B,EAAgBN,EAAYrI,EAAMC,CAAK,IAAM,CAACyI,EAE7C,OAAAA,GAAQ1B,GAAc2B,EAAgB,EAAI,GACnD,CAQgB,SAAAC,GAAoB5I,EAAgBC,EAAiB,CACnE,MAAMuH,EAAOiB,GAAmBzI,EAAMC,CAAK,EAAI0D,EAExC,OAAA6D,EAAO,EAAI,KAAK,MAAMA,CAAI,EAAI,KAAK,KAAKA,CAAI,CACrD,CAQgB,SAAAqB,GAAqB7I,EAAgBC,EAAiB,CAC9D,MAAAyI,EAAOL,EAAYrI,EAAMC,CAAK,EAC9B+G,EAAa,KAAK,IAAIc,GAAiB9H,EAAMC,CAAK,CAAC,EAEzDD,EAAO6E,EAAO7E,CAAI,EAClBA,EAAK,SAASA,EAAK,SAAS,EAAI0I,EAAO1B,CAAU,EAEjD,MAAM2B,EAAgBN,EAAYrI,EAAMC,CAAK,IAAM,CAACyI,EAE7C,OAAAA,GAAQ1B,GAAc2B,EAAgB,EAAI,GACnD,CAQgB,SAAAG,GAAuB9I,EAAgBC,EAAiB,CACtE,MAAMuH,EAAOqB,GAAqB7I,EAAMC,CAAK,EAAI,EAE1C,OAAAuH,EAAO,EAAI,KAAK,MAAMA,CAAI,EAAI,KAAK,KAAKA,CAAI,CACrD,CAQgB,SAAAuB,GAAoB/I,EAAgBC,EAAiB,CAC7D,MAAAyI,EAAOL,EAAYrI,EAAMC,CAAK,EAC9B+G,EAAa,KAAK,IAAImB,GAAgBnI,EAAMC,CAAK,CAAC,EAExDD,EAAO6E,EAAO7E,CAAI,EAClBA,EAAK,YAAYA,EAAK,YAAY,EAAI0I,EAAO1B,CAAU,EAEvD,MAAM2B,EAAgBN,EAAYrI,EAAMC,CAAK,IAAM,CAACyI,EAE7C,OAAAA,GAAQ1B,GAAc2B,EAAgB,EAAI,GACnD,CChxBO,SAASK,GAAaC,EAAW,CACtC,GAAIA,IAAQ,MAAQ,OAAOA,GAAQ,SAC1B,OAAAA,EAGT,MAAMC,EAAS,MAAM,QAAQD,CAAG,EAAI,GAAK,GAGnCE,EAID,CACH,CACE,OAAQD,EACR,IAAK,OACL,KAAMD,CACR,CAAA,EAGF,KAAOE,EAAS,QAAQ,CAEhB,MAAAC,EAAOD,EAAS,MAChB,CAAE,OAAAE,EAAQ,IAAA9R,EAAK,KAAA+R,CAAA,EAASF,EACxB/R,EAAO,MAAM,QAAQiS,CAAI,EAAI,QAAU,SAE7C,GAAI,CAACD,EAAQ,SAGb,IAAIE,EAAMF,EAEN,OAAO9R,EAAQ,MACjBgS,EAAMF,EAAO9R,CAAG,EAAIF,IAAS,QAAU,GAAK,IAG9C,OAAO,KAAKiS,CAAI,EAAE,QAAalQ,GAAA,CACvB,MAAAoQ,EAAQF,EAAKlQ,CAAC,EAGhBoQ,IAAUF,EACZC,EAAInQ,CAAC,EAAImQ,EACAC,IAAU,MAAQ,OAAOA,GAAU,SAC5CL,EAAS,KAAK,CACZ,OAAQI,EACR,IAAKnQ,EACL,KAAMoQ,CAAA,CACP,EAEDD,EAAInQ,CAAC,EAAIoQ,CACX,CACD,CACH,CAEO,OAAAN,CACT,CC3DA,MAAMO,GAAiB,oDACjBC,GAAa,IAAM,GAET,SAAAC,GAAcC,EAAaC,EAAUJ,GAAgB,CACnE,MAAMK,EAAiB,IAAM,CACrB,MAAA,IAAI,MAAMD,CAAO,CAAA,EAGzB,OAAO,KAAKD,CAAM,EAAE,QAAgBG,GAAA,CAC9B,OAAOH,EAAOG,CAAI,GAAM,WAC1BH,EAAOG,CAAI,EAAID,EAAe,KAAKF,CAAM,EAEzCA,EAAOG,CAAI,EAAI,IACjB,CACD,EAED,OAAO,oBAAoBH,EAAO,YAAY,SAAS,EAAE,QAAgBG,GAAA,CACnEA,IAAS,eAAiB,OAAOH,EAAOG,CAAI,GAAM,aACpDH,EAAOG,CAAI,EAAID,EAAe,KAAKF,CAAM,EAC3C,CACD,EAEDA,EAAO,YAAcF,EACvB,CCRO,MAAMM,GAAYlT,IAAa,iBAAkB,QAAUmT,KAAsB,GAC3EC,GAAaF,GAAY,cAAgB,QAEtD,SAASC,IAAoB,CAC3B,OAAO,OAAO,UAAc,MACxB,UAAU,gBAAoB,UAAkB,mBAA+B,CAErF,CAEA,MAAME,MAA6C,IAE5C,SAASC,GAAY/S,EAAc,CACnC8S,EAAO,IAAI9S,CAAI,GAClB8S,EAAO,IAAI9S,EAAU,IAAA,GAAK,CAE9B,CAEO,SAASgT,GAAahT,EAAc,CACzC,OAAO8S,EAAO,IAAI9S,CAAI,GAAK8S,EAAO,IAAI9S,EAAM,IAAI,GAAK,EAAE,IAAIA,CAAI,CACjE,CAEgB,SAAAiT,GAAQC,EAAkBC,EAA0B,CAK9D,GAJA,OAAOA,GAAU,WACnBA,EAAQ,CAACA,CAAe,GAGtB,MAAM,QAAQA,CAAK,EACZ,QAAApR,EAAI,EAAGoH,EAAMgK,EAAM,OAAQpR,EAAIoH,EAAK,EAAEpH,EAAG,CAC1C,MAAA/B,EAAOmT,EAAMpR,CAAC,EAEf+Q,EAAO,IAAI9S,CAAI,GAClB8S,EAAO,IAAI9S,EAAU,IAAA,GAAK,EAG5B8S,EAAO,IAAI9S,CAAI,EAAG,IAAIkT,CAAE,CAC1B,CAEJ,CAEgB,SAAAE,GAAWF,EAAkBC,EAA0B,OAKjE,GAJA,OAAOA,GAAU,WACnBA,EAAQ,CAACA,CAAe,GAGtB,MAAM,QAAQA,CAAK,EACZ,QAAApR,EAAI,EAAGoH,EAAMgK,EAAM,OAAQpR,EAAIoH,EAAK,EAAEpH,EAAG,CAC1C,MAAA/B,EAAOmT,EAAMpR,CAAC,EAEhB+Q,EAAO,IAAI9S,CAAI,KACjBL,EAAAmT,EAAO,IAAI9S,CAAI,IAAf,MAAAL,EAAkB,OAAOuT,GAE7B,CAEJ,CAEO,SAASG,GAAcH,EAAkBI,EAAuBC,EAAQ,OAAO,MAAO,CACrF,KAAA,CAAE,KAAAvT,EAAM,QAAAwT,EAAU,GAAO,WAAAC,EAAa,GAAO,GAAGxB,CAAS,EAAAqB,EAE/D,GAAI,CAACnT,EAAUH,CAAI,GAAKA,IAAS,GAAW,MAAA,GAExC,IAAA0T,EAEA,OAAAvT,EAAUoT,CAAK,EACjBG,EAAQ,IAAIH,EAAMvT,EAAM,CAAE,QAAAwT,EAAS,WAAAC,EAAY,GAEvCC,EAAA,SAAS,YAAY,YAAY,EACnCA,EAAA,UAAU1T,EAAMwT,EAASC,CAAU,GAGpC,OAAA,OAAOC,EAAOzB,CAAI,EAElBiB,EAAG,cAAcQ,CAAK,CAC/B,CCrFA,MAAMC,GAAmB,CACvB,SACA,wBACA,QACA,SACA,WACA,aACA,mBACF,EACG,IAASzP,GAAA,GAAGA,CAAC,iCAAiC,EAC9C,KAAK,IAAI,EAEZ,SAAS5C,GAAU4R,EAAwC,CACzD,MAAO,CAAC,CAACA,GAAMA,EAAG,WAAa,KAAK,YACtC,CAEA,SAASU,GAAcV,EAAqB,CAC1C,OAAO5R,GAAU4R,CAAE,EAAIA,EAAK,SAAS,IACvC,CAEgB,SAAAW,GAASC,EAAkBC,EAAuB,CAChE,OAAKD,EAEE,MAAM,KAAKF,GAAcG,CAAI,EAAE,iBAAiBD,CAAQ,CAAC,EAF1C,EAGxB,CAEO,SAASE,GAAUd,EAAqB,CAC7C,MAAMe,EAAW,SAAS,cAE1B,MAAI,CAAC3S,GAAU4R,CAAE,GAAK,CAACe,EAAiB,GAEjCf,IAAOe,GAAYC,GAASD,EAAUf,CAAE,CACjD,CAEgB,SAAAgB,GAAShB,EAAqBlB,EAA6B,CACrE,GAAA,CAACkB,GAAM,CAAClB,EAAe,MAAA,GAE3B,MAAMmC,EAAOnC,EAAwB,kBAE9B,OAAAA,EAAO,SAASkB,CAAE,GAAM,CAAC,CAACiB,IAAQA,IAAQjB,GAAMiB,EAAI,SAASjB,CAAE,EACxE,CAEO,SAASkB,GAASlB,EAAqB,CAKxC,GAJA,CAAC5R,GAAU4R,CAAE,GAAK,CAACA,EAAG,YAAc,CAACgB,GAAShB,EAAI,SAAS,IAAI,GAI/DA,EAAG,MAAM,UAAY,OAChB,MAAA,GAGH,MAAAmB,EAAOnB,EAAG,wBAEhB,MAAO,EAAEmB,GAAQA,EAAK,MAAQ,GAAKA,EAAK,OAAS,EACnD,CAEO,SAASC,GAAUpB,EAAqB,CACtC,MAAA,CAACkB,GAASlB,CAAE,CACrB,CAEO,SAASqB,GAAWrB,EAAqB,CAC9C,MACE,CAAC5R,GAAU4R,CAAE,GACZA,EAAG,aAAa,UAAU,GAAKA,EAAG,aAAa,UAAU,IAAM,SAC/DA,EAAwB,QAE7B,CAEgB,SAAAsB,GAAcT,EAAoBU,EAAkB,GAAO,CACnE,MAAAC,EAAQD,EAAkB,IAAM,GAAQF,GAEvC,OAAAV,GAASF,GAAkBI,CAAI,EAAE,OACtCb,GAAMoB,GAAUpB,CAAE,GAAKA,EAAG,SAAW,IAAM,CAACwB,EAAMxB,CAAE,CAAA,CAExD,CAEO,SAASyB,GAAYzB,EAAwB,CAClD,GAAI,CAACA,EAAW,MAAA,GAEV,MAAA0B,EAAgB,iBAAiB1B,CAAE,EAGzC,OAFgB,WAAW0B,EAAc,WAAW,EAAI,WAAWA,EAAc,YAAY,GAE3E,CACpB,CAEO,SAASC,GAAY3B,EAAwB,CAClD,GAAI,CAACA,EAAW,MAAA,GAEV,MAAA0B,EAAgB,iBAAiB1B,CAAE,EAGzC,OAFgB,WAAW0B,EAAc,UAAU,EAAI,WAAWA,EAAc,aAAa,GAE3E,CACpB,CAEO,SAASE,GAAW5B,EAAwB,CACjD,GAAI,CAACA,EAAW,MAAA,GAEV,MAAA0B,EAAgB,iBAAiB1B,CAAE,EAGzC,OAFe,WAAW0B,EAAc,UAAU,EAAI,WAAWA,EAAc,WAAW,GAEzE,CACnB,CAEO,SAASG,GAAW7B,EAAwB,CACjD,GAAI,CAACA,EAAW,MAAA,GAEV,MAAA0B,EAAgB,iBAAiB1B,CAAE,EAGzC,OAFe,WAAW0B,EAAc,SAAS,EAAI,WAAWA,EAAc,YAAY,GAEzE,CACnB,CAEO,SAASI,GAAW9B,EAAwB,CACjD,GAAI,CAACA,EAAW,MAAA,GAEV,MAAA0B,EAAgB,iBAAiB1B,CAAE,EAIzC,OAFE,WAAW0B,EAAc,eAAe,EAAI,WAAWA,EAAc,gBAAgB,GAEvE,CAClB,CAEO,SAASK,GAAW/B,EAAwB,CACjD,GAAI,CAACA,EAAW,MAAA,GAEV,MAAA0B,EAAgB,iBAAiB1B,CAAE,EAIzC,OAFE,WAAW0B,EAAc,cAAc,EAAI,WAAWA,EAAc,iBAAiB,GAEvE,CAClB,CAEO,SAASM,GAAchC,EAAwB,CACpD,GAAI,CAACA,EAAW,MAAA,GAEV,MAAAxR,EAAQ,SAAS,cAEjBA,EAAA,SAASwR,EAAI,CAAC,EACpBxR,EAAM,OAAOwR,EAAIA,EAAG,WAAW,MAAM,EAE/B,MAAAiC,EAAazT,EAAM,sBAAA,EAAwB,MAC3C0T,EAAWT,GAAYzB,CAAE,EAE/B,OAAOiC,EAAaC,CACtB,CClJA,MAAMC,GAAW,UAEV,SAASC,GAAWjT,EAAiB,CAC1C,MAAMwF,EAAM,GAAKxF,EACXuB,EAAQyR,GAAS,KAAKxN,CAAG,EAE/B,GAAI,CAACjE,EACI,OAAAiE,EAGT,IAAI0N,EAAO,GACPC,EACAnN,EACAoN,EAAY,EAEhB,IAAKpN,EAAQzE,EAAM,MAAOyE,EAAQR,EAAI,OAAQQ,IAAS,CAC7C,OAAAR,EAAI,WAAWQ,CAAK,EAAG,CAC7B,IAAK,IACOmN,EAAA,SACV,MACF,IAAK,IACOA,EAAA,QACV,MACF,IAAK,IACOA,EAAA,QACV,MACF,IAAK,IACOA,EAAA,OACV,MACF,IAAK,IACOA,EAAA,OACV,MACF,QACE,QACJ,CAEIC,IAAcpN,IACRkN,GAAA1N,EAAI,UAAU4N,EAAWpN,CAAK,GAGxCoN,EAAYpN,EAAQ,EACZkN,GAAAC,CACV,CAEA,OAAOC,IAAcpN,EAAQkN,EAAO1N,EAAI,UAAU4N,EAAWpN,CAAK,EAAIkN,CACxE,CChCO,SAASG,IAAqB,CAC7B,MAAAC,MAAkC,IAEjC,MAAA,CACL,GAAG3V,EAAM4V,EAAS,CACV,MAAAC,EAAWF,EAAW,IAAI3V,CAAI,GACtB6V,GAAA,YAAAA,EAAU,IAAID,KAG1BD,EAAW,IAAI3V,EAAM,IAAI,IAAI,CAAC4V,CAAO,CAAC,CAAC,CAE3C,EACA,IAAI5V,EAAM4V,EAAS,CACX,MAAAC,EAAWF,EAAW,IAAI3V,CAAI,EAEhC6V,GACFA,EAAS,OAAOD,CAAO,CAE3B,EACA,MAAM5V,EAAM,CACJ,MAAA6V,EAAWF,EAAW,IAAI3V,CAAI,EAEhC6V,GACFA,EAAS,MAAM,CAEnB,EACA,UAAW,CACTF,EAAW,MAAM,CACnB,EACA,KAAK3V,KAASsT,EAAS,CACf,MAAAuC,EAAWF,EAAW,IAAI3V,CAAI,EAEhC6V,GACFA,EAAS,QAAmBD,GAAA,CAC1BA,EAAQ,GAAGtC,CAAO,CAAA,CACnB,CAEL,CAAA,CAEJ,CCpDA,SAASwC,GAAQtD,EAAiBuD,EAAoBC,EAAiC,CACjFxD,GAAW,CAACuD,EAAM,IAAIvD,CAAO,IAC/BwD,EAAMxD,CAAO,EACbuD,EAAM,IAAIvD,CAAO,EAErB,CAEA,MAAMyD,OAAgB,IAEf,SAASC,GAAS1D,EAAiBwD,EAAQ,QAAQ,KAAM,CACtDF,GAAAtD,EAASyD,GAAWD,CAAK,CACnC,CAEA,MAAMG,OAAgB,IAEf,SAASC,GAAS5D,EAAiBwD,EAAQ,QAAQ,KAAM,CACtDF,GAAAtD,EAAS2D,GAAWH,CAAK,CACnC,CAEA,MAAMK,OAAiB,IAEhB,SAASC,GAAU9D,EAAiBwD,EAAQ,QAAQ,KAAM,CACvDF,GAAAtD,EAAS6D,GAAYL,CAAK,CACpC,CCjBgB,SAAAO,GAA4CC,EAAWC,EAAQ,GAAI,CAC7E,GAAA,OAAOD,GAAW,WACb,OAAAA,EAGL,IAAA5U,EAAQ,KAAK,MACb8U,EAEJ,OAAO,YAAaC,EAAqB,CACjC,MAAAC,EAAU,KAAK,MACfC,EAAYjV,EAAQ6U,EAAQG,EAElC,aAAaF,CAAK,EAEdG,GAAa,GACfL,EAAO,GAAGG,CAAI,EACd/U,EAAQ,KAAK,OAEb8U,EAAQ,WAAW,IAAM,CACvBF,EAAO,GAAGG,CAAI,GACbF,CAAK,CACV,CAEJ,CAQgB,SAAAK,GAA4CN,EAAWC,EAAQ,IAAK,CAC9E,GAAA,OAAOD,GAAW,WACb,OAAAA,EAGL,IAAAE,EAEJ,OAAO,YAAaC,EAAqB,CACvC,aAAaD,CAAK,EAElBA,EAAQ,WAAW,IAAM,CACvBF,EAAO,GAAGG,CAAI,GACbF,CAAK,CAAA,CAEZ,CAOO,SAASM,GAAiDP,EAAW,CACtE,GAAA,OAAOA,GAAW,WACb,OAAAA,EAGT,IAAIQ,EAAS,GACTC,EAEJ,OAAO,YAAaN,EAAqB,CAC5BM,EAAAN,EAENK,IACMA,EAAA,GAED,QAAA,UAAU,KAAK,IAAM,CAC3BR,EAAO,GAAGS,CAAQ,EACTD,EAAA,EAAA,CACV,EACH,CAEJ,CAOO,SAASE,GAAiDV,EAAW,CACtE,GAAA,OAAOA,GAAW,WACb,OAAAA,EAGT,IAAIQ,EAAS,GACTC,EAEJ,OAAO,YAAaN,EAAqB,CAC5BM,EAAAN,EAENK,IACMA,EAAA,GAET,sBAAsB,IAAM,CAC1BR,EAAO,GAAGS,CAAQ,EACTD,EAAA,EAAA,CACV,EACH,CAEJ,CAEA,MAAMG,MAAoB,IACpBC,OAAkB,QAExB,SAASC,IAAqB,CAC5BF,EAAc,QAAcG,GAAA,CAC1BA,EAAG,GAAGF,GAAY,IAAIE,CAAE,CAAE,CAAA,CAC3B,EACDH,EAAc,MAAM,CACtB,CAQgB,SAAAI,GAAgDf,KAAcG,EAAa,CACrF,GAAA,OAAOH,GAAW,WACb,OAAAA,EAGGY,GAAA,IAAIZ,EAAQG,CAAI,EAExB,CAAAQ,EAAc,IAAIX,CAAM,IAI5BW,EAAc,IAAIX,CAAM,EAEpBW,EAAc,OAAS,GACjB,QAAA,QAAA,EAAU,KAAKE,EAAkB,EAE7C,CAEA,MAAMG,MAAqB,IACrBC,OAAmB,QAEzB,SAASC,IAAsB,CAC7BF,EAAe,QAAcF,GAAA,CAC3BA,EAAG,GAAGG,GAAa,IAAIH,CAAE,CAAE,CAAA,CAC5B,EACDE,EAAe,MAAM,CACvB,CAQgB,SAAAG,GAAiDnB,KAAcG,EAAa,CACtF,GAAA,OAAOH,GAAW,WACb,OAAAA,EAGIiB,GAAA,IAAIjB,EAAQG,CAAI,EAEzB,CAAAa,EAAe,IAAIhB,CAAM,IAI7BgB,EAAe,IAAIhB,CAAM,EAErBgB,EAAe,OAAS,GAC1B,sBAAsBE,EAAmB,EAE7C,CC3KA,IAAIE,GAAmC,KAEhC,SAASC,IAAiB,CAC/B,GAAI,CAACpY,EACI,MAAA,GAGT,GAAImY,KAAqB,KAAM,CACvB,MAAAE,EAAO,SAAS,cAAc,KAAK,EAEzCA,EAAK,MAAM,QAAU,OACrBA,EAAK,MAAM,cAAgB,SAC3BA,EAAK,MAAM,OAAS,MAEpBA,EAAK,YAAY,SAAS,cAAc,KAAK,CAAC,EAC9CA,EAAK,YAAY,SAAS,cAAc,KAAK,CAAC,EACrC,SAAA,KAAK,YAAYA,CAAI,EAE9BF,GAAmBE,EAAK,eAAiB,EAEhC,SAAA,KAAK,YAAYA,CAAI,CAChC,CAEO,OAAAF,EACT,CAEA,IAAIG,GAAsC,KAEnC,SAASC,IAAoB,CAClC,OAAKvY,GAIDsY,KAAwB,OACJA,GAAA,YAAa,SAAS,cAAc,KAAK,GAG1DA,IAPE,EAQX,CCrCO,SAASE,GAAelY,EAAgB,CAC7C,OAAO,MAAM,QAAQA,CAAK,EAAIA,EAAQ,CAACA,CAAK,CAC9C,CAEO,SAASmY,GAAcnY,EAAsB,CAClD,OAAOiB,GAAWjB,CAAK,EAAIA,EAAA,EAAUA,CACvC,CAEO,SAASoY,GAAcC,EAAc,CACnC,OAAAA,EAAK,QAAQ,UAAW,GAAG,CACpC,CA4BO,SAASC,GACdC,EACAC,EACAC,EAAgClU,GAAAA,EAChCpD,EAAQ,GACR,CACA,MAAMuX,EAAOvX,EAAY,IAAA,IAAqB,CAAA,EAE1C,GAAA,CAACf,EAAUoY,CAAI,EAAU,OAAAE,EAE7B,MAAMC,EAAMxX,EACR,CAAChB,EAAUH,IAAa0Y,EAAI,IAAIvY,EAAKH,CAAK,EAC1C,CAACG,EAAUH,IAAc0Y,EAAIvY,CAAG,EAAIH,EAClC4Y,EAAe3X,GAAWuX,CAAI,EAAIA,EAAQK,GAAYA,EAAKL,CAAI,EAErE,OAAAD,EAAK,QAAgBM,GAAA,CACb,MAAA1Y,EAAMyY,EAAaC,CAAI,EAEzBzY,EAAUD,CAAG,GACXwY,EAAAxY,EAAKsY,EAASI,CAAI,CAAC,CACzB,CACD,EAEMH,CACT,CASO,SAASI,GACd/W,EACA8W,EACAE,EAAO,GACG,CACV,IAAIzQ,EAAQ,GAQZ,OANIyQ,GAAQ,OAAOF,GAAS,WAC1BvQ,EAAQvG,EAAM,UAAqB8U,GAAAA,IAAYgC,CAAI,EAE3CvQ,EAAAvG,EAAM,UAAU8W,CAA4B,EAGlD,CAACvQ,EACIvG,EAAM,OAAOuG,EAAO,CAAC,EAAE,CAAC,EAG1B,IACT,CAQO,SAAS0Q,GACdT,EACAU,EAA0E,GACrD,EACjB,OAAOA,GAAU,UAAY,OAAOA,GAAU,cAChDA,EAAQ,CAACA,CAAK,GAGhB,MAAMC,EAAYD,EAAM,OAClBE,EAA+B,CAAA,EAErC,UAAWN,KAAQN,EAAM,CACnB,IAAArG,EAEJ,QAASlQ,EAAI,EAAGA,EAAIkX,EAAW,EAAElX,EAAG,CAC5B,MAAAoX,EAASpX,IAAMkX,EAAY,EAC3BV,EAAOS,EAAMjX,CAAC,EACdhC,EAAQ,OAAOwY,GAAS,WAAaA,EAAKK,CAAI,EAAIA,EAAKL,CAAe,EAEvEtG,GAOEA,EAAKlS,CAAK,IACbkS,EAAKlS,CAAK,EAAIoZ,EAAS,CAAA,EAAK,CAAA,GAG9BlH,EAAOA,EAAKlS,CAAK,IAVZmZ,EAAQnZ,CAAK,IAChBmZ,EAAQnZ,CAAK,EAAIoZ,EAAS,CAAA,EAAK,CAAA,GAGjClH,EAAOiH,EAAQnZ,CAAK,EAQxB,CAEAkS,EAAK,KAAK2G,CAAI,CAChB,CAEO,OAAAM,CACT,CAeO,SAASE,GAAuBd,EAAWe,EAAgC,GAAI,CAC9E,KAAA,CACJ,SAAAC,EAAW,KACX,WAAAC,EAAa,WACb,YAAAC,EAAc,SACd,OAAAC,EAAS,IACP,EAAAJ,EAEEK,EAAYvZ,EAAUsZ,CAAM,GAAKA,IAAW,GAC5CtR,EAAY,CAAA,EACZwR,MAAa,IAEV,QAAA5X,EAAI,EAAGoH,EAAMmP,EAAK,OAAQvW,EAAIoH,EAAK,EAAEpH,EAAG,CACzC,MAAA6W,EAAON,EAAKvW,CAAC,EACb6X,EAAKhB,EAAKU,CAAQ,EAExB,GAAI,EAAAI,EAAYE,IAAOH,EAAS,CAACtZ,EAAUyZ,CAAE,GAWzC,GAPAD,EAAO,IAAIC,CAAE,EACdhB,EAAaW,CAAU,EAAII,EAAO,IAAIC,CAAE,GAExChB,EAAaW,CAAU,EAAI,GAC5BI,EAAO,IAAIC,EAAKhB,EAAaW,CAAU,CAAC,GAGtCX,EAAKY,CAAW,IAAM,CAACE,GAAad,EAAKY,CAAW,IAAMC,GAAS,CAC/D,MAAAI,EAAWjB,EAAKY,CAAW,EAE5BG,EAAO,IAAIE,CAAQ,GACfF,EAAA,IAAIE,EAAU,CAAA,CAAE,EAGzBF,EAAO,IAAIE,CAAQ,EAAG,KAAKjB,CAAI,CAAA,MAE/BzQ,EAAK,KAAKyQ,CAAI,CAElB,CAEO,OAAAzQ,CACT,CAQO,SAAS2R,GACd3R,EACAkR,EAKI,GACJ,CACM,KAAA,CACJ,SAAAC,EAAW,KACX,WAAAC,EAAa,WACb,YAAAC,EAAc,SACd,OAAAC,EAAS,KACT,WAAAM,EAAa,GACb,SAAAC,EAAW,GACX,OAAAC,EAASzY,GACT,SAAA0Y,EAAW,EACT,EAAAb,EAEEK,EAAYvZ,EAAUsZ,CAAM,GAAKA,IAAW,GAC5CnB,EAAY,CAAA,EACZ6B,EAAO,CAAC,GAAGhS,CAAI,EAErB,IAAIiS,EAAU,EAEd,KAAOD,EAAK,QAAQ,CACZ,MAAAvB,EAAOuB,EAAK,QAEZE,GAAgBzB,EAAKW,CAAU,EAC/Be,GAAgB,MAAM,QAAQD,EAAa,GAAKA,GAAc,OAASA,GAAgB,GAEzFL,GAAY,CAACpB,EAAKU,CAAQ,IAC5BV,EAAKU,CAAQ,EAAIc,KAGb,MAAAR,GAAKhB,EAAKU,CAAQ,EAGtBU,GACAR,IACCE,EAAYd,EAAKY,CAAW,IAAMC,EAAS,CAACb,EAAKY,CAAW,KAE5DZ,EAAaY,CAAW,EAAIC,GAGzB,MAAAc,GAAeN,EAAOrB,CAAI,EAI5B,GAFA2B,IAAcjC,EAAK,KAAKM,CAAI,EAE5B2B,IAAgB,CAACL,EAAU,CACpB,QAAAnY,GAAI,EAAGoH,GAAMmR,GAAS,OAAQvY,GAAIoH,GAAK,EAAEpH,GAAG,CAC7C,MAAAyY,GAAQF,GAASvY,EAAC,EAEpBiY,GAAYR,IACdgB,GAAMhB,CAAW,EAAII,IAGtB,CAAAG,GAAcI,EAAK,KAAKK,EAAK,CAChC,CAEIT,GACGI,EAAA,QAAQ,GAAGG,EAAQ,CAE5B,CACF,CAEO,OAAAhC,CACT,CASO,SAASmC,GACdtS,EACAuS,EACArB,EAGI,CAAA,EACJ,CACA,KAAM,CAAE,WAAAE,EAAa,WAAuB,WAAAQ,EAAa,IAAUV,EAC7Dc,EAAO,CAAC,GAAGhS,EAAK,IAAayQ,IAAA,CAAE,KAAAA,EAAM,MAAO,CAAE,EAAE,CAAC,EAEvD,KAAOuB,EAAK,QAAQ,CAClB,KAAM,CAAE,KAAAvB,EAAM,MAAA+B,CAAM,EAAIR,EAAK,MAAM,EAC7BG,EAAW1B,EAAKW,CAAU,EAEhCmB,EAAG9B,EAAM+B,CAAK,EAEVL,GAAA,MAAAA,EAAU,QACZH,EAAKJ,EAAa,UAAY,MAAM,EAAE,GAAGO,EAAS,IAAI1B,IAAS,CAAE,KAAAA,EAAM,MAAO+B,EAAQ,CAAA,EAAI,CAAC,CAE/F,CACF,CAUA,MAAMC,GAAoB,CAACC,EAAWC,IAChC,OAAO,MAAM,OAAOD,CAAI,EAAI,OAAOC,CAAI,CAAC,EACnC,OAAOD,CAAI,EAAE,cAAcC,CAAI,EAGjCD,EAAOC,EASA,SAAAC,GACdzC,EACAU,EACA,CAEE,GAAA,CAACV,EAAK,MACLxX,EAAsBkY,CAAK,GAAK,CAACA,EAAM,KACxC,CAAEA,EAAiC,OAE5B,OAAAV,EAGH,MAAA0C,EAAa,MAAM,KAAK1C,CAAI,EAE7B,MAAM,QAAQU,CAAK,IACtBA,EAAQ,CAACA,CAAK,GAGhB,MAAMiC,EAAiBjC,EACpB,IACCjZ,GACG,OAAOA,GAAU,SACd,CACE,IAAKA,EACL,OAAQ6a,GACR,KAAM,KAAA,EAER7a,CAAA,EAEP,IAAaA,IACR,OAAOA,EAAM,UAAa,aAC5BA,EAAM,SAAYkS,GAAYA,EAAKlS,EAAM,GAAG,GAG1C,OAAOA,EAAM,QAAW,aAC1BA,EAAM,OAAS6a,IAGX7a,EAAA,OAAS,MAAM,QAAQA,EAAM,MAAM,EAAIA,EAAM,OAAS,GAErDA,EACR,EAEQ,OAAAib,EAAA,KAAK,CAACH,EAAMC,IAAS,CAC9B,IAAII,EAAa,EAEjB,UAAW3C,KAAQ0C,EAAgB,CACjC,KAAM,CAAE,OAAAzE,EAAQ,KAAAxW,EAAM,SAAAwY,EAAU,OAAA2C,GAAW5C,EACrC6C,EAAOpb,IAAS,OAChBkL,EAASsL,EAAOgC,EAASqC,EAAM,GAAGM,CAAM,EAAG3C,EAASsC,EAAM,GAAGK,CAAM,CAAC,EAItE,GAFSD,EAAAE,EAAO,CAAClQ,EAASA,EAE1BgQ,EAAY,KAClB,CAEO,OAAAA,CAAA,CACR,EAEMF,CACT,CASO,SAASK,GACdC,EACAC,EACAC,EAAW,GACX,CACYF,EAAAE,EAAW7J,GAAU2J,CAAS,EAAIA,EAE9C,MAAMnB,EAGD,CACH,CACE,OAAQmB,EACR,OAAQC,CACV,CAAA,EAGF,KAAOpB,EAAK,QAAQ,CAClB,KAAM,CAAE,OAAAsB,EAAQ,OAAAC,CAAO,EAAIvB,EAAK,IAAI,EAEpC,OAAO,KAAKuB,CAAM,EAAE,QAAexb,GAAA,CAC7BY,EAAS4a,EAAOxb,CAAG,CAAC,GACjBY,EAAS2a,EAAOvb,CAAG,CAAC,IAChBub,EAAAvb,CAAG,EAAI,IAGhBia,EAAK,KAAK,CACR,OAAQsB,EAAOvb,CAAG,EAClB,OAAQwb,EAAOxb,CAAG,CAAA,CACnB,GACQ,MAAM,QAAQwb,EAAOxb,CAAG,CAAC,GAC7B,MAAM,QAAQub,EAAOvb,CAAG,CAAC,IACrBub,EAAAvb,CAAG,EAAI,IAGhBia,EAAK,KAAK,CACR,OAAQsB,EAAOvb,CAAG,EAClB,OAAQwb,EAAOxb,CAAG,CAAA,CACnB,GAEMub,EAAAvb,CAAG,EAAIwb,EAAOxb,CAAG,CAC1B,CACD,CACH,CAEO,OAAAob,CACT,CAEO,SAASK,GAAcC,EAA0B,CAC9CA,EAAA,MAAM,KAAKA,CAAK,EAExB,IAAIC,EAAY,GAEhB,MAAMC,EAAM,IAAM,OACZD,KAEJlc,EAAAic,EAAM,UAAN,MAAAjc,IACMic,EAAA,QAAU,sBAAsBE,CAAG,EAAA,EAGvC,OAAAA,IAEG,IAAOD,EAAY,EAC5B,CCpcO,SAASE,GAAWzB,EAAmC,CAC5D,MAAMpP,EAAkB,CAAA,EAClBiP,EAAO,MAAM,QAAQG,CAAQ,EAAI,CAAC,GAAGA,CAAQ,EAAI,GAEvD,KAAOH,EAAK,QAAQ,CACZ,MAAA6B,EAAQ7B,EAAK,QAEf6B,IAAU,OAEV,MAAM,QAAQA,CAAK,GAChB7B,EAAA,QAAQ,GAAG6B,CAAK,EAIrB,SAAOA,GAAU,UACjB,OAAOA,GAAU,WAChB,CAACC,EAAA,QAAQD,CAAK,GAAKA,EAAM,OAASE,EACnC,YAEE,OAAOF,GAAU,UAAY,OAAOA,GAAU,SAChD9Q,EAAO,KAAKiR,EAAA,gBAAgB,OAAOH,CAAK,CAAC,CAAC,EACjCA,EAAM,OAASI,EAAA,UAAY,MAAM,QAAQJ,EAAM,QAAQ,EAC3D7B,EAAA,QAAQ6B,EAAM,QAAQ,EAE3B9Q,EAAO,KAAK8Q,CAAK,GAErB,CAEO,OAAA9Q,CACT,CCjBO,SAASmR,GAAYtc,EAAe,CACzC,OACEA,EAAM,OAAO,CAAC,EAAE,YAChB,EAAAA,EACG,MAAM,CAAC,EACP,QAAQ,WAAY,KAAK,EACzB,YAAY,CAEnB,CAaO,SAASuc,GAAgCvc,EAAU,CACxD,OAAAA,EAAQA,EAAM,KAAA,EAAO,QAAQ,OAAQ,GAAG,EAChCA,EAAAA,EAAM,QAAQ,UAAW,CAACwc,EAAGC,IAAUA,EAAOA,EAAK,YAAY,EAAI,EAAG,GAEtEzc,EAAM,OAAO,CAAC,EAAE,kBAAsB,EAAAA,EAAM,MAAM,CAAC,GAAG,QAC5D,SACA,EAAA,CAEJ"}