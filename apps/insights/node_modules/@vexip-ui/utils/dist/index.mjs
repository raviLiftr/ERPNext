import { isVNode as Pt, Comment as Wt, createTextVNode as Gt, Fragment as qt } from "vue";
const H = typeof window < "u";
var bt;
const Je = H && ((bt = window == null ? void 0 : window.navigator) == null ? void 0 : bt.userAgent) && /iP(ad|hone|od)/.test(window.navigator.userAgent), zt = Object.prototype.toString, jt = Object.prototype.hasOwnProperty;
function I(t, e) {
  return zt.call(t) === `[object ${e}]`;
}
function tn(t, e) {
  return jt.call(t, e);
}
function m(t) {
  return t != null;
}
function en(t) {
  return t == null;
}
function nn(t) {
  return typeof t == "number";
}
function rn(t) {
  return Number.isNaN(t);
}
function on(t) {
  return typeof t == "string";
}
function sn(t) {
  return typeof t == "boolean";
}
function cn(t) {
  return t === !0;
}
function an(t) {
  return t === !1;
}
function fn(t) {
  return typeof t == "symbol";
}
function un(t) {
  return typeof t == "bigint";
}
function ln(t) {
  return Array.isArray(t);
}
function U(t) {
  return I(t, "Object");
}
function dn(t) {
  return !!t && typeof t.then == "function" && typeof t.catch == "function";
}
function yt(t) {
  return typeof t == "function";
}
function gn(t) {
  return I(t, "Set");
}
function hn(t) {
  return I(t, "Map");
}
function pn(t) {
  return I(t, "Date");
}
function mn(t) {
  return I(t, "RegExp");
}
function bn(t) {
  return Array.isArray(t) || typeof t == "string" ? t.length === 0 : t instanceof Map || t instanceof Set ? t.size === 0 : U(t) ? Object.keys(t).length === 0 : !1;
}
function yn(t) {
  return H ? !!(t && "nodeType" in t) : !1;
}
function Mn() {
}
function vt() {
  return !0;
}
function Sn() {
  return !1;
}
function wn(t, e = 1, n = 1) {
  const r = [];
  for (let o = 0; o < t; ++o)
    r.push(e + o * n);
  return r;
}
function An(t) {
  return Object.prototype.toString.call(t).slice(8, -1);
}
function En(t = 16) {
  const e = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890", n = e.length;
  let r = "";
  for (; t--; )
    r += e.charAt(Math.floor(Math.random() * n));
  return r;
}
const Kt = "[-\\+]?\\d+%?", Qt = "[-\\+]?\\d*\\.\\d+%?", A = `(?:${Qt})|(?:${Kt})`, Xt = `[\\s|\\(]+(${A})[,|\\s]+(${A})[,|\\s]+(${A})\\s*\\)?`, L = `[\\s|\\(]+(${A})[,|\\s]+(${A})[,|\\s]+(${A})[,|\\s]+(${A})\\s*\\)?`, Mt = new RegExp(`rgb${Xt}`), St = new RegExp(`rgba${L}`), wt = new RegExp(`hsl${L}`), At = new RegExp(`hsla${L}`), Et = new RegExp(`hsv${L}`), Ft = new RegExp(`hsva${L}`), Nt = /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/, Tt = /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/, kt = /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/, Rt = /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/, Y = Object.freeze({
  aliceblue: "f0f8ff",
  antiquewhite: "faebd7",
  aqua: "0ff",
  aquamarine: "7fffd4",
  azure: "f0ffff",
  beige: "f5f5dc",
  bisque: "ffe4c4",
  black: "000",
  blanchedalmond: "ffebcd",
  blue: "00f",
  blueviolet: "8a2be2",
  brown: "a52a2a",
  burlywood: "deb887",
  burntsienna: "ea7e5d",
  cadetblue: "5f9ea0",
  chartreuse: "7fff00",
  chocolate: "d2691e",
  coral: "ff7f50",
  cornflowerblue: "6495ed",
  cornsilk: "fff8dc",
  crimson: "dc143c",
  cyan: "0ff",
  darkblue: "00008b",
  darkcyan: "008b8b",
  darkgoldenrod: "b8860b",
  darkgray: "a9a9a9",
  darkgreen: "006400",
  darkgrey: "a9a9a9",
  darkkhaki: "bdb76b",
  darkmagenta: "8b008b",
  darkolivegreen: "556b2f",
  darkorange: "ff8c00",
  darkorchid: "9932cc",
  darkred: "8b0000",
  darksalmon: "e9967a",
  darkseagreen: "8fbc8f",
  darkslateblue: "483d8b",
  darkslategray: "2f4f4f",
  darkslategrey: "2f4f4f",
  darkturquoise: "00ced1",
  darkviolet: "9400d3",
  deeppink: "ff1493",
  deepskyblue: "00bfff",
  dimgray: "696969",
  dimgrey: "696969",
  dodgerblue: "1e90ff",
  firebrick: "b22222",
  floralwhite: "fffaf0",
  forestgreen: "228b22",
  fuchsia: "f0f",
  gainsboro: "dcdcdc",
  ghostwhite: "f8f8ff",
  gold: "ffd700",
  goldenrod: "daa520",
  gray: "808080",
  green: "008000",
  greenyellow: "adff2f",
  grey: "808080",
  honeydew: "f0fff0",
  hotpink: "ff69b4",
  indianred: "cd5c5c",
  indigo: "4b0082",
  ivory: "fffff0",
  khaki: "f0e68c",
  lavender: "e6e6fa",
  lavenderblush: "fff0f5",
  lawngreen: "7cfc00",
  lemonchiffon: "fffacd",
  lightblue: "add8e6",
  lightcoral: "f08080",
  lightcyan: "e0ffff",
  lightgoldenrodyellow: "fafad2",
  lightgray: "d3d3d3",
  lightgreen: "90ee90",
  lightgrey: "d3d3d3",
  lightpink: "ffb6c1",
  lightsalmon: "ffa07a",
  lightseagreen: "20b2aa",
  lightskyblue: "87cefa",
  lightslategray: "789",
  lightslategrey: "789",
  lightsteelblue: "b0c4de",
  lightyellow: "ffffe0",
  lime: "0f0",
  limegreen: "32cd32",
  linen: "faf0e6",
  magenta: "f0f",
  maroon: "800000",
  mediumaquamarine: "66cdaa",
  mediumblue: "0000cd",
  mediumorchid: "ba55d3",
  mediumpurple: "9370db",
  mediumseagreen: "3cb371",
  mediumslateblue: "7b68ee",
  mediumspringgreen: "00fa9a",
  mediumturquoise: "48d1cc",
  mediumvioletred: "c71585",
  midnightblue: "191970",
  mintcream: "f5fffa",
  mistyrose: "ffe4e1",
  moccasin: "ffe4b5",
  navajowhite: "ffdead",
  navy: "000080",
  oldlace: "fdf5e6",
  olive: "808000",
  olivedrab: "6b8e23",
  orange: "ffa500",
  orangered: "ff4500",
  orchid: "da70d6",
  palegoldenrod: "eee8aa",
  palegreen: "98fb98",
  paleturquoise: "afeeee",
  palevioletred: "db7093",
  papayawhip: "ffefd5",
  peachpuff: "ffdab9",
  peru: "cd853f",
  pink: "ffc0cb",
  plum: "dda0dd",
  powderblue: "b0e0e6",
  purple: "800080",
  rebeccapurple: "663399",
  red: "f00",
  rosybrown: "bc8f8f",
  royalblue: "4169e1",
  saddlebrown: "8b4513",
  salmon: "fa8072",
  sandybrown: "f4a460",
  seagreen: "2e8b57",
  seashell: "fff5ee",
  sienna: "a0522d",
  silver: "c0c0c0",
  skyblue: "87ceeb",
  slateblue: "6a5acd",
  slategray: "708090",
  slategrey: "708090",
  snow: "fffafa",
  springgreen: "00ff7f",
  steelblue: "4682b4",
  tan: "d2b48c",
  teal: "008080",
  thistle: "d8bfd8",
  tomato: "ff6347",
  turquoise: "40e0d0",
  violet: "ee82ee",
  wheat: "f5deb3",
  white: "fff",
  whitesmoke: "f5f5f5",
  yellow: "ff0",
  yellowgreen: "9acd32"
}), Vt = Object.freeze(new Set(Object.keys(Y)));
function Fn(t) {
  return t = String(t).trim().toLowerCase(), t ? t === "transparent" || Y[t] ? !0 : t === "transparent" || Vt.has(t) || Mt.test(t) || St.test(t) || wt.test(t) || At.test(t) || Et.test(t) || Ft.test(t) || Nt.test(t) || Tt.test(t) || kt.test(t) || Rt.test(t) : !1;
}
function Zt(t) {
  if (t = t.toString().trim().toLowerCase(), t === "transparent")
    return { r: 0, g: 0, b: 0, a: 0, format: "name", toString: h };
  let e = !1;
  Y[t] && (t = Y[t], e = !0);
  let n;
  if (n = Mt.exec(t)) {
    const { r, g: o, b: i } = k(n[1], n[2], n[3]);
    return {
      r: r * 255,
      g: o * 255,
      b: i * 255,
      format: "rgb",
      toString: h
    };
  }
  if (n = St.exec(t)) {
    const { r, g: o, b: i } = k(n[1], n[2], n[3]);
    return {
      r: r * 255,
      g: o * 255,
      b: i * 255,
      a: T(n[4]),
      format: "rgba",
      toString: h
    };
  }
  if (n = wt.exec(t)) {
    const { h: r, s: o, l: i } = P(n[0], n[1], n[3]);
    return { h: r * 360, s: o, l: i, format: "hsl", toString: G };
  }
  if (n = At.exec(t)) {
    const { h: r, s: o, l: i } = P(n[0], n[1], n[3]);
    return {
      h: r * 360,
      s: o,
      l: i,
      a: T(n[4]),
      format: "hsla",
      toString: G
    };
  }
  if (n = Et.exec(t)) {
    const { h: r, s: o, v: i } = W(n[0], n[1], n[3]);
    return { h: r * 360, s: o, v: i, format: "hsv", toString: q };
  }
  if (n = Ft.exec(t)) {
    const { h: r, s: o, v: i } = W(n[0], n[1], n[3]);
    return {
      h: r * 360,
      s: o,
      v: i,
      a: T(n[4]),
      format: "hsva",
      toString: q
    };
  }
  return (n = Nt.exec(t)) ? {
    r: parseInt(`${n[1]}${n[1]}`, 16),
    g: parseInt(`${n[2]}${n[2]}`, 16),
    b: parseInt(`${n[3]}${n[3]}`, 16),
    format: e ? "name" : "hex3",
    toString: h
  } : (n = Tt.exec(t)) ? {
    r: parseInt(`${n[1]}${n[1]}`, 16),
    g: parseInt(`${n[2]}${n[2]}`, 16),
    b: parseInt(`${n[3]}${n[3]}`, 16),
    a: ft(`${n[4]}${n[4]}`),
    format: e ? "name" : "hex4",
    toString: h
  } : (n = kt.exec(t)) ? {
    r: parseInt(n[1], 16),
    g: parseInt(n[2], 16),
    b: parseInt(n[3], 16),
    format: e ? "name" : "hex6",
    toString: h
  } : (n = Rt.exec(t)) ? {
    r: parseInt(n[1], 16),
    g: parseInt(n[2], 16),
    b: parseInt(n[3], 16),
    a: ft(n[4]),
    format: e ? "name" : "hex8",
    toString: h
  } : null;
}
function Nn(t) {
  const { a: e, ...n } = N(t);
  delete n.format;
  const r = $t(n.r, n.g, n.b), o = _t(n.r, n.g, n.b), i = Ot(n.r, n.g, n.b), s = xt(n.r, n.g, n.b, e);
  return {
    rgb: n,
    hsl: r,
    hsv: o,
    hex: i,
    alpha: e,
    rgba: { ...n, a: e, format: "rgba" },
    hsla: { ...r, a: e, format: "hsla" },
    hsva: { ...o, a: e, format: "hsva" },
    hex8: s,
    origin: t
  };
}
function N(t) {
  let e = { r: 0, g: 0, b: 0 }, n = 1, r;
  return typeof t == "string" ? r = Zt(t) : r = t, r !== null && typeof r == "object" && ("l" in r ? e = Jt(r.h, r.s, r.l) : "v" in r && (e = te(r.h, r.s, r.v)), "a" in r && (n = T(r.a ?? 1), Number.isNaN(n) && (n = 1)), e = r), { ...e, a: n, format: "rgba", toString: h };
}
function P(t, e, n) {
  return {
    h: p(t, 0, 360) / 360,
    s: p(R(e) ? $(e) : e, 0, 1),
    l: p(R(n) ? $(n) : n, 0, 1)
  };
}
function k(t, e, n) {
  return {
    r: p(t, 0, 255) / 255,
    g: p(e, 0, 255) / 255,
    b: p(n, 0, 255) / 255
  };
}
function W(t, e, n) {
  return {
    h: p(t, 0, 360) / 360,
    s: p(R(e) ? $(e) : e, 0, 1),
    v: p(R(n) ? $(n) : n, 0, 1)
  };
}
function T(t) {
  return p(R(t) ? $(t) : t, 0, 1);
}
function Jt(t, e, n) {
  let r, o, i;
  if ({ h: t, s: e, l: n } = P(t, e, n), e === 0)
    r = o = i = n;
  else {
    const s = n < 0.5 ? 1 * (1 + e) : n + e - n * e, c = 2 * n - s;
    r = Z(c, s, t + 1 / 3), o = Z(c, s, t), i = Z(c, s, t - 1 / 3);
  }
  return r *= 255, o *= 255, i *= 255, { r, g: o, b: i, toString: h };
}
function $t(t, e, n) {
  ({ r: t, g: e, b: n } = k(t, e, n));
  const r = Math.max(t, e, n), o = Math.min(t, e, n);
  let i, s;
  const c = (r + o) / 2;
  if (r === o)
    i = s = 0;
  else {
    const a = r - o;
    switch (s = c > 0.5 ? a / (2 - r - o) : a / (r + o), r) {
      case t: {
        i = (e - n) / a + (e < n ? 6 : 0);
        break;
      }
      case e: {
        i = (n - t) / a + 2;
        break;
      }
      case n: {
        i = (t - e) / a + 4;
        break;
      }
      default:
        i = 0;
    }
    i *= 60;
  }
  return { h: i, s, l: c, toString: G };
}
function Tn(t, e, n) {
  ({ h: t, s: e, l: n } = P(t, e, n));
  const r = 0.5 * (2 * n + e * (1 - Math.abs(2 * n - 1)));
  return e = 2 * (r - n) / r, { h: t * 360, s: e, v: r, toString: q };
}
function kn(t, e, n) {
  ({ h: t, s: e, v: n } = W(t, e, n));
  const r = 0.5 * n * (2 - e);
  return e = n * e / (1 - Math.abs(2 * r - 1)), { h: t * 360, s: e, l: r, toString: G };
}
function te(t, e, n) {
  ({ h: t, s: e, v: n } = W(t, e, n)), t *= 6;
  const r = Math.floor(t), o = t - r, i = n * (1 - e), s = n * (1 - o * e), c = n * (1 - (1 - o) * e), a = r % 6;
  let f = [n, s, i, i, c, n][a], l = [c, n, n, s, i, i][a], d = [i, i, c, n, n, s][a];
  return f *= 255, l *= 255, d *= 255, { r: f, g: l, b: d, toString: h };
}
function _t(t, e, n) {
  ({ r: t, g: e, b: n } = k(t, e, n));
  const r = Math.max(t, e, n), o = Math.min(t, e, n);
  let i;
  const s = r, c = r - o, a = r === 0 ? 0 : c / r;
  if (r === o)
    i = 0;
  else {
    switch (r) {
      case t: {
        i = (e - n) / c + (e < n ? 6 : 0);
        break;
      }
      case e: {
        i = (n - t) / c + 2;
        break;
      }
      case n: {
        i = (t - e) / c + 4;
        break;
      }
      default:
        i = 0;
    }
    i *= 60;
  }
  return { h: i, s: a, v: s, toString: q };
}
function Ot(t, e, n, r = !1) {
  ({ r: t, g: e, b: n } = k(t, e, n));
  const o = [
    E(Math.round(t * 255).toString(16)),
    E(Math.round(e * 255).toString(16)),
    E(Math.round(n * 255).toString(16))
  ];
  return r && F(o[0]) && F(o[1]) && F(o[2]) ? o[0].charAt(0) + o[1].charAt(0) + o[2].charAt(0) : "#" + o.join("");
}
function xt(t, e, n, r, o = !1) {
  ({ r: t, g: e, b: n } = k(t, e, n));
  const i = [
    E(Math.round(t * 255).toString(16)),
    E(Math.round(e * 255).toString(16)),
    E(Math.round(n * 255).toString(16)),
    E(ee(T(r)))
  ];
  return o && F(i[0]) && F(i[1]) && F(i[2]) && F(i[3]) ? i[0].charAt(0) + i[1].charAt(0) + i[2].charAt(0) + i[3].charAt(0) : "#" + i.join("");
}
function Rn(t, e, n = 0.5) {
  if (!t && !e)
    return { r: 0, g: 0, b: 0, a: 1 };
  if (!t)
    return N(e);
  if (!e)
    return N(t);
  const r = N(t), o = N(e), i = p(n, 0, 1), s = i * 2 - 1, c = r.a - o.a, f = ((s * c === -1 ? s : (s + c) / (1 + s * c)) + 1) / 2, l = 1 - f;
  return {
    r: Math.round(r.r * f + o.r * l),
    g: Math.round(r.g * f + o.g * l),
    b: Math.round(r.b * f + o.b * l),
    a: Math.round(r.a * i + o.a * (1 - i)),
    format: "rgba",
    toString: h
  };
}
function $n(t, e) {
  const n = N(t);
  return n.a = T(R(e) ? $(e) : e), n;
}
function _n(t = !1, e = "hex") {
  const n = Math.round(Math.random() * 255), r = Math.round(Math.random() * 255), o = Math.round(Math.random() * 255);
  if (e === "hex")
    return t ? xt(n, r, o, Math.random()) : Ot(n, r, o);
  let i;
  return e === "hsl" ? i = $t(n, r, o) : e === "hsv" ? i = _t(n, r, o) : i = { r: n, g: r, b: o }, t && (i.a = Math.random()), i.toString();
}
function E(t) {
  return t.length === 1 ? `0${t}` : t.toString();
}
function F(t) {
  return t.charAt(0) === t.charAt(1);
}
function ee(t) {
  return Math.round(parseFloat(t) * 255).toString(16);
}
function ft(t) {
  return parseInt(t, 16) / 255;
}
function p(t, e, n) {
  return Math.max(e, Math.min(n, parseFloat(t)));
}
function Z(t, e, n) {
  return n < 0 && (n += 1), n > 1 && (n -= 1), n < 1 / 6 ? t + (e - t) * 6 * n : n < 1 / 2 ? e : n < 2 / 3 ? t + (e - t) * (2 / 3 - n) * 6 : t;
}
function R(t) {
  return String(t).trim().includes("%");
}
function $(t) {
  const e = parseFloat(t) / 100;
  return Number.isNaN(e) ? 0 : e;
}
function h() {
  return m(this.a) && this.a >= 0 && this.a < 1 ? `rgba(${this.r}, ${this.g}, ${this.b}, ${this.a})` : `rgb(${this.r}, ${this.g}, ${this.b})`;
}
function G() {
  return m(this.a) && this.a >= 0 && this.a < 1 ? `hsla(${this.h}, ${this.s}, ${this.l}, ${this.a})` : `hsl(${this.h}, ${this.s}, ${this.l})`;
}
function q() {
  return m(this.a) && this.a >= 0 && this.a < 1 ? `hsva(${this.h}, ${this.s}, ${this.v}, ${this.a})` : `hsv(${this.h}, ${this.s}, ${this.v})`;
}
function ut(t) {
  return t & -t;
}
function On(t, e = 0) {
  const n = new Array(t + 1).fill(0);
  function r(c, a) {
    if (!(!a || c >= t))
      for (c += 1; c <= t; )
        n[c] += a, c += ut(c);
  }
  function o(c = t) {
    if (c <= 0)
      return 0;
    c > t && (c = t);
    let a = c * e;
    for (; c > 0; )
      a += n[c], c -= ut(c);
    return a;
  }
  function i(c) {
    return o(c + 1) - o(c);
  }
  function s(c) {
    let a = 0, f = t;
    for (; f > a; ) {
      const l = Math.floor((a + f) / 2), d = o(l);
      if (d > c) {
        f = l;
        continue;
      } else if (d < c) {
        if (a === l)
          return o(a + 1) <= c ? a + 1 : a;
        a = l;
      } else
        return l;
    }
    return a;
  }
  return { add: r, sum: o, get: i, boundIndex: s };
}
function xn(t) {
  const e = parseFloat(t);
  return Number.isNaN(e) ? 0 : e;
}
function M(t) {
  return t < 10 ? `0${t}` : t.toString();
}
function b(t) {
  const e = t.toString().split(/[eE]/), n = (e[0].split(".")[1] || "").length - +(e[1] || 0);
  return n > 0 ? n : 0;
}
function Dn(t, e = 3, n = ",") {
  if (typeof t != "number" && (t = parseFloat(t)), Number.isNaN(t))
    return "0";
  let [r, o] = String(t).split(".");
  const i = new RegExp(`(\\d+)(\\d{${e}})`);
  for (; i.test(r); )
    r = r.replace(i, `$1${n}$2`);
  return o = o ? `.${o}` : "", `${r}${o}`;
}
function ne(t, e) {
  if (e === 0)
    return Math.round(t);
  let n = t.toFixed(b(t));
  const r = n.indexOf(".");
  if (r === -1)
    return t;
  const o = n.replace(".", "").split(""), i = r + e;
  return o[i] ? (n.charAt(i + 1) === "5" ? n = n.substring(0, i + 1) + "6" : n = n.substring(0, i + 2), parseFloat(Number(n).toFixed(e))) : t;
}
function Cn(t, e, n) {
  return ne(t * e, n);
}
function Hn(t, e) {
  if (e < 0 || e > 1)
    return Math.round(t);
  const n = Math.ceil(t);
  return t + e >= n ? n : Math.floor(t);
}
function In(t, e, n) {
  return Math.max(e, Math.min(n, parseFloat(t)));
}
const re = Object.freeze([
  "B",
  "KB",
  "MB",
  "GB",
  "TB",
  "AUTO"
]);
function Ln(t, e = "AUTO") {
  let n = e.toUpperCase();
  n = re.includes(n) ? n : "AUTO";
  let r;
  switch (n) {
    case "AUTO":
      r = 0;
      break;
    case "KB":
      r = 1;
      break;
    case "MB":
      r = 2;
      break;
    case "GB":
      r = 3;
      break;
    case "TB":
      r = 4;
      break;
    default:
      return t;
  }
  let o;
  if (r)
    o = t / 1024 ** r;
  else
    for (o = t; o > 1024 && !(r > 4); ++r)
      o = o / 1024;
  return o;
}
function Dt(t, e = 15) {
  return +parseFloat(Number(t).toPrecision(e));
}
function z(t) {
  const e = String(t);
  if (!e.includes("e"))
    return Number(e.replace(".", ""));
  const n = b(t);
  return n > 0 ? Dt(Number(t) * 10 ** n) : Number(t);
}
function j(t) {
  return (...e) => {
    let n = e[0];
    for (let r = 1, o = e.length; r < o; ++r)
      n = t(n, e[r]);
    return n;
  };
}
const C = j((t, e) => {
  const n = z(t), r = z(e), o = b(t) + b(e);
  return n * r / 10 ** o;
}), Bn = j((t, e) => {
  const n = 10 ** Math.max(b(t), b(e));
  return (C(t, n) + C(e, n)) / n;
}), Un = j((t, e) => {
  const n = 10 ** Math.max(b(t), b(e));
  return (C(t, n) - C(e, n)) / n;
}), Yn = j((t, e) => {
  const n = z(t), r = z(e);
  return C(n / r, Dt(10 ** (b(e) - b(t))));
}), O = 1e3, B = 60, oe = B * O, v = 60, ie = v * B, se = ie * O, Ct = 24, ce = Ct * v, ae = ce * B, fe = ae * O, nt = 7, ue = nt * Ct, le = ue * v, de = le * B, ge = de * O, Ht = 3, he = 4, pe = he * Ht, me = {
  y(t, e) {
    const n = t.getFullYear();
    return e.length === 4 ? n : n % 1e3 % 100;
  },
  M(t, e) {
    const n = t.getMonth() + 1;
    return e.length === 2 ? M(n) : n;
  },
  d(t, e) {
    const n = t.getDate();
    return e.length === 2 ? M(n) : n;
  },
  H(t, e) {
    const n = t.getHours();
    return e.length === 2 ? M(n) : n;
  },
  m(t, e) {
    const n = t.getMinutes();
    return e.length === 2 ? M(n) : n;
  },
  s(t, e) {
    const n = t.getSeconds();
    return e.length === 2 ? M(n) : n;
  },
  q(t, e) {
    const n = Math.ceil((t.getMonth() + 1) / 3);
    return e.length === 2 ? M(n) : n;
  }
}, be = /[yMdHmsq](\w)*|./g, ye = /'(.+?)'/g;
function u(t, e = !1) {
  const n = new Date(t);
  if (e && Number.isNaN(+n))
    throw new RangeError("Invalid date value");
  return typeof t == "string" && !t.includes(":") && (n.setHours(0), n.setMinutes(0), n.setSeconds(0)), n;
}
function Pn(t, e = "yyyy-MM-dd HH:mm:ss") {
  t = u(t);
  const n = e.match(be), r = n == null ? void 0 : n.length;
  if (!r)
    return e;
  let o = 0, i = "";
  for (; o < r; ) {
    const s = n[o], c = s[0], a = me[c];
    a ? i += a(t, s) : i += s, ++o;
  }
  return i.replace(ye, "$1");
}
function Wn(t) {
  return t = u(t), `${M(t.getHours())}:${M(t.getMinutes())}:${M(
    t.getSeconds()
  )}`;
}
function et(t) {
  return t = u(t), Math.floor(t.getMonth() / 3) + 1;
}
const Me = ["日", "一", "二", "三", "四", "五", "六"];
function Gn(t) {
  return Me[t.getDay()];
}
function Se(t, e) {
  return t = u(t), t.setTime(t.getTime() + e), t;
}
function we(t, e) {
  return e *= O, Se(t, e);
}
function Ae(t, e) {
  return e *= B, we(t, e);
}
function Ee(t, e) {
  return e *= v, Ae(t, e);
}
function qn(t, e) {
  return e *= 12, Ee(t, e);
}
function rt(t, e) {
  return t = u(t), e = ~~e, t.setDate(t.getDate() + e), t;
}
function zn(t, e) {
  return e *= nt, rt(t, e);
}
function ot(t, e) {
  return t = u(t), e = ~~e, t.setMonth(t.getMonth() + e), t;
}
function jn(t, e) {
  return e *= Ht, ot(t, e);
}
function vn(t, e) {
  return e *= pe, ot(t, e);
}
function Kn(t, e = 42, n = 1) {
  t = u(t);
  const r = [];
  for (let o = 0; o < e; ++o)
    r.push(rt(t, o * n));
  return r;
}
function Qn(t, e = 12, n = 1) {
  t = u(t);
  const r = [];
  for (let o = 0; o < e; ++o)
    r.push(ot(t, o * n));
  return r;
}
function Xn(t) {
  const e = t.getDay() ?? 7;
  return rt(t, -e);
}
function lt(t) {
  return t = u(t), t.setMilliseconds(0), t;
}
function dt(t) {
  return t = u(t), t.setSeconds(0, 0), t;
}
function gt(t) {
  return t = u(t), t.setMinutes(0, 0, 0), t;
}
function ht(t) {
  return t = u(t), t.setHours(0, 0, 0, 0), t;
}
function Vn(t) {
  return t = u(t), t.setHours(23, 59, 59, 999), t;
}
function pt(t, e = 0) {
  e = e % 7, e < 0 && (e += 7), t = u(t);
  const n = t.getDay(), r = (n < e ? 7 : 0) + n - e;
  return t.setDate(t.getDate() - r), t.setHours(0, 0, 0, 0), t;
}
function Fe(t) {
  return t % 4 === 0 && t % 100 !== 0 || t % 400 === 0;
}
function Zn(t, e = 1) {
  t = u(t);
  const n = t.getFullYear(), r = t.getMonth() + 1, o = t.getDate();
  let i;
  return r < 7 ? r !== 2 ? i = 30 + r % 2 : Fe(n) ? i = 29 : i = 28 : i = 31 - r % 2, e = e % i, e < 0 && (e += i), o < e && t.setMonth(r - 1), t.setDate(e), t.setHours(0, 0, 0, 0), t;
}
function Jn(t) {
  t = u(t);
  const e = et(t);
  return t.setDate(1), t.setHours(0, 0, 0, 0), t.setMonth((e - 1) * 3), t;
}
function tr(t, e = 0) {
  e = e % 11, e < 0 && (e += 11), t = u(t);
  const n = t.getMonth(), r = (n < e ? 11 : 0) + n - e;
  return t.setMonth(t.getMonth() - r), t.setDate(1), t.setHours(0, 0, 0, 0), t;
}
function it(t, e) {
  return t = u(t), e = u(e), e.getTime() - t.getTime();
}
function Ne(t, e) {
  const n = it(t, e) / O;
  return n > 0 ? Math.floor(n) : Math.ceil(n);
}
function Te(t, e) {
  const n = it(t, e) / oe;
  return n > 0 ? Math.floor(n) : Math.ceil(n);
}
function ke(t, e) {
  const n = it(t, e) / se;
  return n > 0 ? Math.floor(n) : Math.ceil(n);
}
function Re(t, e) {
  return t = ht(t), e = ht(e), (e.getTime() - t.getTime()) / fe;
}
function er(t, e, n = 0) {
  return t = pt(t, n), e = pt(e, n), (e.getTime() - t.getTime()) / ge;
}
function $e(t, e) {
  t = u(t), e = u(e);
  const n = e.getFullYear() - t.getFullYear(), r = e.getMonth() - t.getMonth();
  return n * 12 + r;
}
function nr(t, e) {
  t = u(t), e = u(e);
  const n = e.getFullYear() - t.getFullYear(), r = et(e) - et(t);
  return n * 4 + r;
}
function _e(t, e) {
  return t = u(t), e = u(e), e.getFullYear() - t.getFullYear();
}
function Oe(t, e) {
  t = u(t), e = u(e);
  const n = t.getTime() - e.getTime();
  return n < 0 ? -1 : n > 0 ? 1 : n;
}
function _(t, e) {
  return -Oe(t, e);
}
function rr(t, e) {
  return t = lt(t), e = lt(e), Ne(t, e);
}
function or(t, e) {
  return t = dt(t), e = dt(e), Te(t, e);
}
function ir(t, e) {
  return t = gt(t), e = gt(e), ke(t, e);
}
function xe(t, e) {
  const n = _(t, e), r = Math.abs(Re(t, e));
  t = u(t), t.setDate(t.getDate() + n * r);
  const o = _(t, e) === -n;
  return n * (r - (o ? 1 : 0));
}
function sr(t, e) {
  const n = xe(t, e) / nt;
  return n > 0 ? Math.floor(n) : Math.ceil(n);
}
function De(t, e) {
  const n = _(t, e), r = Math.abs($e(t, e));
  t = u(t), t.setMonth(t.getMonth() + n * r);
  const o = _(t, e) === -n;
  return n * (r - (o ? 1 : 0));
}
function cr(t, e) {
  const n = De(t, e) / 3;
  return n > 0 ? Math.floor(n) : Math.ceil(n);
}
function ar(t, e) {
  const n = _(t, e), r = Math.abs(_e(t, e));
  t = u(t), t.setFullYear(t.getFullYear() + n * r);
  const o = _(t, e) === -n;
  return n * (r - (o ? 1 : 0));
}
function Ce(t) {
  if (t === null || typeof t != "object")
    return t;
  const e = Array.isArray(t) ? [] : {}, n = [
    {
      parent: e,
      key: void 0,
      data: t
    }
  ];
  for (; n.length; ) {
    const r = n.pop(), { parent: o, key: i, data: s } = r, c = Array.isArray(s) ? "array" : "object";
    if (!o)
      continue;
    let a = o;
    typeof i < "u" && (a = o[i] = c === "array" ? [] : {}), Object.keys(s).forEach((f) => {
      const l = s[f];
      l === s ? a[f] = a : l !== null && typeof l == "object" ? n.push({
        parent: a,
        key: f,
        data: l
      }) : a[f] = l;
    });
  }
  return e;
}
const He = "This object was destroyed, do not use it anywhere", Ie = () => !0;
function fr(t, e = He) {
  const n = () => {
    throw new Error(e);
  };
  Object.keys(t).forEach((r) => {
    typeof t[r] == "function" ? t[r] = n.bind(t) : t[r] = null;
  }), Object.getOwnPropertyNames(t.constructor.prototype).forEach((r) => {
    r !== "constructor" && typeof t[r] == "function" && (t[r] = n.bind(t));
  }), t.isDestroyed = Ie;
}
const Le = H && ("ontouchstart" in window || Be() > 0), ur = Le ? "pointerdown" : "click";
function Be() {
  return typeof navigator < "u" && (navigator.maxTouchPoints || navigator.msMaxTouchPoints) || 0;
}
const S = /* @__PURE__ */ new Map();
function lr(t) {
  S.has(t) || S.set(t, /* @__PURE__ */ new Set());
}
function dr(t) {
  return S.get(t) ?? S.set(t, /* @__PURE__ */ new Set()).get(t);
}
function gr(t, e) {
  if (typeof e == "string" && (e = [e]), Array.isArray(e))
    for (let n = 0, r = e.length; n < r; ++n) {
      const o = e[n];
      S.has(o) || S.set(o, /* @__PURE__ */ new Set()), S.get(o).add(t);
    }
}
function hr(t, e) {
  var n;
  if (typeof e == "string" && (e = [e]), Array.isArray(e))
    for (let r = 0, o = e.length; r < o; ++r) {
      const i = e[r];
      S.has(i) && ((n = S.get(i)) == null || n.delete(t));
    }
}
function pr(t, e, n = window.Event) {
  const { type: r, bubbles: o = !1, cancelable: i = !1, ...s } = e;
  if (!m(r) || r === "")
    return !1;
  let c;
  return m(n) ? c = new n(r, { bubbles: o, cancelable: i }) : (c = document.createEvent("HTMLEvents"), c.initEvent(r, o, i)), Object.assign(c, s), t.dispatchEvent(c);
}
const Ue = [
  "button",
  "[href]:not(.disabled)",
  "input",
  "select",
  "textarea",
  "[tabindex]",
  "[contenteditable]"
].map((t) => `${t}:not(:disabled):not([disabled])`).join(", ");
function K(t) {
  return !!t && t.nodeType === Node.ELEMENT_NODE;
}
function Ye(t) {
  return K(t) ? t : document.body;
}
function Pe(t, e) {
  return t ? Array.from(Ye(e).querySelectorAll(t)) : [];
}
function mr(t) {
  const e = document.activeElement;
  return !K(t) || !e ? !1 : t === e || It(e, t);
}
function It(t, e) {
  if (!t || !e)
    return !1;
  const n = e.__transferElement;
  return e.contains(t) || !!n && (n === t || n.contains(t));
}
function We(t) {
  if (!K(t) || !t.parentNode || !It(t, document.body) || t.style.display === "none")
    return !0;
  const e = t.getBoundingClientRect();
  return !(e && e.width > 0 && e.height > 0);
}
function Ge(t) {
  return !We(t);
}
function qe(t) {
  return !K(t) || t.hasAttribute("disabled") && t.getAttribute("disabled") !== "false" || t.disabled;
}
function br(t, e = !1) {
  const n = e ? () => !1 : qe;
  return Pe(Ue, t).filter(
    (r) => Ge(r) && r.tabIndex > -1 && !n(r)
  );
}
function ze(t) {
  if (!t)
    return 0;
  const e = getComputedStyle(t);
  return parseFloat(e.paddingLeft) + parseFloat(e.paddingRight) || 0;
}
function yr(t) {
  if (!t)
    return 0;
  const e = getComputedStyle(t);
  return parseFloat(e.paddingTop) + parseFloat(e.paddingBottom) || 0;
}
function Mr(t) {
  if (!t)
    return 0;
  const e = getComputedStyle(t);
  return parseFloat(e.marginLeft) + parseFloat(e.marginRight) || 0;
}
function Sr(t) {
  if (!t)
    return 0;
  const e = getComputedStyle(t);
  return parseFloat(e.marginTop) + parseFloat(e.marginBottom) || 0;
}
function wr(t) {
  if (!t)
    return 0;
  const e = getComputedStyle(t);
  return parseFloat(e.borderLeftWidth) + parseFloat(e.borderRightWidth) || 0;
}
function Ar(t) {
  if (!t)
    return 0;
  const e = getComputedStyle(t);
  return parseFloat(e.borderTopWidth) + parseFloat(e.borderBottomWidth) || 0;
}
function Er(t) {
  if (!t)
    return 0;
  const e = document.createRange();
  e.setStart(t, 0), e.setEnd(t, t.childNodes.length);
  const n = e.getBoundingClientRect().width, r = ze(t);
  return n + r;
}
const je = /["'&<>]/;
function Fr(t) {
  const e = "" + t, n = je.exec(e);
  if (!n)
    return e;
  let r = "", o, i, s = 0;
  for (i = n.index; i < e.length; i++) {
    switch (e.charCodeAt(i)) {
      case 34:
        o = "&quot;";
        break;
      case 38:
        o = "&amp;";
        break;
      case 39:
        o = "&#39;";
        break;
      case 60:
        o = "&lt;";
        break;
      case 62:
        o = "&gt;";
        break;
      default:
        continue;
    }
    s !== i && (r += e.substring(s, i)), s = i + 1, r += o;
  }
  return s !== i ? r + e.substring(s, i) : r;
}
function Nr() {
  const t = /* @__PURE__ */ new Map();
  return {
    on(e, n) {
      const r = t.get(e);
      (r == null ? void 0 : r.add(n)) || t.set(e, /* @__PURE__ */ new Set([n]));
    },
    off(e, n) {
      const r = t.get(e);
      r && r.delete(n);
    },
    clear(e) {
      const n = t.get(e);
      n && n.clear();
    },
    clearAll() {
      t.clear();
    },
    emit(e, ...n) {
      const r = t.get(e);
      r && r.forEach((o) => {
        o(...n);
      });
    }
  };
}
function st(t, e, n) {
  t && !e.has(t) && (n(t), e.add(t));
}
const ve = /* @__PURE__ */ new Set();
function Tr(t, e = console.info) {
  st(t, ve, e);
}
const Ke = /* @__PURE__ */ new Set();
function kr(t, e = console.warn) {
  st(t, Ke, e);
}
const Qe = /* @__PURE__ */ new Set();
function Rr(t, e = console.warn) {
  st(t, Qe, e);
}
function $r(t, e = 16) {
  if (typeof t != "function")
    return t;
  let n = Date.now(), r;
  return function(...o) {
    const i = Date.now(), s = n + e - i;
    clearTimeout(r), s <= 0 ? (t(...o), n = Date.now()) : r = setTimeout(() => {
      t(...o);
    }, e);
  };
}
function _r(t, e = 100) {
  if (typeof t != "function")
    return t;
  let n;
  return function(...r) {
    clearTimeout(n), n = setTimeout(() => {
      t(...r);
    }, e);
  };
}
function Or(t) {
  if (typeof t != "function")
    return t;
  let e = !1, n;
  return function(...r) {
    n = r, e || (e = !0, Promise.resolve().then(() => {
      t(...n), e = !1;
    }));
  };
}
function xr(t) {
  if (typeof t != "function")
    return t;
  let e = !1, n;
  return function(...r) {
    n = r, e || (e = !0, requestAnimationFrame(() => {
      t(...n), e = !1;
    }));
  };
}
const x = /* @__PURE__ */ new Set(), Lt = /* @__PURE__ */ new WeakMap();
function Xe() {
  x.forEach((t) => {
    t(...Lt.get(t));
  }), x.clear();
}
function Dr(t, ...e) {
  if (typeof t != "function")
    return t;
  Lt.set(t, e), !x.has(t) && (x.add(t), x.size === 1 && Promise.resolve().then(Xe));
}
const D = /* @__PURE__ */ new Set(), Bt = /* @__PURE__ */ new WeakMap();
function Ve() {
  D.forEach((t) => {
    t(...Bt.get(t));
  }), D.clear();
}
function Cr(t, ...e) {
  if (typeof t != "function")
    return t;
  Bt.set(t, e), !D.has(t) && (D.add(t), D.size === 1 && requestAnimationFrame(Ve));
}
let J = null;
function Hr() {
  if (!H)
    return !0;
  if (J === null) {
    const t = document.createElement("div");
    t.style.display = "flex", t.style.flexDirection = "column", t.style.rowGap = "1px", t.appendChild(document.createElement("div")), t.appendChild(document.createElement("div")), document.body.appendChild(t), J = t.scrollHeight === 1, document.body.removeChild(t);
  }
  return J;
}
let tt = null;
function Ir() {
  return H ? (tt === null && (tt = "loading" in document.createElement("img")), tt) : !0;
}
function Lr(t) {
  return Array.isArray(t) ? t : [t];
}
function Br(t) {
  return yt(t) ? t() : t;
}
function Ur(t) {
  return t.replace(/[\\/]+/g, "/");
}
function Yr(t, e, n = (o) => o, r = !1) {
  const o = r ? /* @__PURE__ */ new Map() : {};
  if (!m(e))
    return o;
  const i = r ? (c, a) => o.set(c, a) : (c, a) => o[c] = a, s = yt(e) ? e : (c) => c[e];
  return t.forEach((c) => {
    const a = s(c);
    m(a) && i(a, n(c));
  }), o;
}
function Pr(t, e, n = !1) {
  let r = -1;
  return n || typeof e != "function" ? r = t.findIndex((o) => o === e) : r = t.findIndex(e), ~r ? t.splice(r, 1)[0] : null;
}
function Wr(t, e = []) {
  (typeof e == "string" || typeof e == "function") && (e = [e]);
  const n = e.length, r = {};
  for (const o of t) {
    let i;
    for (let s = 0; s < n; ++s) {
      const c = s === n - 1, a = e[s], f = typeof a == "function" ? a(o) : o[a];
      i ? (i[f] || (i[f] = c ? [] : {}), i = i[f]) : (r[f] || (r[f] = c ? [] : {}), i = r[f]);
    }
    i.push(o);
  }
  return r;
}
function Gr(t, e = {}) {
  const {
    keyField: n = "id",
    childField: r = "children",
    parentField: o = "parent",
    rootId: i = null
  } = e, s = m(i) && i !== "", c = [], a = /* @__PURE__ */ new Map();
  for (let f = 0, l = t.length; f < l; ++f) {
    const d = t[f], g = d[n];
    if (!(s ? g === i : !m(g)))
      if (a.has(g) ? d[r] = a.get(g) : (d[r] = [], a.set(g, d[r])), d[o] && (!s || d[o] !== i)) {
        const w = d[o];
        a.has(w) || a.set(w, []), a.get(w).push(d);
      } else
        c.push(d);
  }
  return c;
}
function qr(t, e = {}) {
  const {
    keyField: n = "id",
    childField: r = "children",
    parentField: o = "parent",
    rootId: i = null,
    depthFirst: s = !1,
    injectId: c = !0,
    filter: a = vt,
    cascaded: f = !1
  } = e, l = m(i) && i !== "", d = [], g = [...t];
  let w = 1;
  for (; g.length; ) {
    const y = g.shift(), Q = y[r], X = Array.isArray(Q) && Q.length ? Q : [];
    c && !y[n] && (y[n] = w++);
    const Ut = y[n];
    c && o && (l ? y[o] === i : !y[o]) && (y[o] = i);
    const ct = a(y);
    if (ct && d.push(y), ct || !f) {
      for (let V = 0, Yt = X.length; V < Yt; ++V) {
        const at = X[V];
        c && o && (at[o] = Ut), !s && g.push(at);
      }
      s && g.unshift(...X);
    }
  }
  return d;
}
function zr(t, e, n = {}) {
  const { childField: r = "children", depthFirst: o = !1 } = n, i = [...t.map((s) => ({ item: s, depth: 0 }))];
  for (; i.length; ) {
    const { item: s, depth: c } = i.shift(), a = s[r];
    e(s, c), a != null && a.length && i[o ? "unshift" : "push"](...a.map((f) => ({ item: f, depth: c + 1 })));
  }
}
const mt = (t, e) => Number.isNaN(Number(t) - Number(e)) ? String(t).localeCompare(e) : t - e;
function jr(t, e) {
  if (!t.sort || U(e) && !e.key || !e.length)
    return t;
  const n = Array.from(t);
  Array.isArray(e) || (e = [e]);
  const r = e.map(
    (o) => typeof o == "string" ? {
      key: o,
      method: mt,
      type: "asc"
    } : o
  ).map((o) => (typeof o.accessor != "function" && (o.accessor = (i) => i[o.key]), typeof o.method != "function" && (o.method = mt), o.params = Array.isArray(o.params) ? o.params : [], o));
  return n.sort((o, i) => {
    let s = 0;
    for (const c of r) {
      const { method: a, type: f, accessor: l, params: d } = c, g = f === "desc", w = a(l(o, ...d), l(i, ...d));
      if (s = g ? -w : w, s)
        break;
    }
    return s;
  }), n;
}
function vr(t, e, n = !0) {
  t = n ? Ce(t) : t;
  const r = [
    {
      source: t,
      target: e
    }
  ];
  for (; r.length; ) {
    const { source: o, target: i } = r.pop();
    Object.keys(i).forEach((s) => {
      U(i[s]) ? (U(o[s]) || (o[s] = {}), r.push({
        source: o[s],
        target: i[s]
      })) : Array.isArray(i[s]) ? (Array.isArray(o[s]) || (o[s] = []), r.push({
        source: o[s],
        target: i[s]
      })) : o[s] = i[s];
    });
  }
  return t;
}
function Kr(t) {
  t = Array.from(t);
  let e = !1;
  const n = () => {
    var r;
    e || ((r = t.shift()) == null || r(), t.length && requestAnimationFrame(n));
  };
  return n(), () => e = !0;
}
function Qr(t) {
  const e = [], n = Array.isArray(t) ? [...t] : [];
  for (; n.length; ) {
    const r = n.shift();
    r !== null && (Array.isArray(r) && n.unshift(...r), !(typeof r != "string" && typeof r != "number" && (!Pt(r) || r.type === Wt)) && (typeof r == "string" || typeof r == "number" ? e.push(Gt(String(r))) : r.type === qt && Array.isArray(r.children) ? n.unshift(r.children) : e.push(r)));
  }
  return e;
}
function Xr(t) {
  return t.charAt(0).toLowerCase() + t.slice(1).replace(/([A-Z])/g, "-$1").toLowerCase();
}
function Vr(t) {
  return t = t.trim().replace(/\s+/g, "-"), t = t.replace(/-+(\w)/g, (e, n) => n ? n.toUpperCase() : ""), (t.charAt(0).toLocaleUpperCase() + t.slice(1)).replace(
    /[^\w]/g,
    ""
  );
}
export {
  ur as CLICK_TYPE,
  Vt as COLOR_NAMES,
  Ct as DAY_ON_HOURS,
  fe as DAY_ON_MILLIS,
  ce as DAY_ON_MINUTES,
  ae as DAY_ON_SECONDS,
  Nt as HEX_REG_3,
  Tt as HEX_REG_4,
  kt as HEX_REG_6,
  Rt as HEX_REG_8,
  se as HOUR_ON_MILLS,
  v as HOUR_ON_MINUTES,
  ie as HOUR_ON_SECONDS,
  At as HSLA_REG,
  wt as HSL_REG,
  Ft as HSVA_REG,
  Et as HSV_REG,
  oe as MINUTE_ON_MILLS,
  B as MINUTE_ON_SECONDS,
  Y as NAMED_COLORS,
  Ht as QUARTER_ON_MONTHS,
  St as RGBA_REG,
  Mt as RGB_REG,
  O as SECOND_ON_MILLS,
  Le as USE_TOUCH,
  nt as WEEK_ON_DAYS,
  ue as WEEK_ON_HOURS,
  ge as WEEK_ON_MILLIS,
  le as WEEK_ON_MINUTES,
  de as WEEK_ON_SECONDS,
  pe as YEAR_ON_MONTHS,
  he as YEAR_ON_QUARTERS,
  rt as addDays,
  qn as addHalfDays,
  Ee as addHours,
  Se as addMilliseconds,
  Ae as addMinutes,
  ot as addMonths,
  jn as addQuarters,
  we as addSeconds,
  zn as addWeeks,
  vn as addYears,
  $n as adjustAlpha,
  In as boundRange,
  Br as callIfFunc,
  Oe as compareAsc,
  _ as compareDesc,
  It as contains,
  On as createBITree,
  lr as createEvent,
  Nr as createEventEmitter,
  _r as debounce,
  xr as debounceFrame,
  Or as debounceMinor,
  Ce as deepClone,
  fr as destroyObject,
  Re as differenceDays,
  xe as differenceFullDays,
  ir as differenceFullHours,
  or as differenceFullMinutes,
  De as differenceFullMonths,
  cr as differenceFullQuarters,
  rr as differenceFullSeconds,
  sr as differenceFullWeeks,
  ar as differenceFullYears,
  ke as differenceHours,
  it as differenceMilliseconds,
  Te as differenceMinutes,
  $e as differenceMonths,
  nr as differenceQuarters,
  Ne as differenceSeconds,
  er as differenceWeeks,
  _e as differenceYears,
  b as digitLength,
  hr as disconnect,
  pr as dispatchEvent,
  Yn as divide,
  M as doubleDigits,
  Vn as endOfDay,
  Lr as ensureArray,
  Rr as errorOnce,
  Fr as escapeHtml,
  qr as flatTree,
  Qr as flatVNodes,
  Pn as format,
  Ln as formatByteSize,
  Gn as getChineseWeek,
  Xn as getLastSunday,
  dr as getObservers,
  et as getQuarter,
  Er as getRangeWidth,
  Wn as getTime,
  An as getType,
  wr as getXBorder,
  Mr as getXMargin,
  ze as getXPadding,
  Ar as getYBorder,
  Sr as getYMargin,
  yr as getYPadding,
  Wr as groupByProps,
  tn as has,
  Tn as hslToHsv,
  Jt as hslToRgb,
  kn as hsvToHsl,
  te as hsvToRgb,
  Tr as infoOnce,
  I as is,
  ln as isArray,
  un as isBigInt,
  sn as isBoolean,
  H as isClient,
  Fn as isColor,
  pn as isDate,
  m as isDefined,
  qe as isDisabled,
  yn as isElement,
  bn as isEmpty,
  an as isFalse,
  mr as isFocusIn,
  yt as isFunction,
  We as isHidden,
  Je as isIOS,
  Fe as isLeapYear,
  hn as isMap,
  rn as isNaN,
  en as isNull,
  nn as isNumber,
  U as isObject,
  dn as isPromise,
  mn as isRegExp,
  gn as isSet,
  on as isString,
  fn as isSymbol,
  cn as isTrue,
  Ge as isVisible,
  vr as mergeObjects,
  Un as minus,
  Rn as mixColor,
  Cn as multipleFixed,
  Cr as nextFrameOnce,
  Dr as nextTickOnce,
  Mn as noop,
  T as normalizeAlpha,
  P as normalizeHsl,
  W as normalizeHsv,
  Ur as normalizePath,
  k as normalizeRgb,
  gr as observe,
  Nn as parseColor,
  N as parseColorToRgba,
  Zt as parseStringColor,
  Bn as plus,
  Pe as queryAll,
  br as queryTabables,
  _n as randomColor,
  En as randomString,
  wn as range,
  Kn as rangeDate,
  Qn as rangeMonth,
  Pr as removeArrayItem,
  Ot as rgbToHex,
  $t as rgbToHsl,
  _t as rgbToHsv,
  xt as rgbaToHex,
  Hn as round,
  Kr as runQueueFrame,
  Dn as segmentNumber,
  jr as sortByProps,
  ht as startOfDay,
  gt as startOfHour,
  dt as startOfMinute,
  Zn as startOfMonth,
  Jn as startOfQuarter,
  lt as startOfSecond,
  pt as startOfWeek,
  tr as startOfYear,
  Hr as supportFlexGap,
  Ir as supportImgLoading,
  $r as throttle,
  C as times,
  Vr as toCapitalCase,
  u as toDate,
  Sn as toFalse,
  ne as toFixed,
  Xr as toKebabCase,
  xn as toNumber,
  Dt as toPrecision,
  vt as toTrue,
  Yr as transformListToMap,
  Gr as transformTree,
  zr as walkTree,
  kr as warnOnce
};
//# sourceMappingURL=index.mjs.map
