{"version":3,"file":"index.mjs","sources":["../src/common.ts","../src/color.ts","../src/data.ts","../src/number.ts","../src/date.ts","../src/deep-clone.ts","../src/destroy-object.ts","../src/dom-event.ts","../src/dom.ts","../src/escape-html.ts","../src/event-emitter.ts","../src/log.ts","../src/performance.ts","../src/support.ts","../src/transform.ts","../src/vnode.ts","../src/word-case.ts"],"sourcesContent":["export const isClient = typeof window !== 'undefined'\nexport const isIOS =\n  /* #__PURE__ */ isClient &&\n  window?.navigator?.userAgent &&\n  /iP(ad|hone|od)/.test(window.navigator.userAgent)\n\nconst toString = Object.prototype.toString\nconst hasOwnProperty = Object.prototype.hasOwnProperty\n\nexport function is(value: unknown, type: string) {\n  return toString.call(value) === `[object ${type}]`\n}\n\nexport function has(value: Record<string, any>, key: string | symbol): key is keyof typeof value {\n  return hasOwnProperty.call(value, key)\n}\n\nexport function isDefined<T = unknown>(value: T | undefined | null): value is T {\n  return value !== undefined && value !== null\n}\n\nexport function isNull(value: unknown): value is null | undefined {\n  return value === undefined || value === null\n}\n\nexport function isNumber(value: unknown): value is number {\n  return typeof value === 'number'\n}\n\nexport function isNaN(value: unknown): value is number {\n  return Number.isNaN(value)\n}\n\nexport function isString(value: unknown): value is string {\n  return typeof value === 'string'\n}\n\nexport function isBoolean(value: unknown): value is boolean {\n  return typeof value === 'boolean'\n}\n\nexport function isTrue(value: unknown): value is true {\n  return value === true\n}\n\nexport function isFalse(value: unknown): value is false {\n  return value === false\n}\n\nexport function isSymbol(value: unknown): value is symbol {\n  return typeof value === 'symbol'\n}\n\nexport function isBigInt(value: unknown): value is bigint {\n  return typeof value === 'bigint'\n}\n\nexport function isArray(value: unknown): value is any[] {\n  return Array.isArray(value)\n}\n\nexport function isObject<T extends Record<string, any> = Record<string, any>>(\n  value: unknown\n): value is T {\n  return is(value, 'Object')\n}\n\nexport function isPromise(value: unknown): value is Promise<any> {\n  return (\n    !!value &&\n    typeof (value as any).then === 'function' &&\n    typeof (value as any).catch === 'function'\n  )\n}\n\nexport function isFunction(value: unknown): value is (...any: any[]) => any {\n  return typeof value === 'function'\n}\n\nexport function isSet(value: unknown): value is Set<any> {\n  return is(value, 'Set')\n}\n\nexport function isMap(value: unknown): value is Map<any, any> {\n  return is(value, 'Map')\n}\n\nexport function isDate(value: unknown): value is Date {\n  return is(value, 'Date')\n}\n\nexport function isRegExp(value: unknown): value is RegExp {\n  return is(value, 'RegExp')\n}\n\nexport function isEmpty(value: unknown) {\n  if (Array.isArray(value) || typeof value === 'string') {\n    return value.length === 0\n  }\n\n  if (value instanceof Map || value instanceof Set) {\n    return value.size === 0\n  }\n\n  if (isObject(value)) {\n    return Object.keys(value).length === 0\n  }\n\n  return false\n}\n\nexport function isElement(value: unknown): value is Element {\n  if (!isClient) return false\n\n  return !!(value && 'nodeType' in (value as any))\n}\n\nexport function noop(...args: any[]): any\n/* eslint-disable-next-line @typescript-eslint/no-empty-function */\nexport function noop() {}\n\nexport function toTrue(...args: any[]): true\nexport function toTrue() {\n  return true\n}\n\nexport function toFalse(...args: any[]): false\nexport function toFalse() {\n  return false\n}\n\n/**\n * 生成一个 range 数组\n *\n * @param size 大小\n * @param start 开始的数值，默认为 1\n * @param step 跨度，默认为 1\n */\nexport function range(size: number, start = 1, step = 1) {\n  const array: number[] = []\n\n  for (let i = 0; i < size; ++i) {\n    array.push(start + i * step)\n  }\n\n  return array\n}\n\n/**\n * 获取变量类型\n *\n * @param value 任意变量\n */\nexport function getType(value: unknown) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\n/**\n * 根据长度生成一串随机的字符串\n *\n * @param length 字符串的长度\n */\nexport function randomString(length = 16) {\n  const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'\n  const maxPos = chars.length\n\n  let string = ''\n\n  while (length--) {\n    string += chars.charAt(Math.floor(Math.random() * maxPos))\n  }\n\n  return string\n}\n","import { isDefined } from './common'\n\ninterface RGB {\n  r: number,\n  g: number,\n  b: number,\n  a?: number\n}\n\nexport interface RGBColor extends RGB {\n  a?: 1,\n  format?: 'name' | 'rgb'\n}\n\nexport interface RGBAColor extends RGB {\n  a: number,\n  format?: 'name' | 'rgba'\n}\n\nexport interface HEX3Color extends RGB {\n  a?: 1,\n  format?: 'name' | 'hex3'\n}\nexport interface HEX4Color extends RGB {\n  a: number,\n  format?: 'name' | 'hex4'\n}\nexport interface HEX6Color extends RGB {\n  a?: 1,\n  format?: 'name' | 'hex6'\n}\nexport interface HEX8Color extends RGB {\n  a: number,\n  format?: 'name' | 'hex8'\n}\n\ninterface HSL {\n  h: number,\n  s: number,\n  l: number,\n  a?: number\n}\n\nexport interface HSLColor extends HSL {\n  a?: 1,\n  format?: 'name' | 'hsl'\n}\n\nexport interface HSLAColor extends HSL {\n  a: number,\n  format?: 'name' | 'hsla'\n}\n\ninterface HSV {\n  h: number,\n  s: number,\n  v: number,\n  a?: number\n}\n\nexport interface HSVColor extends HSV {\n  a?: 1,\n  format?: 'name' | 'hsv'\n}\n\nexport interface HSVAColor extends HSV {\n  a: number,\n  format?: 'name' | 'hsva'\n}\n\nexport type Color =\n  | string\n  | RGBColor\n  | RGBAColor\n  | HSLColor\n  | HSLAColor\n  | HSVColor\n  | HSVAColor\n  | HEX3Color\n  | HEX4Color\n  | HEX6Color\n  | HEX8Color\n\nexport type ObjectColor = Exclude<Color, string>\nexport interface ColorMeta {\n  rgb: RGBColor,\n  hsl: HSLColor,\n  hsv: HSVColor,\n  hex: string,\n  alpha: number,\n  rgba: RGBAColor,\n  hsla: HSLAColor,\n  hsva: HSVAColor,\n  hex8: string,\n  origin: Color\n}\n\nconst INTEGER_REG = '[-\\\\+]?\\\\d+%?'\nconst NUMBER_REG = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?'\n\nconst NUMBER_UNIT = `(?:${NUMBER_REG})|(?:${INTEGER_REG})`\n\nconst COLOR_REG_3 = `[\\\\s|\\\\(]+(${NUMBER_UNIT})[,|\\\\s]+(${NUMBER_UNIT})[,|\\\\s]+(${NUMBER_UNIT})\\\\s*\\\\)?`\nconst COLOR_REG_4 = `[\\\\s|\\\\(]+(${NUMBER_UNIT})[,|\\\\s]+(${NUMBER_UNIT})[,|\\\\s]+(${NUMBER_UNIT})[,|\\\\s]+(${NUMBER_UNIT})\\\\s*\\\\)?`\n\n// const UNIT_REG = new RegExp(NUMBER_UNIT)\n\n// const FORMAT_REG = /^((((?:rgb)|(?:hsl)|(?:hsv))a?)|hex[3468]?|name)$/\n\nexport const RGB_REG = new RegExp(`rgb${COLOR_REG_3}`)\nexport const RGBA_REG = new RegExp(`rgba${COLOR_REG_4}`)\nexport const HSL_REG = new RegExp(`hsl${COLOR_REG_4}`)\nexport const HSLA_REG = new RegExp(`hsla${COLOR_REG_4}`)\nexport const HSV_REG = new RegExp(`hsv${COLOR_REG_4}`)\nexport const HSVA_REG = new RegExp(`hsva${COLOR_REG_4}`)\n\nexport const HEX_REG_3 = /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/\nexport const HEX_REG_4 = /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/\nexport const HEX_REG_6 = /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\nexport const HEX_REG_8 = /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n\nexport const NAMED_COLORS = Object.freeze({\n  aliceblue: 'f0f8ff',\n  antiquewhite: 'faebd7',\n  aqua: '0ff',\n  aquamarine: '7fffd4',\n  azure: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '000',\n  blanchedalmond: 'ffebcd',\n  blue: '00f',\n  blueviolet: '8a2be2',\n  brown: 'a52a2a',\n  burlywood: 'deb887',\n  burntsienna: 'ea7e5d',\n  cadetblue: '5f9ea0',\n  chartreuse: '7fff00',\n  chocolate: 'd2691e',\n  coral: 'ff7f50',\n  cornflowerblue: '6495ed',\n  cornsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: '0ff',\n  darkblue: '00008b',\n  darkcyan: '008b8b',\n  darkgoldenrod: 'b8860b',\n  darkgray: 'a9a9a9',\n  darkgreen: '006400',\n  darkgrey: 'a9a9a9',\n  darkkhaki: 'bdb76b',\n  darkmagenta: '8b008b',\n  darkolivegreen: '556b2f',\n  darkorange: 'ff8c00',\n  darkorchid: '9932cc',\n  darkred: '8b0000',\n  darksalmon: 'e9967a',\n  darkseagreen: '8fbc8f',\n  darkslateblue: '483d8b',\n  darkslategray: '2f4f4f',\n  darkslategrey: '2f4f4f',\n  darkturquoise: '00ced1',\n  darkviolet: '9400d3',\n  deeppink: 'ff1493',\n  deepskyblue: '00bfff',\n  dimgray: '696969',\n  dimgrey: '696969',\n  dodgerblue: '1e90ff',\n  firebrick: 'b22222',\n  floralwhite: 'fffaf0',\n  forestgreen: '228b22',\n  fuchsia: 'f0f',\n  gainsboro: 'dcdcdc',\n  ghostwhite: 'f8f8ff',\n  gold: 'ffd700',\n  goldenrod: 'daa520',\n  gray: '808080',\n  green: '008000',\n  greenyellow: 'adff2f',\n  grey: '808080',\n  honeydew: 'f0fff0',\n  hotpink: 'ff69b4',\n  indianred: 'cd5c5c',\n  indigo: '4b0082',\n  ivory: 'fffff0',\n  khaki: 'f0e68c',\n  lavender: 'e6e6fa',\n  lavenderblush: 'fff0f5',\n  lawngreen: '7cfc00',\n  lemonchiffon: 'fffacd',\n  lightblue: 'add8e6',\n  lightcoral: 'f08080',\n  lightcyan: 'e0ffff',\n  lightgoldenrodyellow: 'fafad2',\n  lightgray: 'd3d3d3',\n  lightgreen: '90ee90',\n  lightgrey: 'd3d3d3',\n  lightpink: 'ffb6c1',\n  lightsalmon: 'ffa07a',\n  lightseagreen: '20b2aa',\n  lightskyblue: '87cefa',\n  lightslategray: '789',\n  lightslategrey: '789',\n  lightsteelblue: 'b0c4de',\n  lightyellow: 'ffffe0',\n  lime: '0f0',\n  limegreen: '32cd32',\n  linen: 'faf0e6',\n  magenta: 'f0f',\n  maroon: '800000',\n  mediumaquamarine: '66cdaa',\n  mediumblue: '0000cd',\n  mediumorchid: 'ba55d3',\n  mediumpurple: '9370db',\n  mediumseagreen: '3cb371',\n  mediumslateblue: '7b68ee',\n  mediumspringgreen: '00fa9a',\n  mediumturquoise: '48d1cc',\n  mediumvioletred: 'c71585',\n  midnightblue: '191970',\n  mintcream: 'f5fffa',\n  mistyrose: 'ffe4e1',\n  moccasin: 'ffe4b5',\n  navajowhite: 'ffdead',\n  navy: '000080',\n  oldlace: 'fdf5e6',\n  olive: '808000',\n  olivedrab: '6b8e23',\n  orange: 'ffa500',\n  orangered: 'ff4500',\n  orchid: 'da70d6',\n  palegoldenrod: 'eee8aa',\n  palegreen: '98fb98',\n  paleturquoise: 'afeeee',\n  palevioletred: 'db7093',\n  papayawhip: 'ffefd5',\n  peachpuff: 'ffdab9',\n  peru: 'cd853f',\n  pink: 'ffc0cb',\n  plum: 'dda0dd',\n  powderblue: 'b0e0e6',\n  purple: '800080',\n  rebeccapurple: '663399',\n  red: 'f00',\n  rosybrown: 'bc8f8f',\n  royalblue: '4169e1',\n  saddlebrown: '8b4513',\n  salmon: 'fa8072',\n  sandybrown: 'f4a460',\n  seagreen: '2e8b57',\n  seashell: 'fff5ee',\n  sienna: 'a0522d',\n  silver: 'c0c0c0',\n  skyblue: '87ceeb',\n  slateblue: '6a5acd',\n  slategray: '708090',\n  slategrey: '708090',\n  snow: 'fffafa',\n  springgreen: '00ff7f',\n  steelblue: '4682b4',\n  tan: 'd2b48c',\n  teal: '008080',\n  thistle: 'd8bfd8',\n  tomato: 'ff6347',\n  turquoise: '40e0d0',\n  violet: 'ee82ee',\n  wheat: 'f5deb3',\n  white: 'fff',\n  whitesmoke: 'f5f5f5',\n  yellow: 'ff0',\n  yellowgreen: '9acd32'\n})\n\nexport type ColorName = keyof typeof NAMED_COLORS\n\nexport const COLOR_NAMES = Object.freeze(new Set(Object.keys(NAMED_COLORS))) as Readonly<\n  Set<ColorName>\n>\n\n/**\n * 判断给定的字符串是否为一个合法颜色值\n *\n * @param value 原始字符串\n */\nexport function isColor(value: string): boolean {\n  value = String(value).trim().toLowerCase()\n\n  if (!value) {\n    return false\n  }\n\n  if (value === 'transparent' || NAMED_COLORS[value as ColorName]) {\n    return true\n  }\n\n  return (\n    value === 'transparent' ||\n    COLOR_NAMES.has(value as ColorName) ||\n    RGB_REG.test(value) ||\n    RGBA_REG.test(value) ||\n    HSL_REG.test(value) ||\n    HSLA_REG.test(value) ||\n    HSV_REG.test(value) ||\n    HSVA_REG.test(value) ||\n    HEX_REG_3.test(value) ||\n    HEX_REG_4.test(value) ||\n    HEX_REG_6.test(value) ||\n    HEX_REG_8.test(value)\n  )\n}\n\n/**\n * 将给定的字符串转化为 {@link ObjectColor}，无法转换时返回 null\n *\n * @param color 原始颜色字符串\n */\nexport function parseStringColor(color: string) {\n  color = color.toString().trim().toLowerCase()\n\n  if (color === 'transparent') {\n    return { r: 0, g: 0, b: 0, a: 0, format: 'name', toString: toRgbString } as ObjectColor\n  }\n\n  let named = false\n\n  if (NAMED_COLORS[color as ColorName]) {\n    color = NAMED_COLORS[color as ColorName]\n    named = true\n  }\n\n  let match\n\n  if ((match = RGB_REG.exec(color))) {\n    const { r, g, b } = normalizeRgb(match[1], match[2], match[3])\n\n    return {\n      r: r * 255,\n      g: g * 255,\n      b: b * 255,\n      format: 'rgb',\n      toString: toRgbString\n    } as ObjectColor\n  }\n\n  if ((match = RGBA_REG.exec(color))) {\n    const { r, g, b } = normalizeRgb(match[1], match[2], match[3])\n\n    return {\n      r: r * 255,\n      g: g * 255,\n      b: b * 255,\n      a: normalizeAlpha(match[4]),\n      format: 'rgba',\n      toString: toRgbString\n    } as ObjectColor\n  }\n\n  if ((match = HSL_REG.exec(color))) {\n    const { h, s, l } = normalizeHsl(match[0], match[1], match[3])\n\n    return { h: h * 360, s, l, format: 'hsl', toString: toHslString } as ObjectColor\n  }\n\n  if ((match = HSLA_REG.exec(color))) {\n    const { h, s, l } = normalizeHsl(match[0], match[1], match[3])\n\n    return {\n      h: h * 360,\n      s,\n      l,\n      a: normalizeAlpha(match[4]),\n      format: 'hsla',\n      toString: toHslString\n    } as ObjectColor\n  }\n\n  if ((match = HSV_REG.exec(color))) {\n    const { h, s, v } = normalizeHsv(match[0], match[1], match[3])\n\n    return { h: h * 360, s, v, format: 'hsv', toString: toHsvString } as ObjectColor\n  }\n\n  if ((match = HSVA_REG.exec(color))) {\n    const { h, s, v } = normalizeHsv(match[0], match[1], match[3])\n\n    return {\n      h: h * 360,\n      s,\n      v,\n      a: normalizeAlpha(match[4]),\n      format: 'hsva',\n      toString: toHsvString\n    } as ObjectColor\n  }\n\n  if ((match = HEX_REG_3.exec(color))) {\n    return {\n      r: parseInt(`${match[1]}${match[1]}`, 16),\n      g: parseInt(`${match[2]}${match[2]}`, 16),\n      b: parseInt(`${match[3]}${match[3]}`, 16),\n      format: named ? 'name' : 'hex3',\n      toString: toRgbString\n    } as ObjectColor\n  }\n\n  if ((match = HEX_REG_4.exec(color))) {\n    return {\n      r: parseInt(`${match[1]}${match[1]}`, 16),\n      g: parseInt(`${match[2]}${match[2]}`, 16),\n      b: parseInt(`${match[3]}${match[3]}`, 16),\n      a: convertHexToDecimal(`${match[4]}${match[4]}`),\n      format: named ? 'name' : 'hex4',\n      toString: toRgbString\n    } as ObjectColor\n  }\n\n  if ((match = HEX_REG_6.exec(color))) {\n    return {\n      r: parseInt(match[1], 16),\n      g: parseInt(match[2], 16),\n      b: parseInt(match[3], 16),\n      format: named ? 'name' : 'hex6',\n      toString: toRgbString\n    } as ObjectColor\n  }\n\n  if ((match = HEX_REG_8.exec(color))) {\n    return {\n      r: parseInt(match[1], 16),\n      g: parseInt(match[2], 16),\n      b: parseInt(match[3], 16),\n      a: convertHexToDecimal(match[4]),\n      format: named ? 'name' : 'hex8',\n      toString: toRgbString\n    } as ObjectColor\n  }\n\n  return null\n}\n\n/**\n * 将给定的 {@link Color} 解析为 {@link ColorMeta}\n *\n * @param color 原始颜色值\n */\nexport function parseColor(color: Color): ColorMeta {\n  const { a, ...rgb } = parseColorToRgba(color)\n\n  delete rgb.format\n\n  const hsl = rgbToHsl(rgb.r, rgb.g, rgb.b)\n  const hsv = rgbToHsv(rgb.r, rgb.g, rgb.b)\n  const hex = rgbToHex(rgb.r, rgb.g, rgb.b)\n\n  const hex8 = rgbaToHex(rgb.r, rgb.g, rgb.b, a)\n\n  return {\n    rgb: rgb as RGBColor,\n    hsl,\n    hsv,\n    hex,\n    alpha: a,\n    rgba: { ...rgb, a, format: 'rgba' },\n    hsla: { ...hsl, a, format: 'hsla' },\n    hsva: { ...hsv, a, format: 'hsva' },\n    hex8,\n    origin: color\n  }\n}\n\n/**\n * 将给定的 {@link Color} 解析为 {@link RGBAColor}\n *\n * @param originColor 原始颜色值\n */\nexport function parseColorToRgba(originColor: Color) {\n  let rgb: RGBColor = { r: 0, g: 0, b: 0 }\n  let a = 1\n  let color: Color | null\n\n  if (typeof originColor === 'string') {\n    color = parseStringColor(originColor)\n  } else {\n    color = originColor\n  }\n\n  if (color !== null && typeof color === 'object') {\n    if ('l' in color) {\n      rgb = hslToRgb(color.h, color.s, color.l)\n    } else if ('v' in color) {\n      rgb = hsvToRgb(color.h, color.s, color.v)\n    }\n\n    if ('a' in color) {\n      a = normalizeAlpha(color.a ?? 1)\n\n      if (Number.isNaN(a)) {\n        a = 1\n      }\n    }\n\n    rgb = color as RGBColor\n  }\n\n  return { ...rgb, a, format: 'rgba', toString: toRgbString } as RGBAColor\n}\n\n/**\n * 将原始的 h、s、l 值标准化为 0 ~ 1 的值\n *\n * @param h 0 ~ 360\n * @param s 0 ~ 1，0% ~ 100%\n * @param l 0 ~ 1，0% ~ 100%\n */\nexport function normalizeHsl(h: number | string, s: number | string, l: number | string) {\n  return {\n    h: boundRange(h, 0, 360) / 360,\n    s: boundRange(isPercentage(s) ? parsePercentage(s) : s, 0, 1),\n    l: boundRange(isPercentage(l) ? parsePercentage(l) : l, 0, 1)\n  }\n}\n\n/**\n * 将原始的 r、g、b 值标准化为 0 ~ 1 的值\n *\n * @param r 0 ~ 255\n * @param g 0 ~ 255\n * @param b 0 ~ 255\n */\nexport function normalizeRgb(r: number | string, g: number | string, b: number | string) {\n  return {\n    r: boundRange(r, 0, 255) / 255,\n    g: boundRange(g, 0, 255) / 255,\n    b: boundRange(b, 0, 255) / 255\n  }\n}\n\n/**\n * 将原始的 h、s、v 值标准化为 0 ~ 1 的值\n *\n * @param h 0 ~ 360\n * @param s 0 ~ 1，0% ~ 100%\n * @param v 0 ~ 1，0% ~ 100%\n */\nexport function normalizeHsv(h: number | string, s: number | string, v: number | string) {\n  return {\n    h: boundRange(h, 0, 360) / 360,\n    s: boundRange(isPercentage(s) ? parsePercentage(s) : s, 0, 1),\n    v: boundRange(isPercentage(v) ? parsePercentage(v) : v, 0, 1)\n  }\n}\n\n/**\n * 将原始透明度值标准化为 0 ~ 1 的值\n *\n * @param a 0 ~ 1，0% ~ 100%\n */\nexport function normalizeAlpha(a: number | string) {\n  return boundRange(isPercentage(a) ? parsePercentage(a) : a, 0, 1)\n}\n\nexport function hslToRgb(h: number | string, s: number | string, l: number | string) {\n  let r, g, b\n  ;({ h, s, l } = normalizeHsl(h, s, l))\n\n  if (s === 0) {\n    r = g = b = l\n  } else {\n    const q = l < 0.5 ? 1 * (1 + s) : l + s - l * s\n    const p = 2 * l - q\n\n    r = hueToRgb(p, q, h + 1 / 3)\n    g = hueToRgb(p, q, h)\n    b = hueToRgb(p, q, h - 1 / 3)\n  }\n\n  r *= 255\n  g *= 255\n  b *= 255\n\n  return { r, g, b, toString: toRgbString } as RGBColor\n}\n\nexport function rgbToHsl(r: number | string, g: number | string, b: number | string) {\n  ({ r, g, b } = normalizeRgb(r, g, b))\n\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n  let h, s\n\n  const l = (max + min) / 2\n\n  if (max === min) {\n    h = s = 0\n  } else {\n    const d = max - min\n\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\n\n    switch (max) {\n      case r: {\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      }\n      case g: {\n        h = (b - r) / d + 2\n        break\n      }\n      case b: {\n        h = (r - g) / d + 4\n        break\n      }\n      default: {\n        h = 0\n      }\n    }\n\n    h *= 60\n  }\n\n  return { h, s, l, toString: toHslString } as HSLColor\n}\n\nexport function hslToHsv(h: number | string, s: number | string, l: number | string) {\n  ({ h, s, l } = normalizeHsl(h, s, l))\n\n  const v = 0.5 * (2 * l + s * (1 - Math.abs(2 * l - 1)))\n\n  s = (2 * (v - l)) / v\n\n  return { h: h * 360, s, v, toString: toHsvString } as HSVColor\n}\n\nexport function hsvToHsl(h: number | string, s: number | string, v: number | string) {\n  ({ h, s, v } = normalizeHsv(h, s, v))\n\n  const l = 0.5 * v * (2 - s)\n\n  s = (v * s) / (1 - Math.abs(2 * l - 1))\n\n  return { h: h * 360, s, l, toString: toHslString } as HSLColor\n}\n\nexport function hsvToRgb(h: number | string, s: number | string, v: number | string) {\n  ({ h, s, v } = normalizeHsv(h, s, v))\n\n  h *= 6\n\n  const i = Math.floor(h)\n  const f = h - i\n  const p = v * (1 - s)\n  const q = v * (1 - f * s)\n  const t = v * (1 - (1 - f) * s)\n  const mod = i % 6\n\n  let r = [v, q, p, p, t, v][mod]\n  let g = [t, v, v, q, p, p][mod]\n  let b = [p, p, t, v, v, q][mod]\n\n  r *= 255\n  g *= 255\n  b *= 255\n\n  return { r, g, b, toString: toRgbString } as RGBColor\n}\n\nexport function rgbToHsv(r: number | string, g: number | string, b: number | string) {\n  ({ r, g, b } = normalizeRgb(r, g, b))\n\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n\n  let h\n\n  const v = max\n  const d = max - min\n  const s = max === 0 ? 0 : d / max\n\n  if (max === min) {\n    h = 0\n  } else {\n    switch (max) {\n      case r: {\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      }\n      case g: {\n        h = (b - r) / d + 2\n        break\n      }\n      case b: {\n        h = (r - g) / d + 4\n        break\n      }\n      default: {\n        h = 0\n      }\n    }\n\n    h *= 60\n  }\n\n  return { h, s, v, toString: toHsvString } as HSVColor\n}\n\nexport function rgbToHex(\n  r: number | string,\n  g: number | string,\n  b: number | string,\n  allow3Char = false\n) {\n  ({ r, g, b } = normalizeRgb(r, g, b))\n\n  const hex = [\n    repairDigits(Math.round(r * 255).toString(16)),\n    repairDigits(Math.round(g * 255).toString(16)),\n    repairDigits(Math.round(b * 255).toString(16))\n  ]\n\n  if (allow3Char && isRepetitive(hex[0]) && isRepetitive(hex[1]) && isRepetitive(hex[2])) {\n    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0)\n  }\n\n  return '#' + hex.join('')\n}\n\nexport function rgbaToHex(\n  r: number | string,\n  g: number | string,\n  b: number | string,\n  a: number | string,\n  allow4Char = false\n) {\n  ({ r, g, b } = normalizeRgb(r, g, b))\n\n  const hex = [\n    repairDigits(Math.round(r * 255).toString(16)),\n    repairDigits(Math.round(g * 255).toString(16)),\n    repairDigits(Math.round(b * 255).toString(16)),\n    repairDigits(convertDecimalToHex(normalizeAlpha(a)))\n  ]\n\n  if (\n    allow4Char &&\n    isRepetitive(hex[0]) &&\n    isRepetitive(hex[1]) &&\n    isRepetitive(hex[2]) &&\n    isRepetitive(hex[3])\n  ) {\n    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0)\n  }\n\n  return '#' + hex.join('')\n}\n\nexport function mixColor(color1: Color, color2: Color, weight = 0.5) {\n  if (!color1 && !color2) return { r: 0, g: 0, b: 0, a: 1 }\n  if (!color1) return parseColorToRgba(color2)\n  if (!color2) return parseColorToRgba(color1)\n\n  const rgba1 = parseColorToRgba(color1)\n  const rgba2 = parseColorToRgba(color2)\n\n  const originalWeight = boundRange(weight, 0, 1)\n  const normalizedWeight = originalWeight * 2 - 1\n\n  const alphaDistance = rgba1.a - rgba2.a\n  const mixWeight =\n    normalizedWeight * alphaDistance === -1\n      ? normalizedWeight\n      : (normalizedWeight + alphaDistance) / (1 + normalizedWeight * alphaDistance)\n  const weight1 = (mixWeight + 1) / 2\n  const weight2 = 1 - weight1\n\n  return {\n    r: Math.round(rgba1.r * weight1 + rgba2.r * weight2),\n    g: Math.round(rgba1.g * weight1 + rgba2.g * weight2),\n    b: Math.round(rgba1.b * weight1 + rgba2.b * weight2),\n    a: Math.round(rgba1.a * originalWeight + rgba2.a * (1 - originalWeight)),\n    format: 'rgba',\n    toString: toRgbString\n  } as RGBAColor\n}\n\nexport function adjustAlpha(color: Color, alpha: number | string) {\n  const rgba = parseColorToRgba(color)\n\n  rgba.a = normalizeAlpha(isPercentage(alpha) ? parsePercentage(alpha) : alpha)\n\n  return rgba\n}\n\nexport function randomColor(withAlpha = false, type: 'hex' | 'rgb' | 'hsv' | 'hsl' = 'hex') {\n  const r = Math.round(Math.random() * 255)\n  const g = Math.round(Math.random() * 255)\n  const b = Math.round(Math.random() * 255)\n\n  if (type === 'hex') {\n    return withAlpha ? rgbaToHex(r, g, b, Math.random()) : rgbToHex(r, g, b)\n  }\n\n  let color: ObjectColor\n\n  if (type === 'hsl') {\n    color = rgbToHsl(r, g, b)\n  } else if (type === 'hsv') {\n    color = rgbToHsv(r, g, b)\n  } else {\n    color = { r, g, b }\n  }\n\n  if (withAlpha) {\n    (color as RGBAColor).a = Math.random()\n  }\n\n  return color.toString()\n}\n\nfunction repairDigits(str: string) {\n  return str.length === 1 ? `0${str}` : str.toString()\n}\n\nfunction isRepetitive(string: string): boolean {\n  return string.charAt(0) === string.charAt(1)\n}\n\n// function testUnit(color: number | string): boolean {\n//   return UNIT_REG.test(color as string)\n// }\n\nfunction convertDecimalToHex(number: number | string): string {\n  return Math.round(parseFloat(number as string) * 255).toString(16)\n}\n\nfunction convertHexToDecimal(hex: string): number {\n  return parseInt(hex, 16) / 255\n}\n\nfunction boundRange(number: number | string, min: number, max: number): number {\n  return Math.max(min, Math.min(max, parseFloat(number as string)))\n}\n\nfunction hueToRgb(p: number, q: number, t: number): number {\n  if (t < 0) t += 1\n  if (t > 1) t -= 1\n  if (t < 1 / 6) return p + (q - p) * 6 * t\n  if (t < 1 / 2) return q\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n\n  return p\n}\n\nfunction isPercentage(percent: number | string): boolean {\n  return String(percent).trim().includes('%')\n}\n\nfunction parsePercentage(percent: number | string): number {\n  const number = parseFloat(percent as string) / 100\n\n  return Number.isNaN(number) ? 0 : number\n}\n\nfunction toRgbString(this: RGB) {\n  if (isDefined(this.a) && this.a >= 0 && this.a < 1) {\n    return `rgba(${this.r}, ${this.g}, ${this.b}, ${this.a})`\n  }\n\n  return `rgb(${this.r}, ${this.g}, ${this.b})`\n}\n\nfunction toHslString(this: HSL) {\n  if (isDefined(this.a) && this.a >= 0 && this.a < 1) {\n    return `hsla(${this.h}, ${this.s}, ${this.l}, ${this.a})`\n  }\n\n  return `hsl(${this.h}, ${this.s}, ${this.l})`\n}\n\nfunction toHsvString(this: HSV) {\n  if (isDefined(this.a) && this.a >= 0 && this.a < 1) {\n    return `hsva(${this.h}, ${this.s}, ${this.v}, ${this.a})`\n  }\n\n  return `hsv(${this.h}, ${this.s}, ${this.v})`\n}\n","export interface BITree {\n  add(index: number, num: number): void,\n  sum(index?: number): number,\n  get(index: number): number,\n  boundIndex(limit: number): number\n}\n\nfunction lowBit(num: number) {\n  return num & -num\n}\n\nexport function createBITree(length: number, min = 0): BITree {\n  const tree = new Array(length + 1).fill(0)\n\n  /**\n   * 为第 index 个元素增/减值\n   */\n  function add(index: number, delta: number) {\n    if (!delta || index >= length) return\n\n    index += 1\n\n    while (index <= length) {\n      tree[index] += delta\n      index += lowBit(index)\n    }\n  }\n\n  /**\n   * 求前 index 个元素的和\n   */\n  function sum(index = length) {\n    if (index <= 0) return 0\n    if (index > length) index = length\n\n    let sum = index * min\n\n    while (index > 0) {\n      sum += tree[index]\n      index -= lowBit(index)\n    }\n\n    return sum\n  }\n\n  /**\n   * 获取第 index 个元素的值\n   */\n  function get(index: number) {\n    return sum(index + 1) - sum(index)\n  }\n\n  /**\n   * 根据 limit 提供的值寻找一个命中的元素的 index\n   */\n  function boundIndex(limit: number) {\n    let left = 0\n    let right = length\n\n    while (right > left) {\n      const middle = Math.floor((left + right) / 2)\n      const total = sum(middle)\n\n      if (total > limit) {\n        right = middle\n        continue\n      } else if (total < limit) {\n        if (left === middle) {\n          return sum(left + 1) <= limit ? left + 1 : left\n        }\n\n        left = middle\n      } else {\n        return middle\n      }\n    }\n\n    return left\n  }\n\n  return { add, sum, get, boundIndex }\n}\n","import type { AnyCase } from './word-case'\n\n/**\n * 将给定的值转成数字，NaN 的情况将会处理成 0\n *\n * @param value 需要转化的值\n */\nexport function toNumber(value: unknown) {\n  const number = parseFloat(value as string)\n\n  return Number.isNaN(number) ? 0 : number\n}\n\n/**\n * 将小于 10 整数 N 变成 `0N` 的字符串，方法不会对入参校验\n *\n * @param number 需要处理的整数\n */\nexport function doubleDigits(number: number) {\n  return number < 10 ? `0${number}` : number.toString()\n}\n\n/**\n * Return digits length of a number.\n *\n * @param number The input number\n */\nexport function digitLength(number: number | string) {\n  // Get digit length of e\n  const eSplit = number.toString().split(/[eE]/)\n  const len = (eSplit[0].split('.')[1] || '').length - +(eSplit[1] || 0)\n\n  return len > 0 ? len : 0\n}\n\n/**\n * 将给定的数字格式化为三位阶\n *\n * @param number 需要格式化的数字\n * @param segment 分隔的位数，默认为 3\n * @param separator 分隔的符号，默认为 ','\n */\nexport function segmentNumber(number: number | string, segment = 3, separator = ','): string {\n  if (typeof number !== 'number') {\n    number = parseFloat(number)\n  }\n\n  if (Number.isNaN(number)) return '0'\n\n  let [integer, decimal] = String(number).split('.')\n\n  const formatRegExp = new RegExp(`(\\\\d+)(\\\\d{${segment}})`)\n\n  while (formatRegExp.test(integer)) {\n    integer = integer.replace(formatRegExp, `$1${separator}$2`)\n  }\n\n  decimal = decimal ? `.${decimal}` : ''\n\n  return `${integer}${decimal}`\n}\n\n/**\n * 将给定的实数保留一定的小数\n *\n * @param number 需要处理的实数\n * @param decimal 需要保留的小数\n */\nexport function toFixed(number: number, decimal: number) {\n  if (decimal === 0) return Math.round(number)\n\n  let snum = number.toFixed(digitLength(number))\n\n  const pointPos = snum.indexOf('.')\n\n  if (pointPos === -1) return number\n\n  const nums = snum.replace('.', '').split('')\n  const targetPos = pointPos + decimal\n  const datum = nums[targetPos]\n\n  if (!datum) return number\n\n  if (snum.charAt(targetPos + 1) === '5') {\n    snum = snum.substring(0, targetPos + 1) + '6'\n  } else {\n    snum = snum.substring(0, targetPos + 2)\n  }\n\n  return parseFloat(Number(snum).toFixed(decimal))\n}\n\n/**\n * 将给定的实数扩大一定的倍数并保留一定的小数\n *\n * @param number 要处理的实数\n * @param multiple 要扩大的倍数\n * @param decimal 要保留的小数\n */\nexport function multipleFixed(number: number, multiple: number, decimal: number) {\n  return toFixed(number * multiple, decimal)\n}\n\n/**\n * 根据临界值对给定的数字进行舍入\n *\n * @param number 需要舍入的数\n * @param criticalValue 舍入的临界值 (0 ~ 1)，达到临界值进位反之舍弃\n */\nexport function round(number: number, criticalValue: number) {\n  if (criticalValue < 0 || criticalValue > 1) {\n    return Math.round(number)\n  }\n\n  const ceilValue = Math.ceil(number)\n\n  if (number + criticalValue >= ceilValue) {\n    return ceilValue\n  } else {\n    return Math.floor(number)\n  }\n}\n\n/**\n * 将给定的数字限定在指定的范围内\n *\n * @param number 需要限定范围的数\n * @param min 边界最小值，包含该值\n * @param max 边界最大值，包含该值\n */\nexport function boundRange(number: number | string, min: number, max: number) {\n  return Math.max(min, Math.min(max, parseFloat(number as string)))\n}\n\nexport type SizeUnitWithAuto = AnyCase<'B' | 'KB' | 'MB' | 'GB' | 'TB' | 'AUTO'>\nexport type SizeUnit = Exclude<SizeUnitWithAuto, AnyCase<'AUTO'>>\n\nconst SIZE_UNIT_WITH_AUTO = Object.freeze([\n  'B',\n  'KB',\n  'MB',\n  'GB',\n  'TB',\n  'AUTO'\n] as Uppercase<SizeUnitWithAuto>[])\n\n/**\n * 根据给定的 Byte 数值，将其格式化成指定单位的大小\n *\n * @param byte 需要计算的 Byte 数值\n * @param unit 格式化的单位\n */\nexport function formatByteSize(byte: number, unit: SizeUnitWithAuto = 'AUTO') {\n  let upperUnit = unit.toUpperCase() as Uppercase<SizeUnitWithAuto>\n  upperUnit = SIZE_UNIT_WITH_AUTO.includes(upperUnit) ? upperUnit : 'AUTO'\n\n  let power\n  switch (upperUnit) {\n    case 'AUTO':\n      power = 0\n      break\n    case 'KB':\n      power = 1\n      break\n    case 'MB':\n      power = 2\n      break\n    case 'GB':\n      power = 3\n      break\n    case 'TB':\n      power = 4\n      break\n    default:\n      return byte\n  }\n\n  let targetSize\n\n  if (!power) {\n    for (targetSize = byte; targetSize > 1024; ++power) {\n      if (power > 4) break\n      targetSize = targetSize / 1024\n    }\n  } else {\n    targetSize = byte / 1024 ** power\n  }\n\n  return targetSize\n}\n\n/**\n * Correct the given number to specifying significant digits.\n *\n * @param number The input number\n * @param precision An integer specifying the number of significant digits\n *\n * @example toPrecision(0.09999999999999998) === 0.1 // true\n */\nexport function toPrecision(number: number | string, precision = 15) {\n  return +parseFloat(Number(number).toPrecision(precision))\n}\n\nfunction multipleInt(number: number | string) {\n  const snum = String(number)\n\n  if (!snum.includes('e')) {\n    return Number(snum.replace('.', ''))\n  }\n\n  const dLength = digitLength(number)\n\n  return dLength > 0 ? toPrecision(Number(number) * 10 ** dLength) : Number(number)\n}\n\n/**\n * Create an operation to support rest params.\n *\n * @param operation The original operation\n */\nfunction createOperation(operation: (n1: number | string, n2: number | string) => number) {\n  return (...numbers: (number | string)[]) => {\n    let result = numbers[0] as number\n\n    for (let i = 1, len = numbers.length; i < len; ++i) {\n      result = operation(result, numbers[i])\n    }\n\n    return result\n  }\n}\n\n/**\n * Accurate multiplication.\n *\n * @param numbers The numbers to multiply\n */\nexport const times = createOperation((number1, number2) => {\n  const int1 = multipleInt(number1)\n  const int2 = multipleInt(number2)\n  const base = digitLength(number1) + digitLength(number2)\n  const int = int1 * int2\n\n  return int / 10 ** base\n})\n\n/**\n * Accurate addition.\n *\n * @param numbers The numbers to add\n */\nexport const plus = createOperation((number1, number2) => {\n  const base = 10 ** Math.max(digitLength(number1), digitLength(number2))\n\n  return (times(number1, base) + times(number2, base)) / base\n})\n\n/**\n * Accurate subtraction\n *\n * @param numbers The numbers to subtract\n */\nexport const minus = createOperation((number1, number2) => {\n  const base = 10 ** Math.max(digitLength(number1), digitLength(number2))\n\n  return (times(number1, base) - times(number2, base)) / base\n})\n\n/**\n * Accurate division.\n *\n * @param numbers The numbers to divide\n */\nexport const divide = createOperation((number1, number2) => {\n  const int1 = multipleInt(number1)\n  const int2 = multipleInt(number2)\n\n  return times(int1 / int2, toPrecision(10 ** (digitLength(number2) - digitLength(number1))))\n})\n","import { doubleDigits } from './number'\n\nexport type Dateable = number | string | Date\n\nexport const SECOND_ON_MILLS = 1000\n\nexport const MINUTE_ON_SECONDS = 60\nexport const MINUTE_ON_MILLS = MINUTE_ON_SECONDS * SECOND_ON_MILLS\n\nexport const HOUR_ON_MINUTES = 60\nexport const HOUR_ON_SECONDS = HOUR_ON_MINUTES * MINUTE_ON_SECONDS\nexport const HOUR_ON_MILLS = HOUR_ON_SECONDS * SECOND_ON_MILLS\n\nexport const DAY_ON_HOURS = 24\nexport const DAY_ON_MINUTES = DAY_ON_HOURS * HOUR_ON_MINUTES\nexport const DAY_ON_SECONDS = DAY_ON_MINUTES * MINUTE_ON_SECONDS\nexport const DAY_ON_MILLIS = DAY_ON_SECONDS * SECOND_ON_MILLS\n\nexport const WEEK_ON_DAYS = 7\nexport const WEEK_ON_HOURS = WEEK_ON_DAYS * DAY_ON_HOURS\nexport const WEEK_ON_MINUTES = WEEK_ON_HOURS * HOUR_ON_MINUTES\nexport const WEEK_ON_SECONDS = WEEK_ON_MINUTES * MINUTE_ON_SECONDS\nexport const WEEK_ON_MILLIS = WEEK_ON_SECONDS * SECOND_ON_MILLS\n\nexport const QUARTER_ON_MONTHS = 3\n\nexport const YEAR_ON_QUARTERS = 4\nexport const YEAR_ON_MONTHS = YEAR_ON_QUARTERS * QUARTER_ON_MONTHS\n\ntype Formatter = (date: Date, match: string) => string | number\n\ninterface Formatters {\n  [prop: string]: Formatter\n}\n\nconst formatters: Formatters = {\n  y(date, match) {\n    const year = date.getFullYear()\n\n    return match.length === 4 ? year : (year % 1000) % 100\n  },\n  M(date, match) {\n    const month = date.getMonth() + 1\n\n    return match.length === 2 ? doubleDigits(month) : month\n  },\n  d(date, match) {\n    const day = date.getDate()\n\n    return match.length === 2 ? doubleDigits(day) : day\n  },\n  H(date, match) {\n    const hour = date.getHours()\n\n    return match.length === 2 ? doubleDigits(hour) : hour\n  },\n  m(date, match) {\n    const minute = date.getMinutes()\n\n    return match.length === 2 ? doubleDigits(minute) : minute\n  },\n  s(date, match) {\n    const second = date.getSeconds()\n\n    return match.length === 2 ? doubleDigits(second) : second\n  },\n  q(date, match) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3)\n\n    return match.length === 2 ? doubleDigits(quarter) : quarter\n  }\n}\n\nconst formatRegExp = /[yMdHmsq](\\w)*|./g\nconst quotationRegExp = /'(.+?)'/g\n\n/**\n * 将任意可转为 Date 的变量转为一个新日期\n *\n * @param any 任意可转换的值\n * @param strict 是否在传入非法值时抛错\n */\nexport function toDate(any: Dateable, strict = false) {\n  const date = new Date(any)\n\n  if (strict && Number.isNaN(+date)) {\n    throw new RangeError('Invalid date value')\n  }\n\n  if (typeof any === 'string' && !any.includes(':')) {\n    date.setHours(0)\n    date.setMinutes(0)\n    date.setSeconds(0)\n  }\n\n  return date\n}\n\n/**\n * 将日期格式化成指定格式\n *\n * @param date 需要格式化的Date对象\n * @param pattern 格式化结构 年-y 月-M 日-d 时-H 分-m 秒-s 季度-q\n *\n * @example format(new Date(), 'yyyy-MM-dd')\n * @example format(Date.now(), 'yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\'')\n */\nexport function format(date: Dateable, pattern = 'yyyy-MM-dd HH:mm:ss') {\n  date = toDate(date)\n\n  const matchs = pattern.match(formatRegExp)\n  const length = matchs?.length\n\n  if (!length) {\n    return pattern\n  }\n\n  let i = 0\n  let result = ''\n\n  while (i < length) {\n    const substring = (matchs as RegExpMatchArray)[i]\n    const firstCharacter = substring[0]\n    const formatter = formatters[firstCharacter]\n\n    if (formatter) {\n      result += formatter(date, substring)\n    } else {\n      result += substring\n    }\n\n    ++i\n  }\n\n  return result.replace(quotationRegExp, '$1')\n}\n\n/**\n * 获取日期的时间部分\n *\n * @param date 给定的日期\n */\nexport function getTime(date: Dateable) {\n  date = toDate(date)\n\n  return `${doubleDigits(date.getHours())}:${doubleDigits(date.getMinutes())}:${doubleDigits(\n    date.getSeconds()\n  )}`\n}\n\n/**\n * 获取日期所在的季度\n *\n * @param date 给定的日期\n */\nexport function getQuarter(date: Dateable) {\n  date = toDate(date)\n\n  return Math.floor(date.getMonth() / 3) + 1\n}\n\nconst weeksForChinese = ['日', '一', '二', '三', '四', '五', '六']\n\n/**\n * 获取中文星期\n *\n * @param date 给定的日期\n */\nexport function getChineseWeek(date: Date) {\n  return weeksForChinese[date.getDay()]\n}\n\n/**\n * 为日期增减给定的毫秒\n *\n * @param date 原始日期\n * @param amount 增减的毫秒\n */\nexport function addMilliseconds(date: Dateable, amount: number) {\n  date = toDate(date)\n  date.setTime(date.getTime() + amount)\n\n  return date\n}\n\n/**\n * 为日期增减给定的秒\n *\n * @param date 原始日期\n * @param amount 增减的秒\n */\nexport function addSeconds(date: Dateable, amount: number) {\n  amount *= SECOND_ON_MILLS\n\n  return addMilliseconds(date, amount)\n}\n\n/**\n * 为日期增减给定的分钟\n *\n * @param date 原始日期\n * @param amount 增减的分钟\n */\nexport function addMinutes(date: Dateable, amount: number) {\n  amount *= MINUTE_ON_SECONDS\n\n  return addSeconds(date, amount)\n}\n\n/**\n * 为日期增减给定的小时\n *\n * @param date 原始日期\n * @param amount 增减的小时\n */\nexport function addHours(date: Dateable, amount: number) {\n  amount *= HOUR_ON_MINUTES\n\n  return addMinutes(date, amount)\n}\n\n/**\n * 为日期增减给定的半天数（12小时）\n *\n * @param date 原始日期\n * @param amount 增减的半天数\n */\nexport function addHalfDays(date: Dateable, amount: number) {\n  amount *= 12\n\n  return addHours(date, amount)\n}\n\n/**\n * 为日期增减给定的天数\n *\n * @param date 原始日期\n * @param amount 增减的天数\n */\nexport function addDays(date: Dateable, amount: number) {\n  date = toDate(date)\n  amount = ~~amount\n\n  date.setDate(date.getDate() + amount)\n\n  return date\n}\n\n/**\n * 为日期增减给定的周数\n *\n * @param date 原始日期\n * @param amount 增减的周数\n */\nexport function addWeeks(date: Dateable, amount: number) {\n  amount *= WEEK_ON_DAYS\n\n  return addDays(date, amount)\n}\n\n/**\n * 为日期增减给定的月数\n *\n * @param date 原始日期\n * @param amount 增减的月数\n */\nexport function addMonths(date: Dateable, amount: number) {\n  date = toDate(date)\n  amount = ~~amount\n\n  date.setMonth(date.getMonth() + amount)\n\n  return date\n}\n\n/**\n * 为日期增减给定的季度（3个月）\n *\n * @param date 原始日期\n * @param amount 增减的季度\n */\nexport function addQuarters(date: Dateable, amount: number) {\n  amount *= QUARTER_ON_MONTHS\n\n  return addMonths(date, amount)\n}\n\n/**\n * 为日期增减给定的年份\n *\n * @param date 原始日期\n * @param amount 增减的年份\n */\nexport function addYears(date: Dateable, amount: number) {\n  amount *= YEAR_ON_MONTHS\n\n  return addMonths(date, amount)\n}\n\n/**\n * 生成一个日期 range 数组\n *\n * @param start 开始日期\n * @param size range 的大小, 默认 42 (一般电子日历为 6 行 7 列)\n * @param step range 的跨幅\n */\nexport function rangeDate(start: Dateable, size = 42, step = 1) {\n  start = toDate(start)\n\n  const dateRange: Date[] = []\n\n  for (let i = 0; i < size; ++i) {\n    dateRange.push(addDays(start, i * step))\n  }\n\n  return dateRange\n}\n\n/**\n * 生成一个月份 range 数组\n *\n * @param start 开始日期\n * @param size range 的大小, 默认 12 (一年)\n * @param step range 的跨幅\n */\nexport function rangeMonth(start: Dateable, size = 12, step = 1) {\n  start = toDate(start)\n\n  const dateRange: Date[] = []\n\n  for (let i = 0; i < size; ++i) {\n    dateRange.push(addMonths(start, i * step))\n  }\n\n  return dateRange\n}\n\n/**\n * 根据给定的日期获取上一个周日\n *\n * @param date 原始日期\n */\nexport function getLastSunday(date: Date) {\n  const day = date.getDay() ?? 7\n\n  return addDays(date, -day)\n}\n\n/**\n * 获取给定的日期所在秒的开始日期（毫秒归零）\n *\n * @param date 原始日期\n */\nexport function startOfSecond(date: Dateable) {\n  date = toDate(date)\n  date.setMilliseconds(0)\n\n  return date\n}\n\n/**\n * 获取给定的日期所在分钟的开始日期 (秒归零)\n *\n * @param date 原始日期\n */\nexport function startOfMinute(date: Dateable) {\n  date = toDate(date)\n  date.setSeconds(0, 0)\n\n  return date\n}\n\n/**\n * 获取给定的日期所在小时的开始日期 (分钟归零)\n *\n * @param date 原始日期\n */\nexport function startOfHour(date: Dateable) {\n  date = toDate(date)\n  date.setMinutes(0, 0, 0)\n\n  return date\n}\n\n/**\n * 获取给定的日期所在天的开始日期\n *\n * @param date 原始日期\n */\nexport function startOfDay(date: Dateable) {\n  date = toDate(date)\n  date.setHours(0, 0, 0, 0)\n\n  return date\n}\n\n/**\n * 获取给定日期所在天的结束日期\n *\n * @param date 原始日期\n */\nexport function endOfDay(date: Dateable) {\n  date = toDate(date)\n  date.setHours(23, 59, 59, 999)\n\n  return date\n}\n\n/**\n * 获取给定的日期所在周的第一天的开始日期\n *\n * @param date 需要解析的时间\n * @param startOn 设定周的第一天，默认为周日\n */\nexport function startOfWeek(date: Dateable, startOn = 0) {\n  startOn = startOn % 7\n\n  if (startOn < 0) {\n    startOn += 7\n  }\n\n  date = toDate(date)\n\n  const day = date.getDay()\n  const difference = (day < startOn ? 7 : 0) + day - startOn\n\n  date.setDate(date.getDate() - difference)\n  date.setHours(0, 0, 0, 0)\n\n  return date\n}\n\n/**\n * 判断给定的年份是否为闰年\n *\n * @param year 原始年份\n */\nexport function isLeapYear(year: number) {\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0\n}\n\n/**\n * 获取给定的日期所在月份的第一天的开始日期\n *\n * @param date 原始日期\n * @param startOn 设定一个月的第一天，默认为 1 号\n */\nexport function startOfMonth(date: Dateable, startOn = 1) {\n  date = toDate(date)\n\n  const year = date.getFullYear()\n  const month = date.getMonth() + 1\n  const day = date.getDate()\n\n  let lastDay\n\n  if (month < 7) {\n    if (month !== 2) {\n      lastDay = 30 + (month % 2)\n    } else {\n      if (isLeapYear(year)) {\n        lastDay = 29\n      } else {\n        lastDay = 28\n      }\n    }\n  } else {\n    lastDay = 31 - (month % 2)\n  }\n\n  startOn = startOn % lastDay\n\n  if (startOn < 0) {\n    startOn += lastDay\n  }\n\n  if (day < startOn) {\n    date.setMonth(month - 1)\n  }\n\n  date.setDate(startOn)\n  date.setHours(0, 0, 0, 0)\n\n  return date\n}\n\n/**\n * 获取给定日期所在季度的第一天的开始日期\n *\n * @param date 原始日期\n */\nexport function startOfQuarter(date: Dateable) {\n  date = toDate(date)\n\n  const quarter = getQuarter(date)\n\n  date.setDate(1)\n  date.setHours(0, 0, 0, 0)\n  date.setMonth((quarter - 1) * 3)\n\n  return date\n}\n\n/**\n * 获取给定日期所在年份的第一天的开始日期\n *\n * @param date 原始日期\n * @param startOn 设定年的开始月份，默认为一月\n */\nexport function startOfYear(date: Dateable, startOn = 0) {\n  startOn = startOn % 11\n\n  if (startOn < 0) {\n    startOn += 11\n  }\n\n  date = toDate(date)\n\n  const month = date.getMonth()\n  const difference = (month < startOn ? 11 : 0) + month - startOn\n\n  date.setMonth(date.getMonth() - difference)\n  date.setDate(1)\n  date.setHours(0, 0, 0, 0)\n\n  return date\n}\n\n/**\n * 比较两个日期相差的毫秒\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceMilliseconds(left: Dateable, right: Dateable) {\n  left = toDate(left)\n  right = toDate(right)\n\n  return right.getTime() - left.getTime()\n}\n\n/**\n * 比较两个日期相差的秒\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceSeconds(left: Dateable, right: Dateable) {\n  const diff = differenceMilliseconds(left, right) / SECOND_ON_MILLS\n\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\n/**\n * 比较两个日期相差的分钟\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceMinutes(left: Dateable, right: Dateable) {\n  const diff = differenceMilliseconds(left, right) / MINUTE_ON_MILLS\n\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\n/**\n * 比较两个日期相差的小时\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceHours(left: Dateable, right: Dateable) {\n  const diff = differenceMilliseconds(left, right) / HOUR_ON_MILLS\n\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\n/**\n * 比较两个日期相差的天数\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceDays(left: Dateable, right: Dateable) {\n  left = startOfDay(left)\n  right = startOfDay(right)\n\n  return (right.getTime() - left.getTime()) / DAY_ON_MILLIS\n}\n\n/**\n * 比较两个日期相差的周\n *\n * @param left 原始日期\n * @param right 原始日期\n * @param weekStartOn 设定周的第一天，默认为周日\n */\nexport function differenceWeeks(left: Dateable, right: Dateable, weekStartOn = 0) {\n  left = startOfWeek(left, weekStartOn)\n  right = startOfWeek(right, weekStartOn)\n\n  return (right.getTime() - left.getTime()) / WEEK_ON_MILLIS\n}\n\n/**\n * 比较两个日期相差的月\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceMonths(left: Dateable, right: Dateable) {\n  left = toDate(left)\n  right = toDate(right)\n\n  const yearDiff = right.getFullYear() - left.getFullYear()\n  const monthDiff = right.getMonth() - left.getMonth()\n\n  return yearDiff * 12 + monthDiff\n}\n\n/**\n * 比较两个日期相差的季度\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceQuarters(left: Dateable, right: Dateable) {\n  left = toDate(left)\n  right = toDate(right)\n\n  const yearDiff = right.getFullYear() - left.getFullYear()\n  const quarterDiff = getQuarter(right) - getQuarter(left)\n\n  return yearDiff * 4 + quarterDiff\n}\n\n/**\n * 比较两个日期相差的年份\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceYears(left: Dateable, right: Dateable) {\n  left = toDate(left)\n  right = toDate(right)\n\n  return right.getFullYear() - left.getFullYear()\n}\n\n/**\n * 升序比较两个日期大小，用于给数组的 sort 方法使用\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function compareAsc(left: Dateable, right: Dateable) {\n  left = toDate(left)\n  right = toDate(right)\n\n  const diff = left.getTime() - right.getTime()\n\n  return diff < 0 ? -1 : diff > 0 ? 1 : diff\n}\n\n/**\n * 降序比较两个日期大小，用于给数组的 sort 方法使用\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function compareDesc(left: Dateable, right: Dateable) {\n  return -compareAsc(left, right)\n}\n\n/**\n * 比较两个日期相差的完整秒\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceFullSeconds(left: Dateable, right: Dateable) {\n  left = startOfSecond(left)\n  right = startOfSecond(right)\n\n  return differenceSeconds(left, right)\n}\n\n/**\n * 比较两个日期相差的完整分钟\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceFullMinutes(left: Dateable, right: Dateable) {\n  left = startOfMinute(left)\n  right = startOfMinute(right)\n\n  return differenceMinutes(left, right)\n}\n\n/**\n * 比较两个日期相差的完整小时\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceFullHours(left: Dateable, right: Dateable) {\n  left = startOfHour(left)\n  right = startOfHour(right)\n\n  return differenceHours(left, right)\n}\n\n/**\n * 比较两个日期相差的完整天\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceFullDays(left: Dateable, right: Dateable) {\n  const sign = compareDesc(left, right)\n  const difference = Math.abs(differenceDays(left, right))\n\n  left = toDate(left)\n  left.setDate(left.getDate() + sign * difference)\n\n  const isLastNotFull = compareDesc(left, right) === -sign\n\n  return sign * (difference - (isLastNotFull ? 1 : 0))\n}\n\n/**\n * 比较两个日期相差的完整周\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceFullWeeks(left: Dateable, right: Dateable) {\n  const diff = differenceFullDays(left, right) / WEEK_ON_DAYS\n\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\n/**\n * 比较两个日期相差的完整月\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceFullMonths(left: Dateable, right: Dateable) {\n  const sign = compareDesc(left, right)\n  const difference = Math.abs(differenceMonths(left, right))\n\n  left = toDate(left)\n  left.setMonth(left.getMonth() + sign * difference)\n\n  const isLastNotFull = compareDesc(left, right) === -sign\n\n  return sign * (difference - (isLastNotFull ? 1 : 0))\n}\n\n/**\n * 比较两个日期相差的完整季度\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceFullQuarters(left: Dateable, right: Dateable) {\n  const diff = differenceFullMonths(left, right) / 3\n\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\n/**\n * 比较两个日期相差的完整年份\n *\n * @param left 原始日期\n * @param right 原始日期\n */\nexport function differenceFullYears(left: Dateable, right: Dateable) {\n  const sign = compareDesc(left, right)\n  const difference = Math.abs(differenceYears(left, right))\n\n  left = toDate(left)\n  left.setFullYear(left.getFullYear() + sign * difference)\n\n  const isLastNotFull = compareDesc(left, right) === -sign\n\n  return sign * (difference - (isLastNotFull ? 1 : 0))\n}\n","/**\n * 深度拷贝对象或数组 (避免一层死循环)\n *\n * @param obj 需要拷贝的对象或数组\n */\nexport function deepClone<T>(obj: T): T {\n  if (obj === null || typeof obj !== 'object') {\n    return obj\n  }\n\n  const _root = (Array.isArray(obj) ? [] : {}) as any\n\n  // 循环数组栈\n  const loopList: Array<{\n    parent: Record<string, any>,\n    key?: string,\n    data: Record<string, any>\n  }> = [\n    {\n      parent: _root,\n      key: undefined,\n      data: obj\n    }\n  ]\n\n  while (loopList.length) {\n    // 先入后出，深度优先\n    const node = loopList.pop()!\n    const { parent, key, data } = node\n    const type = Array.isArray(data) ? 'array' : 'object'\n\n    if (!parent) continue\n\n    // 初始化克隆对象_root\n    let res = parent\n\n    if (typeof key !== 'undefined') {\n      res = parent[key] = type === 'array' ? [] : {}\n    }\n\n    Object.keys(data).forEach(i => {\n      const _data = data[i]\n\n      // 避免一层死循环\n      if (_data === data) {\n        res[i] = res\n      } else if (_data !== null && typeof _data === 'object') {\n        loopList.push({\n          parent: res,\n          key: i,\n          data: _data\n        })\n      } else {\n        res[i] = _data\n      }\n    })\n  }\n\n  return _root\n}\n","const defaultMessage = 'This object was destroyed, do not use it anywhere'\nconst returnTrue = () => true\n\nexport function destroyObject(object: any, message = defaultMessage) {\n  const throwDestroyed = () => {\n    throw new Error(message)\n  }\n\n  Object.keys(object).forEach(name => {\n    if (typeof object[name] === 'function') {\n      object[name] = throwDestroyed.bind(object)\n    } else {\n      object[name] = null\n    }\n  })\n\n  Object.getOwnPropertyNames(object.constructor.prototype).forEach(name => {\n    if (name !== 'constructor' && typeof object[name] === 'function') {\n      object[name] = throwDestroyed.bind(object)\n    }\n  })\n\n  object.isDestroyed = returnTrue\n}\n","import { isClient, isDefined } from './common'\n\nexport interface TransferNode extends Node {\n  __transferNode?: Node,\n  __transferElement?: Node\n}\n\nexport interface EventPayload extends EventInit {\n  type: string,\n  [prop: string]: any\n}\n\n/**\n * Whether current interaction is using touch.\n */\nexport const USE_TOUCH = isClient && ('ontouchstart' in window || getMaxTouchPoints() > 0)\nexport const CLICK_TYPE = USE_TOUCH ? 'pointerdown' : 'click'\n\nfunction getMaxTouchPoints() {\n  return typeof navigator !== 'undefined'\n    ? navigator.maxTouchPoints || ((navigator as any).msMaxTouchPoints as number) || 0\n    : 0\n}\n\nconst events: Map<string, Set<TransferNode>> = new Map()\n\nexport function createEvent(type: string) {\n  if (!events.has(type)) {\n    events.set(type, new Set())\n  }\n}\n\nexport function getObservers(type: string) {\n  return events.get(type) ?? events.set(type, new Set()).get(type)!\n}\n\nexport function observe(el: TransferNode, types: string | string[]) {\n  if (typeof types === 'string') {\n    types = [types as string]\n  }\n\n  if (Array.isArray(types)) {\n    for (let i = 0, len = types.length; i < len; ++i) {\n      const type = types[i]\n\n      if (!events.has(type)) {\n        events.set(type, new Set())\n      }\n\n      events.get(type)!.add(el)\n    }\n  }\n}\n\nexport function disconnect(el: TransferNode, types: string | string[]) {\n  if (typeof types === 'string') {\n    types = [types as string]\n  }\n\n  if (Array.isArray(types)) {\n    for (let i = 0, len = types.length; i < len; ++i) {\n      const type = types[i]\n\n      if (events.has(type)) {\n        events.get(type)?.delete(el)\n      }\n    }\n  }\n}\n\nexport function dispatchEvent(el: TransferNode, payload: EventPayload, Event = window.Event) {\n  const { type, bubbles = false, cancelable = false, ...data } = payload\n\n  if (!isDefined(type) || type === '') return false\n\n  let event\n\n  if (isDefined(Event)) {\n    event = new Event(type, { bubbles, cancelable })\n  } else {\n    event = document.createEvent('HTMLEvents')\n    event.initEvent(type, bubbles, cancelable)\n  }\n\n  Object.assign(event, data)\n\n  return el.dispatchEvent(event)\n}\n","import type { TransferNode } from './dom-event'\n\nconst TABABLE_SELECTOR = [\n  'button',\n  '[href]:not(.disabled)',\n  'input',\n  'select',\n  'textarea',\n  '[tabindex]',\n  '[contenteditable]'\n]\n  .map(s => `${s}:not(:disabled):not([disabled])`)\n  .join(', ')\n\nfunction isElement(el?: Element | null): el is HTMLElement {\n  return !!el && el.nodeType === Node.ELEMENT_NODE\n}\n\nfunction ensureElement(el?: Element | null) {\n  return isElement(el) ? el : document.body\n}\n\nexport function queryAll(selector: string, root?: Element | null) {\n  if (!selector) return []\n\n  return Array.from(ensureElement(root).querySelectorAll(selector)) as HTMLElement[]\n}\n\nexport function isFocusIn(el?: Element | null) {\n  const activeEl = document.activeElement as HTMLElement\n\n  if (!isElement(el) || !activeEl) return false\n\n  return el === activeEl || contains(activeEl, el)\n}\n\nexport function contains(el?: Element | null, parent?: HTMLElement | null) {\n  if (!el || !parent) return false\n\n  const tel = (parent as TransferNode).__transferElement\n\n  return parent.contains(el) || (!!tel && (tel === el || tel.contains(el)))\n}\n\nexport function isHidden(el?: Element | null) {\n  if (!isElement(el) || !el.parentNode || !contains(el, document.body)) {\n    return true\n  }\n\n  if (el.style.display === 'none') {\n    return true\n  }\n\n  const rect = el.getBoundingClientRect()\n\n  return !(rect && rect.width > 0 && rect.height > 0)\n}\n\nexport function isVisible(el?: Element | null) {\n  return !isHidden(el)\n}\n\nexport function isDisabled(el?: Element | null) {\n  return (\n    !isElement(el) ||\n    (el.hasAttribute('disabled') && el.getAttribute('disabled') !== 'false') ||\n    (el as HTMLInputElement).disabled\n  )\n}\n\nexport function queryTabables(root?: HTMLElement, includeDisabled = false) {\n  const isDis = includeDisabled ? () => false : isDisabled\n\n  return queryAll(TABABLE_SELECTOR, root).filter(\n    el => isVisible(el) && el.tabIndex > -1 && !isDis(el)\n  )\n}\n\nexport function getXPadding(el: HTMLElement | null) {\n  if (!el) return 0\n\n  const computedStyle = getComputedStyle(el)\n  const padding = parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight)\n\n  return padding || 0\n}\n\nexport function getYPadding(el: HTMLElement | null) {\n  if (!el) return 0\n\n  const computedStyle = getComputedStyle(el)\n  const padding = parseFloat(computedStyle.paddingTop) + parseFloat(computedStyle.paddingBottom)\n\n  return padding || 0\n}\n\nexport function getXMargin(el: HTMLElement | null) {\n  if (!el) return 0\n\n  const computedStyle = getComputedStyle(el)\n  const margin = parseFloat(computedStyle.marginLeft) + parseFloat(computedStyle.marginRight)\n\n  return margin || 0\n}\n\nexport function getYMargin(el: HTMLElement | null) {\n  if (!el) return 0\n\n  const computedStyle = getComputedStyle(el)\n  const margin = parseFloat(computedStyle.marginTop) + parseFloat(computedStyle.marginBottom)\n\n  return margin || 0\n}\n\nexport function getXBorder(el: HTMLElement | null) {\n  if (!el) return 0\n\n  const computedStyle = getComputedStyle(el)\n  const width =\n    parseFloat(computedStyle.borderLeftWidth) + parseFloat(computedStyle.borderRightWidth)\n\n  return width || 0\n}\n\nexport function getYBorder(el: HTMLElement | null) {\n  if (!el) return 0\n\n  const computedStyle = getComputedStyle(el)\n  const width =\n    parseFloat(computedStyle.borderTopWidth) + parseFloat(computedStyle.borderBottomWidth)\n\n  return width || 0\n}\n\nexport function getRangeWidth(el: HTMLElement | null) {\n  if (!el) return 0\n\n  const range = document.createRange()\n\n  range.setStart(el, 0)\n  range.setEnd(el, el.childNodes.length)\n\n  const rangeWidth = range.getBoundingClientRect().width\n  const xPadding = getXPadding(el)\n\n  return rangeWidth + xPadding\n}\n","const escapeRE = /[\"'&<>]/\n\nexport function escapeHtml(string: unknown) {\n  const str = '' + string\n  const match = escapeRE.exec(str)\n\n  if (!match) {\n    return str\n  }\n\n  let html = ''\n  let escaped: string\n  let index: number\n  let lastIndex = 0\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escaped = '&quot;'\n        break\n      case 38: // &\n        escaped = '&amp;'\n        break\n      case 39: // '\n        escaped = '&#39;'\n        break\n      case 60: // <\n        escaped = '&lt;'\n        break\n      case 62: // >\n        escaped = '&gt;'\n        break\n      default:\n        continue\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index)\n    }\n\n    lastIndex = index + 1\n    html += escaped\n  }\n\n  return lastIndex !== index ? html + str.substring(lastIndex, index) : html\n}\n","export type EventType = number | string | symbol\nexport type EventHandler = (...payload: any[]) => void\nexport type EventHandlerSet = Set<EventHandler>\nexport type EventHandlerMap = Map<EventType, EventHandlerSet>\n\nexport interface EventEmitter {\n  on: (type: EventType, handler: EventHandler) => void,\n  off: (type: EventType, handler: EventHandler) => void,\n  clear: (type: EventType) => void,\n  clearAll: () => void,\n  emit: (type: EventType, ...payload: any[]) => void\n}\n\nexport function createEventEmitter() {\n  const handlerMap: EventHandlerMap = new Map()\n\n  return {\n    on(type, handler) {\n      const handlers = handlerMap.get(type)\n      const added = handlers?.add(handler)\n\n      if (!added) {\n        handlerMap.set(type, new Set([handler]))\n      }\n    },\n    off(type, handler) {\n      const handlers = handlerMap.get(type)\n\n      if (handlers) {\n        handlers.delete(handler)\n      }\n    },\n    clear(type) {\n      const handlers = handlerMap.get(type)\n\n      if (handlers) {\n        handlers.clear()\n      }\n    },\n    clearAll() {\n      handlerMap.clear()\n    },\n    emit(type, ...payload) {\n      const handlers = handlerMap.get(type)\n\n      if (handlers) {\n        handlers.forEach(handler => {\n          handler(...payload)\n        })\n      }\n    }\n  } as EventEmitter\n}\n","function logOnce(message: string, cache: Set<string>, logFn: (...data: any[]) => void) {\n  if (message && !cache.has(message)) {\n    logFn(message)\n    cache.add(message)\n  }\n}\n\nconst infoCache = new Set<string>()\n\nexport function infoOnce(message: string, logFn = console.info) {\n  logOnce(message, infoCache, logFn)\n}\n\nconst warnCache = new Set<string>()\n\nexport function warnOnce(message: string, logFn = console.warn) {\n  logOnce(message, warnCache, logFn)\n}\n\nconst errorCache = new Set<string>()\n\nexport function errorOnce(message: string, logFn = console.warn) {\n  logOnce(message, errorCache, logFn)\n}\n","/**\n * 将一个函数或方法进行节流\n *\n * @param method 需要节流的方法，需自行绑定 this\n * @param delay 节流后的触发间隔，默认 16 ms (1 帧/秒)\n */\nexport function throttle<T extends (...args: any[]) => any>(method: T, delay = 16) {\n  if (typeof method !== 'function') {\n    return method\n  }\n\n  let start = Date.now()\n  let timer: ReturnType<typeof setTimeout>\n\n  return function (...args: Parameters<T>) {\n    const current = Date.now()\n    const remaining = start + delay - current\n\n    clearTimeout(timer)\n\n    if (remaining <= 0) {\n      method(...args)\n      start = Date.now()\n    } else {\n      timer = setTimeout(() => {\n        method(...args)\n      }, delay)\n    }\n  }\n}\n\n/**\n * 将一个函数或方法进行防抖\n *\n * @param method 需要防抖的方法，需自行绑定 this\n * @param delay 防抖的限制时间，默认 100ms\n */\nexport function debounce<T extends (...args: any[]) => any>(method: T, delay = 100) {\n  if (typeof method !== 'function') {\n    return method\n  }\n\n  let timer: ReturnType<typeof setTimeout>\n\n  return function (...args: Parameters<T>) {\n    clearTimeout(timer)\n\n    timer = setTimeout(() => {\n      method(...args)\n    }, delay)\n  }\n}\n\n/**\n * 针对每个微任务，将一个函数或方法进行防抖\n *\n * @param method 需要防抖的方法，需自行绑定 this\n */\nexport function debounceMinor<T extends (...args: any[]) => any>(method: T) {\n  if (typeof method !== 'function') {\n    return method\n  }\n\n  let called = false\n  let lastArgs: Parameters<T>\n\n  return function (...args: Parameters<T>) {\n    lastArgs = args\n\n    if (!called) {\n      called = true\n\n      Promise.resolve().then(() => {\n        method(...lastArgs)\n        called = false\n      })\n    }\n  }\n}\n\n/**\n * 针对每一帧，将一个函数或方法进行防抖\n *\n * @param method 需要防抖的方法，需自行绑定 this\n */\nexport function debounceFrame<T extends (...args: any[]) => any>(method: T) {\n  if (typeof method !== 'function') {\n    return method\n  }\n\n  let called = false\n  let lastArgs: Parameters<T>\n\n  return function (...args: Parameters<T>) {\n    lastArgs = args\n\n    if (!called) {\n      called = true\n\n      requestAnimationFrame(() => {\n        method(...lastArgs)\n        called = false\n      })\n    }\n  }\n}\n\nconst tickCallbacks = new Set<(...args: any[]) => any>()\nconst tickArgsMap = new WeakMap<any, any[]>()\n\nfunction flushTickCallbacks() {\n  tickCallbacks.forEach(fn => {\n    fn(...tickArgsMap.get(fn)!)\n  })\n  tickCallbacks.clear()\n}\n\n/**\n * 在下一微任务，仅执行一次传入的方法\n *\n * @param method 需要执行的方法\n * @param args 方法的额外参数，在方法调用前多次传入将会覆盖之前的参数\n */\nexport function nextTickOnce<T extends (...args: any[]) => any>(method: T, ...args: any[]) {\n  if (typeof method !== 'function') {\n    return method\n  }\n\n  tickArgsMap.set(method, args)\n\n  if (tickCallbacks.has(method)) {\n    return\n  }\n\n  tickCallbacks.add(method)\n\n  if (tickCallbacks.size === 1) {\n    Promise.resolve().then(flushTickCallbacks)\n  }\n}\n\nconst frameCallbacks = new Set<(...args: any[]) => any>()\nconst frameArgsMap = new WeakMap<any, any[]>()\n\nfunction flushFrameCallbacks() {\n  frameCallbacks.forEach(fn => {\n    fn(...frameArgsMap.get(fn)!)\n  })\n  frameCallbacks.clear()\n}\n\n/**\n * 在下一渲染帧，仅执行一次传入的方法\n *\n * @param method 需要执行的方法\n * @param args 方法的额外参数，在方法调用前多次传入将会覆盖之前的参数\n */\nexport function nextFrameOnce<T extends (...args: any[]) => any>(method: T, ...args: any[]) {\n  if (typeof method !== 'function') {\n    return method\n  }\n\n  frameArgsMap.set(method, args)\n\n  if (frameCallbacks.has(method)) {\n    return\n  }\n\n  frameCallbacks.add(method)\n\n  if (frameCallbacks.size === 1) {\n    requestAnimationFrame(flushFrameCallbacks)\n  }\n}\n","import { isClient } from './common'\n\nlet flexGapSupported: boolean | null = null\n\nexport function supportFlexGap() {\n  if (!isClient) {\n    return true\n  }\n\n  if (flexGapSupported === null) {\n    const flex = document.createElement('div')\n\n    flex.style.display = 'flex'\n    flex.style.flexDirection = 'column'\n    flex.style.rowGap = '1px'\n\n    flex.appendChild(document.createElement('div'))\n    flex.appendChild(document.createElement('div'))\n    document.body.appendChild(flex)\n\n    flexGapSupported = flex.scrollHeight === 1\n\n    document.body.removeChild(flex)\n  }\n\n  return flexGapSupported\n}\n\nlet imgLoadingSupported: boolean | null = null\n\nexport function supportImgLoading() {\n  if (!isClient) {\n    return true\n  }\n\n  if (imgLoadingSupported === null) {\n    imgLoadingSupported = 'loading' in document.createElement('img')\n  }\n\n  return imgLoadingSupported\n}\n","import { isDefined, isFunction, isObject, toTrue } from './common'\nimport { deepClone } from './deep-clone'\n\nexport function ensureArray<T>(value: T | T[]) {\n  return Array.isArray(value) ? value : [value]\n}\n\nexport function callIfFunc<T>(value: T | (() => T)) {\n  return isFunction(value) ? value() : value\n}\n\nexport function normalizePath(path: string) {\n  return path.replace(/[\\\\/]+/g, '/')\n}\n\n/**\n * 根据数组元素中某个或多个属性的值转换为映射\n *\n * @param list 需要被转换的数组\n * @param prop 需要被转换的属性或提供一个读取方法\n * @param accessor 映射的值的读取方法，默认返回元素本身\n * @param isMap 是否使用 Map 对象储存结果\n */\nexport function transformListToMap<T = any, O = T>(\n  list: T[],\n  prop: keyof T | ((item: T) => any),\n  accessor?: (item: T) => O,\n  isMap?: false\n): Record<string, O>\nexport function transformListToMap<T = any, O = T, K extends keyof T = keyof T>(\n  list: T[],\n  prop: K,\n  accessor?: (item: T) => O,\n  isMap?: true\n): Map<T[K], O>\nexport function transformListToMap<T = any, O = T, K = any>(\n  list: T[],\n  prop: (item: T) => K,\n  accessor?: (item: T) => O,\n  isMap?: true\n): Map<K extends keyof T ? T[K] : unknown, O>\nexport function transformListToMap<T = any, O = T>(\n  list: T[],\n  prop: keyof T | ((item: T) => any),\n  accessor: (item: T) => O = v => v as any,\n  isMap = false\n) {\n  const map = (isMap ? new Map<string, any>() : {}) as any\n\n  if (!isDefined(prop)) return map\n\n  const set = isMap\n    ? (key: any, value: O) => map.set(key, value)\n    : (key: any, value: O) => (map[key] = value)\n  const propAccessor = isFunction(prop) ? prop : (item: T) => item[prop]\n\n  list.forEach(item => {\n    const key = propAccessor(item)\n\n    if (isDefined(key)) {\n      set(key, accessor(item))\n    }\n  })\n\n  return map\n}\n\n/**\n * 移除数组中的某个元素\n *\n * @param array 需要被移除元素的数组\n * @param item 需要被移除的元素, 或一个查找方法，如果元素为函数时则需要做一层简单包装\n * @param isFn 标记数组的元素是否为函数\n */\nexport function removeArrayItem<T = any>(\n  array: T[],\n  item: T | ((item: T) => boolean),\n  isFn = false\n): T | null {\n  let index = -1\n\n  if (isFn || typeof item !== 'function') {\n    index = array.findIndex(current => current === item)\n  } else {\n    index = array.findIndex(item as (item: T) => boolean)\n  }\n\n  if (~index) {\n    return array.splice(index, 1)[0]\n  }\n\n  return null\n}\n\n/**\n * 按照一定顺序的属性对数据进行分组\n *\n * @param list 需要分数的数据\n * @param props 需要按顺序分组的属性\n */\nexport function groupByProps<T = any>(\n  list: T[],\n  props: Array<string | ((item: T) => any)> | string | ((item: T) => any) = []\n): Record<string, T[]> {\n  if (typeof props === 'string' || typeof props === 'function') {\n    props = [props]\n  }\n\n  const propCount = props.length\n  const zipData: Record<string, any> = {}\n\n  for (const item of list) {\n    let data\n\n    for (let i = 0; i < propCount; ++i) {\n      const isLast = i === propCount - 1\n      const prop = props[i]\n      const value = typeof prop === 'function' ? prop(item) : item[prop as keyof T]\n\n      if (!data) {\n        if (!zipData[value]) {\n          zipData[value] = isLast ? [] : {}\n        }\n\n        data = zipData[value]\n      } else {\n        if (!data[value]) {\n          data[value] = isLast ? [] : {}\n        }\n\n        data = data[value]\n      }\n    }\n\n    data.push(item)\n  }\n\n  return zipData\n}\n\nexport interface TreeOptions<T = string> {\n  keyField?: T,\n  childField?: T,\n  parentField?: T,\n  rootId?: any\n}\n\n/**\n * Transform the given flatted list to tree\n *\n * @param list the flatted list\n * @param options the config for transforming\n */\nexport function transformTree<T = any>(list: T[], options: TreeOptions<keyof T> = {}) {\n  const {\n    keyField = 'id' as keyof T,\n    childField = 'children' as keyof T,\n    parentField = 'parent' as keyof T,\n    rootId = null\n  } = options\n\n  const hasRootId = isDefined(rootId) && rootId !== ''\n  const tree: T[] = []\n  const record = new Map<T[keyof T], T[]>()\n\n  for (let i = 0, len = list.length; i < len; ++i) {\n    const item = list[i]\n    const id = item[keyField]\n\n    if (hasRootId ? id === rootId : !isDefined(id)) {\n      continue\n    }\n\n    if (record.has(id)) {\n      (item as any)[childField] = record.get(id)!\n    } else {\n      (item as any)[childField] = []\n      record.set(id, (item as any)[childField])\n    }\n\n    if (item[parentField] && (!hasRootId || item[parentField] !== rootId)) {\n      const parentId = item[parentField]\n\n      if (!record.has(parentId)) {\n        record.set(parentId, [])\n      }\n\n      record.get(parentId)!.push(item)\n    } else {\n      tree.push(item)\n    }\n  }\n\n  return tree\n}\n\n/**\n * Transform the given tree to flatted list\n *\n * @param tree the tree\n * @param options the config for transforming\n */\nexport function flatTree<T = any>(\n  tree: T[],\n  options: TreeOptions<keyof T> & {\n    depthFirst?: boolean,\n    injectId?: boolean,\n    filter?: (item: T) => boolean,\n    cascaded?: boolean\n  } = {}\n) {\n  const {\n    keyField = 'id' as keyof T,\n    childField = 'children' as keyof T,\n    parentField = 'parent' as keyof T,\n    rootId = null,\n    depthFirst = false,\n    injectId = true,\n    filter = toTrue,\n    cascaded = false\n  } = options\n\n  const hasRootId = isDefined(rootId) && rootId !== ''\n  const list: T[] = []\n  const loop = [...tree]\n\n  let idCount = 1\n\n  while (loop.length) {\n    const item = loop.shift()!\n\n    const childrenValue = item[childField]\n    const children: T[] = Array.isArray(childrenValue) && childrenValue.length ? childrenValue : []\n\n    if (injectId && !item[keyField]) {\n      item[keyField] = idCount++ as any\n    }\n\n    const id = item[keyField]\n\n    if (\n      injectId &&\n      parentField &&\n      (hasRootId ? item[parentField] === rootId : !item[parentField])\n    ) {\n      (item as any)[parentField] = rootId\n    }\n\n    const filterResult = filter(item)\n\n    if (filterResult) list.push(item)\n\n    if (filterResult || !cascaded) {\n      for (let i = 0, len = children.length; i < len; ++i) {\n        const child = children[i]\n\n        if (injectId && parentField) {\n          child[parentField] = id\n        }\n\n        !depthFirst && loop.push(child)\n      }\n\n      if (depthFirst) {\n        loop.unshift(...children)\n      }\n    }\n  }\n\n  return list\n}\n\n/**\n * Walk the given tree value and call the callback for each node\n *\n * @param tree the tree to walk\n * @param cb the callback function\n * @param options the config for walk\n */\nexport function walkTree<T = any>(\n  tree: T[],\n  cb: (item: T, depth: number) => void,\n  options: {\n    depthFirst?: boolean,\n    childField?: keyof T\n  } = {}\n) {\n  const { childField = 'children' as keyof T, depthFirst = false } = options\n  const loop = [...tree.map(item => ({ item, depth: 0 }))]\n\n  while (loop.length) {\n    const { item, depth } = loop.shift()!\n    const children = item[childField] as T[]\n\n    cb(item, depth)\n\n    if (children?.length) {\n      loop[depthFirst ? 'unshift' : 'push'](...children.map(item => ({ item, depth: depth + 1 })))\n    }\n  }\n}\n\nexport interface SortOptions<T = string> {\n  key: T,\n  method?: (prev: any, next: any) => number,\n  accessor?: (...args: any[]) => any,\n  type?: 'asc' | 'desc',\n  params?: any[] // 传入读取器的额外参数\n}\n\nconst defaultSortMethod = (prev: any, next: any) => {\n  if (Number.isNaN(Number(prev) - Number(next))) {\n    return String(prev).localeCompare(next)\n  }\n\n  return prev - next\n}\n\n/**\n * 根据依赖的属性逐层排序\n *\n * @param list 需要排序的数组\n * @param props 排序依赖的属性 key-属性名 method-排序方法 accessor-数据获取方法 type-升降序\n */\nexport function sortByProps<T = any>(\n  list: T[],\n  props: keyof T | SortOptions<keyof T> | (keyof T | SortOptions<keyof T>)[]\n) {\n  if (\n    !list.sort ||\n    (isObject<SortOptions>(props) && !props.key) ||\n    !(props as string | SortOptions[]).length\n  ) {\n    return list\n  }\n\n  const sortedList = Array.from(list)\n\n  if (!Array.isArray(props)) {\n    props = [props]\n  }\n\n  const formattedProps = props\n    .map(\n      value =>\n        (typeof value === 'string'\n          ? {\n              key: value,\n              method: defaultSortMethod,\n              type: 'asc'\n            }\n          : value) as SortOptions<keyof T>\n    )\n    .map(value => {\n      if (typeof value.accessor !== 'function') {\n        value.accessor = (data: T) => data[value.key]\n      }\n\n      if (typeof value.method !== 'function') {\n        value.method = defaultSortMethod\n      }\n\n      value.params = Array.isArray(value.params) ? value.params : []\n\n      return value as Required<SortOptions>\n    })\n\n  sortedList.sort((prev, next) => {\n    let lastResult = 0\n\n    for (const prop of formattedProps) {\n      const { method, type, accessor, params } = prop\n      const desc = type === 'desc'\n      const result = method(accessor(prev, ...params), accessor(next, ...params))\n\n      lastResult = desc ? -result : result\n      // 若不为0则无需进行下一层排序\n      if (lastResult) break\n    }\n\n    return lastResult\n  })\n\n  return sortedList\n}\n\n/**\n * 将两个对象进行深度的动态合并\n *\n * @param sourceObj 用于接收合并的源对象\n * @param targetObj 被合并的对象，当属性名相同但值类型不同的情况，此对象的权重更高\n * @param isNewObj 标记合并至一个全新的对象（深度的）\n */\nexport function mergeObjects<T extends Record<string, any>, U extends Record<string, any>>(\n  sourceObj: T,\n  targetObj: U,\n  isNewObj = true\n) {\n  sourceObj = isNewObj ? deepClone(sourceObj) : sourceObj\n\n  const loop: Array<{\n    source: Record<string, any>,\n    target: Record<string, any>\n  }> = [\n    {\n      source: sourceObj,\n      target: targetObj\n    }\n  ]\n\n  while (loop.length) {\n    const { source, target } = loop.pop()!\n\n    Object.keys(target).forEach(key => {\n      if (isObject(target[key])) {\n        if (!isObject(source[key])) {\n          source[key] = {}\n        }\n\n        loop.push({\n          source: source[key],\n          target: target[key]\n        })\n      } else if (Array.isArray(target[key])) {\n        if (!Array.isArray(source[key])) {\n          source[key] = []\n        }\n\n        loop.push({\n          source: source[key],\n          target: target[key]\n        })\n      } else {\n        source[key] = target[key]\n      }\n    })\n  }\n\n  return sourceObj as T & U\n}\n\nexport function runQueueFrame(queue: Array<() => void>) {\n  queue = Array.from(queue)\n\n  let cancelled = false\n\n  const run = () => {\n    if (cancelled) return\n\n    queue.shift()?.()\n    queue.length && requestAnimationFrame(run)\n  }\n\n  run()\n\n  return () => (cancelled = true)\n}\n","import { Comment, Fragment, createTextVNode, isVNode } from 'vue'\n\nimport type { VNode, VNodeNormalizedChildren } from 'vue'\n\nexport function flatVNodes(children: VNodeNormalizedChildren) {\n  const result: VNode[] = []\n  const loop = Array.isArray(children) ? [...children] : []\n\n  while (loop.length) {\n    const vnode = loop.shift()!\n\n    if (vnode === null) continue\n\n    if (Array.isArray(vnode)) {\n      loop.unshift(...vnode)\n    }\n\n    if (\n      typeof vnode !== 'string' &&\n      typeof vnode !== 'number' &&\n      (!isVNode(vnode) || vnode.type === Comment)\n    ) { continue }\n\n    if (typeof vnode === 'string' || typeof vnode === 'number') {\n      result.push(createTextVNode(String(vnode)))\n    } else if (vnode.type === Fragment && Array.isArray(vnode.children)) {\n      loop.unshift(vnode.children)\n    } else {\n      result.push(vnode)\n    }\n  }\n\n  return result\n}\n","/**\n * 将给定的常量字符串类型拓展为不区分大小写的任意组合\n */\nexport type AnyCase<S> = string extends S\n  ? string\n  : S extends `${infer F1}${infer F2}${infer R}`\n    ? `${Uppercase<F1> | Lowercase<F1>}${Uppercase<F2> | Lowercase<F2>}${AnyCase<R>}`\n    : S extends `${infer F}${infer R}`\n      ? `${Uppercase<F> | Lowercase<F>}${AnyCase<R>}`\n      : ''\n\n/**\n * 将命名转换为短横线命名\n *\n * @param value 需要转换的命名\n */\nexport function toKebabCase(value: string) {\n  return (\n    value.charAt(0).toLowerCase() +\n    value\n      .slice(1)\n      .replace(/([A-Z])/g, '-$1')\n      .toLowerCase()\n  )\n}\n\ntype CapitalCase<T extends string> = T extends `${infer First} ${infer Rest}`\n  ? CapitalCase<`${First}-${Rest}`>\n  : T extends `${infer First}-${infer Rest}`\n    ? `${Capitalize<First>}${CapitalCase<Rest>}`\n    : Capitalize<T>\n\n/**\n * 将命名转换为首字母大写的驼峰\n *\n * @param value 需要转换的命名\n */\nexport function toCapitalCase<T extends string>(value: T) {\n  value = value.trim().replace(/\\s+/g, '-') as T\n  value = value.replace(/-+(\\w)/g, (_, char) => (char ? char.toUpperCase() : '')) as T\n\n  return (value.charAt(0).toLocaleUpperCase() + value.slice(1)).replace(\n    /[^\\w]/g,\n    ''\n  ) as CapitalCase<T>\n}\n"],"names":["isClient","isIOS","_a","toString","hasOwnProperty","is","value","type","has","key","isDefined","isNull","isNumber","isNaN","isString","isBoolean","isTrue","isFalse","isSymbol","isBigInt","isArray","isObject","isPromise","isFunction","isSet","isMap","isDate","isRegExp","isEmpty","isElement","noop","toTrue","toFalse","range","size","start","step","array","i","getType","randomString","length","chars","maxPos","string","INTEGER_REG","NUMBER_REG","NUMBER_UNIT","COLOR_REG_3","COLOR_REG_4","RGB_REG","RGBA_REG","HSL_REG","HSLA_REG","HSV_REG","HSVA_REG","HEX_REG_3","HEX_REG_4","HEX_REG_6","HEX_REG_8","NAMED_COLORS","COLOR_NAMES","isColor","parseStringColor","color","toRgbString","named","match","g","b","normalizeRgb","normalizeAlpha","h","s","l","normalizeHsl","toHslString","v","normalizeHsv","toHsvString","convertHexToDecimal","parseColor","a","rgb","parseColorToRgba","hsl","rgbToHsl","hsv","rgbToHsv","hex","rgbToHex","hex8","rgbaToHex","originColor","hslToRgb","hsvToRgb","boundRange","isPercentage","parsePercentage","r","q","p","hueToRgb","max","min","d","hslToHsv","hsvToHsl","f","t","mod","allow3Char","repairDigits","isRepetitive","allow4Char","convertDecimalToHex","mixColor","color1","color2","weight","rgba1","rgba2","originalWeight","normalizedWeight","alphaDistance","weight1","weight2","adjustAlpha","alpha","rgba","randomColor","withAlpha","str","number","percent","lowBit","num","createBITree","tree","add","index","delta","sum","get","boundIndex","limit","left","right","middle","total","toNumber","doubleDigits","digitLength","eSplit","len","segmentNumber","segment","separator","integer","decimal","formatRegExp","toFixed","snum","pointPos","nums","targetPos","multipleFixed","multiple","round","criticalValue","ceilValue","SIZE_UNIT_WITH_AUTO","formatByteSize","byte","unit","upperUnit","power","targetSize","toPrecision","precision","multipleInt","dLength","createOperation","operation","numbers","result","times","number1","number2","int1","int2","base","plus","minus","divide","SECOND_ON_MILLS","MINUTE_ON_SECONDS","MINUTE_ON_MILLS","HOUR_ON_MINUTES","HOUR_ON_SECONDS","HOUR_ON_MILLS","DAY_ON_HOURS","DAY_ON_MINUTES","DAY_ON_SECONDS","DAY_ON_MILLIS","WEEK_ON_DAYS","WEEK_ON_HOURS","WEEK_ON_MINUTES","WEEK_ON_SECONDS","WEEK_ON_MILLIS","QUARTER_ON_MONTHS","YEAR_ON_QUARTERS","YEAR_ON_MONTHS","formatters","date","year","month","day","hour","minute","second","quarter","quotationRegExp","toDate","any","strict","format","pattern","matchs","substring","firstCharacter","formatter","getTime","getQuarter","weeksForChinese","getChineseWeek","addMilliseconds","amount","addSeconds","addMinutes","addHours","addHalfDays","addDays","addWeeks","addMonths","addQuarters","addYears","rangeDate","dateRange","rangeMonth","getLastSunday","startOfSecond","startOfMinute","startOfHour","startOfDay","endOfDay","startOfWeek","startOn","difference","isLeapYear","startOfMonth","lastDay","startOfQuarter","startOfYear","differenceMilliseconds","differenceSeconds","diff","differenceMinutes","differenceHours","differenceDays","differenceWeeks","weekStartOn","differenceMonths","yearDiff","monthDiff","differenceQuarters","quarterDiff","differenceYears","compareAsc","compareDesc","differenceFullSeconds","differenceFullMinutes","differenceFullHours","differenceFullDays","sign","isLastNotFull","differenceFullWeeks","differenceFullMonths","differenceFullQuarters","differenceFullYears","deepClone","obj","_root","loopList","node","parent","data","res","_data","defaultMessage","returnTrue","destroyObject","object","message","throwDestroyed","name","USE_TOUCH","getMaxTouchPoints","CLICK_TYPE","events","createEvent","getObservers","observe","el","types","disconnect","dispatchEvent","payload","Event","bubbles","cancelable","event","TABABLE_SELECTOR","ensureElement","queryAll","selector","root","isFocusIn","activeEl","contains","tel","isHidden","rect","isVisible","isDisabled","queryTabables","includeDisabled","isDis","getXPadding","computedStyle","getYPadding","getXMargin","getYMargin","getXBorder","getYBorder","getRangeWidth","rangeWidth","xPadding","escapeRE","escapeHtml","html","escaped","lastIndex","createEventEmitter","handlerMap","handler","handlers","logOnce","cache","logFn","infoCache","infoOnce","warnCache","warnOnce","errorCache","errorOnce","throttle","method","delay","timer","args","current","remaining","debounce","debounceMinor","called","lastArgs","debounceFrame","tickCallbacks","tickArgsMap","flushTickCallbacks","fn","nextTickOnce","frameCallbacks","frameArgsMap","flushFrameCallbacks","nextFrameOnce","flexGapSupported","supportFlexGap","flex","imgLoadingSupported","supportImgLoading","ensureArray","callIfFunc","normalizePath","path","transformListToMap","list","prop","accessor","map","set","propAccessor","item","removeArrayItem","isFn","groupByProps","props","propCount","zipData","isLast","transformTree","options","keyField","childField","parentField","rootId","hasRootId","record","id","parentId","flatTree","depthFirst","injectId","filter","cascaded","loop","idCount","childrenValue","children","filterResult","child","walkTree","cb","depth","defaultSortMethod","prev","next","sortByProps","sortedList","formattedProps","lastResult","params","desc","mergeObjects","sourceObj","targetObj","isNewObj","source","target","runQueueFrame","queue","cancelled","run","flatVNodes","vnode","isVNode","Comment","createTextVNode","Fragment","toKebabCase","toCapitalCase","_","char"],"mappings":"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"}